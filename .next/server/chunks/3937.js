exports.id=3937,exports.ids=[3937],exports.modules={24458:e=>{function t(e){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=24458,e.exports=t},93937:(e,t,n)=>{"use strict";n.r(t),n.d(t,{AgeGenderNet:()=>MW,BoundingBox:()=>Dc,Box:()=>Dh,ComposableTask:()=>Og,ComputeAllFaceDescriptorsTask:()=>OQ,ComputeFaceDescriptorsTaskBase:()=>OJ,ComputeSingleFaceDescriptorTask:()=>O0,DetectAllFaceLandmarksTask:()=>O2,DetectAllFacesTask:()=>O6,DetectFaceLandmarksTaskBase:()=>O1,DetectFacesTaskBase:()=>O4,DetectSingleFaceLandmarksTask:()=>O3,DetectSingleFaceTask:()=>O5,Dimensions:()=>R5,FACE_EXPRESSION_LABELS:()=>MT,FaceDetection:()=>Df,FaceDetectionNet:()=>Ot,FaceExpressionNet:()=>MC,FaceExpressions:()=>M_,FaceLandmark68Net:()=>MU,FaceLandmark68TinyNet:()=>MH,FaceLandmarkNet:()=>Mj,FaceLandmarks:()=>DN,FaceLandmarks5:()=>DT,FaceLandmarks68:()=>D_,FaceMatch:()=>DC,FaceMatcher:()=>Lr,FaceRecognitionNet:()=>MJ,Gender:()=>MB,LabeledBox:()=>DE,LabeledFaceDescriptors:()=>D$,NetInput:()=>D4,NeuralNetwork:()=>Mi,ObjectDetection:()=>Dm,Point:()=>Dd,PredictedBox:()=>DA,Rect:()=>DS,SsdMobilenetv1:()=>M7,SsdMobilenetv1Options:()=>M8,TinyFaceDetector:()=>Ow,TinyFaceDetectorOptions:()=>Of,TinyYolov2:()=>Oc,TinyYolov2Options:()=>Op,allFaces:()=>Lt,allFacesSsdMobilenetv1:()=>O9,allFacesTinyYolov2:()=>Le,awaitMediaLoaded:()=>DY,bufferToImage:()=>DZ,computeFaceDescriptor:()=>OC,createCanvas:()=>DQ,createCanvasFromMedia:()=>D0,createFaceDetectionNet:()=>Oe,createFaceRecognitionNet:()=>MQ,createSsdMobilenetv1:()=>M9,createTinyFaceDetector:()=>La,createTinyYolov2:()=>Om,detectAllFaces:()=>O7,detectFaceLandmarks:()=>OT,detectFaceLandmarksTiny:()=>O_,detectLandmarks:()=>OW,detectSingleFace:()=>O8,draw:()=>R3,env:()=>DB,euclideanDistance:()=>Ln,extendWithAge:()=>M2,extendWithFaceDescriptor:()=>M0,extendWithFaceDetection:()=>DR,extendWithFaceExpressions:()=>M$,extendWithFaceLandmarks:()=>MR,extendWithGender:()=>M4,extractFaceTensors:()=>D8,extractFaces:()=>D5,fetchImage:()=>D9,fetchJson:()=>Me,fetchNetWeights:()=>Mt,fetchOrThrow:()=>D7,fetchVideo:()=>Mn,getContext2dOrThrow:()=>DV,getMediaDimensions:()=>DJ,imageTensorToCanvas:()=>D1,imageToSquare:()=>D3,inverseSigmoid:()=>DI,iou:()=>Dg,isMediaElement:()=>D2,isMediaLoaded:()=>DX,isWithAge:()=>M1,isWithFaceDetection:()=>DF,isWithFaceExpressions:()=>ME,isWithFaceLandmarks:()=>MF,isWithGender:()=>M3,loadAgeGenderModel:()=>Oz,loadFaceDetectionModel:()=>OP,loadFaceExpressionModel:()=>OL,loadFaceLandmarkModel:()=>OD,loadFaceLandmarkTinyModel:()=>OM,loadFaceRecognitionModel:()=>OO,loadSsdMobilenetv1Model:()=>OA,loadTinyFaceDetectorModel:()=>OF,loadTinyYolov2Model:()=>OR,loadWeightMap:()=>Ma,locateFaces:()=>OB,matchDimensions:()=>Ms,minBbox:()=>Dy,nets:()=>Ok,nonMaxSuppression:()=>Db,normalize:()=>Dx,padToSquare:()=>Dv,predictAgeAndGender:()=>O$,recognizeFaceExpressions:()=>OE,resizeResults:()=>function e(t,n){let{width:r,height:a}=new R5(n.width,n.height);if(r<=0||a<=0)throw Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:r,height:a})}`);if(Array.isArray(t))return t.map(t=>e(t,{width:r,height:a}));if(MF(t)){let e=t.detection.forSize(r,a),n=t.unshiftedLandmarks.forSize(e.box.width,e.box.height);return MR(DR(t,e),n)}return DF(t)?DR(t,t.detection.forSize(r,a)):t instanceof DN||t instanceof Df?t.forSize(r,a):t},resolveInput:()=>DW,shuffleArray:()=>Dw,sigmoid:()=>Dk,ssdMobilenetv1:()=>OI,tf:()=>E,tinyFaceDetector:()=>OS,tinyYolov2:()=>ON,toNetInput:()=>D6,utils:()=>R6,validateConfig:()=>Oi,version:()=>Ls});var r,a,s,i,o,l,u,p,d,h,c,m,f,g,y,b,x,v,w,k,I,S,N,T=Object.defineProperty,_=n(24458),C=(e,t)=>{for(var n in t)T(e,n,{get:t[n],enumerable:!0})},E={};C(E,{Abs:()=>te,Acos:()=>tt,Acosh:()=>tn,AdadeltaOptimizer:()=>dR,AdagradOptimizer:()=>dD,AdamOptimizer:()=>dM,AdamaxOptimizer:()=>dO,Add:()=>tr,AddN:()=>ta,All:()=>ts,Any:()=>ti,ArgMax:()=>to,ArgMin:()=>tl,Asin:()=>tu,Asinh:()=>tp,Atan:()=>td,Atan2:()=>tc,Atanh:()=>th,AvgPool:()=>tm,AvgPool3D:()=>tg,AvgPool3DGrad:()=>ty,AvgPoolGrad:()=>tf,BackendWasm:()=>RP,BatchMatMul:()=>tb,BatchToSpaceND:()=>tx,Bincount:()=>tv,BitwiseAnd:()=>tw,BroadcastArgs:()=>tI,BroadcastTo:()=>tk,Callback:()=>vp,CallbackList:()=>fX,Cast:()=>tS,Ceil:()=>tN,ClipByValue:()=>tT,Complex:()=>t_,ComplexAbs:()=>tC,Concat:()=>tE,Conv2D:()=>t$,Conv2DBackpropFilter:()=>tA,Conv2DBackpropInput:()=>tF,Conv3D:()=>tR,Conv3DBackpropFilterV2:()=>tD,Conv3DBackpropInputV2:()=>tM,Cos:()=>tO,Cosh:()=>tL,CropAndResize:()=>tB,Cumprod:()=>tz,Cumsum:()=>tP,CustomCallback:()=>fJ,DataStorage:()=>eo,DenseBincount:()=>tW,DepthToSpace:()=>tV,DepthwiseConv2dNative:()=>tU,DepthwiseConv2dNativeBackpropFilter:()=>tG,DepthwiseConv2dNativeBackpropInput:()=>tH,Diag:()=>tj,Dilation2D:()=>tq,Dilation2DBackpropFilter:()=>tX,Dilation2DBackpropInput:()=>tK,Draw:()=>tY,ENV:()=>e8,EarlyStopping:()=>vc,Einsum:()=>tJ,Elu:()=>tQ,EluGrad:()=>t0,Environment:()=>e4,Equal:()=>t2,Erf:()=>t1,Exp:()=>t3,ExpandDims:()=>t4,Expm1:()=>t6,FFT:()=>t5,Fill:()=>t8,FlipLeftRight:()=>t7,Floor:()=>t9,FloorDiv:()=>ne,FromPixels:()=>rq,FusedBatchNorm:()=>nt,FusedConv2D:()=>rY,FusedDepthwiseConv2D:()=>rZ,GPGPUContext:()=>_v,GatherNd:()=>nr,GatherV2:()=>nn,GraphModel:()=>w2,Greater:()=>na,GreaterEqual:()=>ns,History:()=>fZ,IFFT:()=>no,Identity:()=>ni,Imag:()=>nl,InputSpec:()=>fn,IsFinite:()=>nu,IsInf:()=>np,IsNan:()=>nd,KernelBackend:()=>el,LRN:()=>nS,LRNGrad:()=>nN,LayerVariable:()=>m9,LayersModel:()=>gM,LeakyRelu:()=>nh,Less:()=>nc,LessEqual:()=>nm,LinSpace:()=>nf,Log:()=>ng,Log1p:()=>ny,LogSoftmax:()=>nk,LogicalAnd:()=>nb,LogicalNot:()=>nx,LogicalOr:()=>nv,LogicalXor:()=>nw,LowerBound:()=>nI,MathBackendCPU:()=>Ie,MathBackendWebGL:()=>CC,MatrixBandPart:()=>nT,Max:()=>n_,MaxPool:()=>nE,MaxPool3D:()=>nA,MaxPool3DGrad:()=>nF,MaxPoolGrad:()=>n$,MaxPoolWithArgmax:()=>nR,Maximum:()=>nC,Mean:()=>nD,Min:()=>nM,Minimum:()=>nO,MirrorPad:()=>nL,Mod:()=>nz,MomentumOptimizer:()=>dz,Multinomial:()=>nP,Multiply:()=>nB,Neg:()=>nW,NonMaxSuppressionV3:()=>nU,NonMaxSuppressionV4:()=>nG,NonMaxSuppressionV5:()=>nH,NotEqual:()=>nV,OP_SCOPE_SUFFIX:()=>a5,OneHot:()=>nq,OnesLike:()=>nj,Optimizer:()=>dF,OptimizerConstructors:()=>hE,Pack:()=>nK,PadV2:()=>nX,Pool:()=>nY,Pow:()=>nZ,Prelu:()=>nJ,Prod:()=>nQ,RMSPropOptimizer:()=>dP,RNN:()=>yR,RaggedGather:()=>n0,RaggedRange:()=>n1,RaggedTensorToTensor:()=>n2,Range:()=>n3,Rank:()=>is,Real:()=>n4,RealDiv:()=>tZ,Reciprocal:()=>n6,Reduction:()=>p7,Relu:()=>n5,Relu6:()=>rn,Reshape:()=>n8,ResizeBilinear:()=>re,ResizeBilinearGrad:()=>rt,ResizeNearestNeighbor:()=>n7,ResizeNearestNeighborGrad:()=>n9,Reverse:()=>rr,RotateWithOffset:()=>rK,Round:()=>ra,Rsqrt:()=>rs,SGDOptimizer:()=>dL,ScatterNd:()=>ri,SearchSorted:()=>rl,Select:()=>ru,Selu:()=>rp,Sequential:()=>gB,Sigmoid:()=>rf,Sign:()=>rm,Sin:()=>rh,Sinh:()=>rc,Slice:()=>rd,Softmax:()=>rw,Softplus:()=>rg,SpaceToBatchND:()=>rx,SparseFillEmptyRows:()=>rk,SparseReshape:()=>rI,SparseSegmentMean:()=>rS,SparseSegmentSum:()=>rN,SparseToDense:()=>rT,SplitV:()=>rv,Sqrt:()=>ry,Square:()=>rC,SquaredDifference:()=>r_,StaticRegexReplace:()=>rE,Step:()=>rj,StridedSlice:()=>r$,StringNGrams:()=>rA,StringSplit:()=>rF,StringToHashBucketFast:()=>rR,Sub:()=>rD,Sum:()=>rb,SymbolicTensor:()=>fr,Tan:()=>rM,Tanh:()=>rO,Tensor:()=>aF,TensorBuffer:()=>aE,TensorScatterUpdate:()=>ro,Tile:()=>rL,TopK:()=>rz,Transform:()=>rP,Transpose:()=>rB,Unique:()=>rW,Unpack:()=>rV,UnsortedSegmentSum:()=>rU,UpperBound:()=>rG,Variable:()=>aD,ZerosLike:()=>rH,_FusedMatMul:()=>rX,abs:()=>iI,acos:()=>iS,acosh:()=>iN,add:()=>ix,addN:()=>iT,all:()=>i_,any:()=>iC,argMax:()=>iE,argMin:()=>i$,asin:()=>iA,asinh:()=>iF,atan:()=>iR,atan2:()=>iD,atanh:()=>iM,avgPool:()=>iJ,avgPool3d:()=>iQ,backend:()=>sk,backend_util:()=>hR,basicLSTMCell:()=>i6,batchNorm:()=>i8,batchNorm2d:()=>i7,batchNorm3d:()=>i9,batchNorm4d:()=>oe,batchToSpaceND:()=>i5,bincount:()=>ot,bitwiseAnd:()=>on,booleanMaskAsync:()=>ph,broadcastArgs:()=>or,broadcastTo:()=>oa,broadcast_util:()=>oC,browser:()=>he,buffer:()=>im,callbacks:()=>vm,cast:()=>ig,ceil:()=>os,clipByValue:()=>oo,clone:()=>iy,complex:()=>a7,concat:()=>i0,concat1d:()=>ol,concat2d:()=>ou,concat3d:()=>op,concat4d:()=>od,constraints:()=>ff,conv1d:()=>oc,conv2d:()=>oh,conv2dTranspose:()=>of,conv3d:()=>og,conv3dTranspose:()=>ob,copyRegisteredKernels:()=>r9,cos:()=>ox,cosh:()=>ov,cosineWindow:()=>pv,cumprod:()=>ow,cumsum:()=>ok,customGrad:()=>lx,data:()=>w5,denseBincount:()=>oI,deprecationWarn:()=>si,depthToSpace:()=>oS,depthwiseConv2d:()=>oN,deregisterOp:()=>vy,device_util:()=>aZ,diag:()=>oT,dilation2d:()=>o_,disableDeprecationWarnings:()=>ss,dispose:()=>sh,disposeVariables:()=>so,div:()=>iw,divNoNan:()=>oM,dot:()=>oO,dropout:()=>pb,einsum:()=>oL,elu:()=>oz,enableDebugMode:()=>sa,enableProdMode:()=>sr,enclosingPowerOfTwo:()=>px,engine:()=>sl,ensureShape:()=>oP,env:()=>e5,equal:()=>oF,erf:()=>oB,euclideanNorm:()=>o3,exp:()=>o4,expandDims:()=>o6,expm1:()=>o5,eye:()=>o7,fft:()=>uH,fill:()=>oi,findBackend:()=>sx,findBackendFactory:()=>sv,floor:()=>o9,floorDiv:()=>iv,forceHalfFloat:()=>C$,fused:()=>pk,gather:()=>le,gatherND:()=>py,gather_util:()=>hu,getBackend:()=>sy,getGradient:()=>r3,getKernel:()=>r2,getKernelsForBackend:()=>r4,getThreadsCount:()=>RQ,gpgpu_util:()=>T8,grad:()=>lm,grads:()=>lf,greater:()=>lt,greaterEqual:()=>ln,ifft:()=>uj,imag:()=>lr,image:()=>dv,inTopKAsync:()=>pw,initializers:()=>fE,input:()=>gU,io:()=>dW,irfft:()=>uq,isFinite:()=>la,isInf:()=>ls,isNaN:()=>li,keep:()=>sc,kernel_impls:()=>cN,layers:()=>fH,leakyRelu:()=>lo,less:()=>ll,lessEqual:()=>lu,linalg:()=>dw,linspace:()=>lp,loadGraphModel:()=>w3,loadGraphModelSync:()=>w4,loadLayersModel:()=>gz,localResponseNormalization:()=>ld,log:()=>lh,log1p:()=>lc,logSigmoid:()=>lI,logSoftmax:()=>lN,logSumExp:()=>lT,logicalAnd:()=>l_,logicalNot:()=>lC,logicalOr:()=>lE,logicalXor:()=>l$,losses:()=>dk,lowerBound:()=>lF,matMul:()=>i1,math:()=>d7,max:()=>oX,maxPool:()=>lR,maxPool3d:()=>lD,maxPoolWithArgmax:()=>lM,maximum:()=>lO,mean:()=>lL,memory:()=>su,meshgrid:()=>lB,metrics:()=>xJ,min:()=>oY,minimum:()=>lW,mirrorPad:()=>lV,mod:()=>lU,model:()=>gW,models:()=>vs,moments:()=>lG,movingAverage:()=>pm,mul:()=>ik,multiRNNCell:()=>lH,multinomial:()=>lj,neg:()=>lw,nextFrame:()=>hF,norm:()=>o2,notEqual:()=>lq,oneHot:()=>lK,ones:()=>lP,onesLike:()=>lX,op:()=>a8,outerProduct:()=>lY,pad:()=>lZ,pad1d:()=>lJ,pad2d:()=>lQ,pad3d:()=>l0,pad4d:()=>l1,pool:()=>l3,pow:()=>oZ,prelu:()=>l4,print:()=>ib,prod:()=>l6,profile:()=>sp,raggedGather:()=>l5,raggedRange:()=>l8,raggedTensorToTensor:()=>l7,rand:()=>l9,randomGamma:()=>uy,randomNormal:()=>ub,randomStandardNormal:()=>ux,randomUniform:()=>uv,randomUniformInt:()=>uw,range:()=>uk,ready:()=>sg,real:()=>uI,reciprocal:()=>uS,registerBackend:()=>sw,registerCallbackConstructor:()=>gG,registerGradient:()=>r5,registerKernel:()=>r6,registerOp:()=>vg,regularizers:()=>vi,relu:()=>uN,relu6:()=>uT,removeBackend:()=>sb,reshape:()=>iZ,reverse:()=>u_,reverse1d:()=>uC,reverse2d:()=>uE,reverse3d:()=>u$,reverse4d:()=>uA,rfft:()=>uX,round:()=>uF,rsqrt:()=>uR,scalar:()=>oJ,scatterND:()=>pf,scatter_util:()=>u7,searchSorted:()=>lA,selu:()=>uD,separableConv2d:()=>uM,sequential:()=>gV,serialization:()=>dN,setBackend:()=>sf,setPlatform:()=>sI,setThreadsCount:()=>RJ,setWasmPath:()=>RK,setWasmPaths:()=>RX,setWebGLContext:()=>NG,setdiff1dAsync:()=>uO,shared:()=>It,sigmoid:()=>i2,sign:()=>uL,signal:()=>dx,sin:()=>uz,sinh:()=>uP,slice:()=>i3,slice1d:()=>uB,slice2d:()=>uW,slice3d:()=>uV,slice4d:()=>uU,slice_util:()=>hd,softmax:()=>uG,softplus:()=>lk,spaceToBatchND:()=>l2,sparse:()=>dI,sparseToDense:()=>pg,spectral:()=>db,split:()=>uK,sqrt:()=>oQ,square:()=>o0,squaredDifference:()=>uY,squeeze:()=>uZ,stack:()=>uJ,step:()=>uQ,stridedSlice:()=>u0,string:()=>dS,sub:()=>lS,sum:()=>o1,sumOutType:()=>az,tan:()=>u1,tanh:()=>i4,tensor:()=>se,tensor1d:()=>u2,tensor2d:()=>u3,tensor3d:()=>u4,tensor4d:()=>u6,tensor5d:()=>u5,tensor6d:()=>u8,tensorScatterUpdate:()=>pn,tensor_util:()=>aM,test_util:()=>ut,tidy:()=>sd,tile:()=>o8,time:()=>sm,topk:()=>pr,train:()=>h$,transpose:()=>pc,truncatedNormal:()=>pa,unique:()=>ps,unregisterGradient:()=>r7,unregisterKernel:()=>r8,unsortedSegmentSum:()=>pi,unstack:()=>po,upcastType:()=>aL,upperBound:()=>pl,util:()=>at,valueAndGrad:()=>lg,valueAndGrads:()=>ly,variable:()=>pu,variableGrads:()=>lb,version:()=>R2,version_converter:()=>w6,version_core:()=>hC,version_cpu:()=>SF,version_layers:()=>gf,version_wasm:()=>R0,version_webgl:()=>CE,webgl:()=>CA,webgl_util:()=>NW,where:()=>oR,whereAsync:()=>pd,zeros:()=>lz,zerosLike:()=>oD});var $=Object.create,A=Object.defineProperty,F=Object.getOwnPropertyDescriptor,R=Object.getOwnPropertyNames,D=Object.getPrototypeOf,M=Object.prototype.hasOwnProperty,O=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),L=(e,t)=>{for(var n in t)A(e,n,{get:t[n],enumerable:!0})},z=(e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of R(t))M.call(e,a)||a===n||A(e,a,{get:()=>t[a],enumerable:!(r=F(t,a))||r.enumerable});return e},P=(e,t,n)=>(n=null!=e?$(D(e)):{},z(!t&&e&&e.__esModule?n:A(n,"default",{value:e,enumerable:!0}),e)),B=O((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return(e&&e.__isLong__)===!0}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(e>>>=0,(a=0<=e&&e<256)&&(r=i[e])?r:(n=u(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n)):(e|=0,(a=-128<=e&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),a&&(s[e]=n),n))}function l(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=m)return I}else{if(e<=-f)return S;if(e+1>=f)return k}return e<0?l(-e,t).neg():u(e%c|0,e/c|0,t)}function u(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=l,r.fromBits=u;var p=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,n).neg();for(var r,a=l(p(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var h=l(p(n,o));s=s.mul(h).add(l(u))}else s=(s=s.mul(a)).add(l(u))}return s.unsigned=t,s}function h(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?d(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=d,r.fromValue=h;var c=0x100000000,m=0x100000000*0x100000000,f=0x100000000*0x100000000/2,g=o(0x1000000),y=o(0);r.ZERO=y;var b=o(0,!0);r.UZERO=b;var x=o(1);r.ONE=x;var v=o(1,!0);r.UONE=v;var w=o(-1);r.NEG_ONE=w;var k=u(-1,0x7fffffff,!1);r.MAX_VALUE=k;var I=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=I;var S=u(0,-0x80000000,!1);r.MIN_VALUE=S;var N=r.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*c+(this.low>>>0):this.high*c+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(!this.eq(S))return"-"+this.neg().toString(e);var t=l(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}for(var a=l(p(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),u=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return(1&this.low)==1},N.isEven=function(){return(1&this.low)==0},N.equals=function(e){return a(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return 0>this.comp(e)},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return 0>=this.comp(e)},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(a(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},N.neg=N.negate,N.add=function(e){a(e)||(e=h(e));var t,n,r=this.high>>>16,s=65535&this.high,i=this.low>>>16,o=65535&this.low,l=e.high>>>16,p=65535&e.high,d=e.low>>>16,c=65535&e.low,m=0,f=0;return n=0+((t=0+(o+c))>>>16),t&=65535,n+=i+d,f+=n>>>16,n&=65535,f+=s+p,m+=f>>>16,f&=65535,m+=r+l,u(n<<16|t,(m&=65535)<<16|f,this.unsigned)},N.subtract=function(e){return a(e)||(e=h(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return y;if(a(e)||(e=h(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(S))return e.isOdd()?S:y;if(e.eq(S))return this.isOdd()?S:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);var t,r,s=this.high>>>16,i=65535&this.high,o=this.low>>>16,p=65535&this.low,d=e.high>>>16,c=65535&e.high,m=e.low>>>16,f=65535&e.low,b=0,x=0;return r=0+((t=0+p*f)>>>16),t&=65535,r+=o*f,x+=r>>>16,r&=65535,r+=p*m,x+=r>>>16,r&=65535,x+=i*f,b+=x>>>16,x&=65535,x+=o*m,b+=x>>>16,x&=65535,x+=p*c,b+=x>>>16,x&=65535,b+=s*f+i*m+o*c+p*d,u(r<<16|t,(b&=65535)<<16|x,this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(a(e)||(e=h(e)),e.isZero())throw Error("division by zero");if(n){var t,r,s;return this.unsigned||-0x80000000!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this}if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return v;s=b}else{if(this.eq(S))return e.eq(x)||e.eq(w)?S:e.eq(S)?x:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?x:w:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(S))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:p(2,i-48),d=l(t),c=d.mul(e);c.isNegative()||c.gt(r);)t-=o,c=(d=l(t,this.unsigned)).mul(e);d.isZero()&&(d=x),s=s.add(d),r=r.sub(c)}return s},N.div=N.divide,N.modulo=function(e){return(a(e)||(e=h(e)),n)?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return u(~this.low,~this.high,this.unsigned)},N.and=function(e){return a(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return a(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return a(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):32===e?u(t,0,this.unsigned):u(t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}),W=O(()=>{}),V=O(()=>{}),U=O((e,t)=>{!function(e,t,n){function r(e){var t,n=this,r=(t=0xefc8249d,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));t=r>>>0,r-=t,r*=t,t=r>>>0,r-=t,t+=0x100000000*r}return(t>>>0)*23283064365386963e-26});n.next=function(){var e=2091639*n.s0+23283064365386963e-26*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 0x100000000*n.next()|0},i.double=function(){return i()+(2097152*i()|0)*11102230246251565e-32},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),G=O((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/0x100000000};return i.double=function(){do var e=n.next()>>>11,t=(n.next()>>>0)/0x100000000,r=(e+t)/2097152;while(0===r);return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),H=O((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^(e^e<<1))|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/0x100000000};return i.double=function(){do var e=n.next()>>>11,t=(n.next()>>>0)/0x100000000,r=(e+t)/2097152;while(0===r);return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),j=O((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],e^=e>>>7,n=e^e<<24^((e=r[a+1&7])^e>>>10)^((e=r[a+3&7])^e>>>3)^((e=r[a+4&7])^e<<7),e=r[a+7&7],e^=e<<13,n^=e^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/0x100000000};return i.double=function(){do var e=n.next()>>>11,t=(n.next()>>>0)/0x100000000,r=(e+t)/2097152;while(0===r);return r},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),q=O((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+0x61c88647|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+0x61c88647|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/0x100000000};return i.double=function(){do var e=n.next()>>>11,t=(n.next()>>>0)/0x100000000,r=(e+t)/2097152;while(0===r);return r},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),K=O((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-0x61c88647,t.d=0x517cc1b7,e===Math.floor(e)?(t.a=e/0x100000000|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/0x100000000};return i.double=function(){do var e=n.next()>>>11,t=(n.next()>>>0)/0x100000000,r=(e+t)/2097152;while(0===r);return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),X=O(()=>{}),Y=O((e,t)=>{!function(e,r,a){var s,i="random",o=a.pow(256,6),l=a.pow(2,52),u=2*l;function p(t,n,p){var f=[],g=c(function e(t,n){var r,a=[],s=typeof t;if(n&&"object"==s)for(r in t)try{a.push(e(t[r],n-1))}catch(e){}return a.length?a:"string"==s?t:t+"\0"}((n=!0==n?{entropy:!0}:n||{}).entropy?[t,m(r)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(256):(t=new Uint8Array(256),(e.crypto||e.msCrypto).getRandomValues(t)),m(t)}catch(t){var n=e.navigator,a=n&&n.plugins;return[+new Date,e,a,e.screen,m(r)]}}():t,3),f),y=new d(f),b=function(){for(var e=y.g(6),t=o,n=0;e<l;)e=(e+n)*256,t*=256,n=y.g(1);for(;e>=u;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|y.g(4)},b.quick=function(){return y.g(4)/0x100000000},b.double=b,c(m(y.S),r),(n.pass||p||function(e,t,n,r){return r&&(r.S&&h(r,y),e.state=function(){return h(y,{})}),n?(a[i]=e,t):e})(b,g,"global"in n?n.global:this==a,n.state)}function d(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<256;)i[a]=a++;for(a=0;a<256;a++)i[a]=i[s=255&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=255&a+1],n=256*n+i[255&(i[a]=i[s=255&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(256)}function h(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function c(e,t){for(var n,r=e+"",a=0;a<r.length;)t[255&a]=255&(n^=19*t[255&a])+r.charCodeAt(a++);return m(t)}function m(e){return String.fromCharCode.apply(0,e)}if(c(a.random(),r),"object"==typeof t&&t.exports){t.exports=p;try{s=X()}catch(e){}}else"function"==typeof define&&n.amdO?define(function(){return p}):a["seed"+i]=p}("undefined"!=typeof self?self:e,[],Math)}),Z=O((e,t)=>{var n=U(),r=G(),a=H(),s=j(),i=q(),o=K(),l=Y();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}),J=O(()=>{}),Q=O(()=>{}),ee=O(()=>{}),et=O(()=>{}),en=O(()=>{}),er=O(()=>{}),ea=O((e,t)=>{var r=(()=>{var e="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return e=e||__filename,function(t){function n(){return M.buffer!=V&&B(M.buffer),G}function r(){return M.buffer!=V&&B(M.buffer),H}function a(){return M.buffer!=V&&B(M.buffer),j}function s(){return M.buffer!=V&&B(M.buffer),q}var i,o,l,u,p,d,h,c=void 0!==(t=t||{})?t:{};c.ready=new Promise(function(e,t){d=e,h=t}),"undefined"!=typeof process&&process.listeners&&($={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var m=Object.assign({},c),f=[],g=(e,t)=>{throw t},y="object"==typeof window,b="function"==typeof importScripts,x="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,v=c.ENVIRONMENT_IS_PTHREAD||!1,w="";function k(e){return c.locateFile?c.locateFile(e,w):w+e}if(x){let e;var I=Q(),S=ee();w=b?S.dirname(w)+"/":__dirname+"/",A=(e,t)=>(e=el(e)?new URL(e):S.normalize(e),I.readFileSync(e,t?void 0:"utf8")),R=e=>{var t=A(e,!0);return t.buffer||(t=new Uint8Array(t)),t},F=(e,t,n)=>{e=el(e)?new URL(e):S.normalize(e),I.readFile(e,function(e,r){e?n(e):t(r.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),f=process.argv.slice(2),process.on("uncaughtException",function(e){if(!(e instanceof ed))throw e}),process.on("unhandledRejection",function(e){throw e}),g=(e,t)=>{if(E)throw process.exitCode=e,t;t instanceof ed||C("exiting due to exception: "+t),process.exit(e)},c.inspect=function(){return"[Emscripten Module object]"};try{e=et()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=e.Worker}else(y||b)&&(b?w=self.location.href:"undefined"!=typeof document&&document.currentScript&&(w=document.currentScript.src),void 0!==e&&e&&(w=e),w=0!==w.indexOf("blob:")?w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):"",x||(A=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},b&&(R=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),F=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{if(200==r.status||0==r.status&&r.response){t(r.response);return}n()},r.onerror=n,r.send(null)}),e=>document.title=e);x&&"undefined"==typeof performance&&(global.performance=en().performance);var N=console.log.bind(console),T=console.warn.bind(console);x&&(N=e=>I.writeSync(1,e+`
`),T=e=>I.writeSync(2,e+`
`));var _=c.print||N,C=c.printErr||T;Object.assign(c,m),m=null,c.arguments&&(f=c.arguments),c.thisProgram&&c.thisProgram,c.quit&&(g=c.quit),Atomics.load,Atomics.store,Atomics.compareExchange,c.wasmBinary&&(D=c.wasmBinary);var E=c.noExitRuntime||!0;"object"!=typeof WebAssembly&&ei("no native wasm support detected");var $,A,F,R,D,M,O,L=!1,z="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function P(e,t,n){t>>>=0;for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.buffer&&z)return z.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,a):e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(!(128&i)){s+=String.fromCharCode(i);continue}var o=63&e[t++];if((224&i)==192){s+=String.fromCharCode((31&i)<<6|o);continue}var l=63&e[t++];if((i=(240&i)==224?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}return s}function B(e){V=e,c.HEAP8=U=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=H=new Int32Array(e),c.HEAPU8=G=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=j=new Uint32Array(e),c.HEAPF32=new Float32Array(e),c.HEAPF64=q=new Float64Array(e)}v&&(V=c.buffer);var W=c.INITIAL_MEMORY||0x1000000;if(v)M=c.wasmMemory,V=c.buffer;else if(c.wasmMemory)M=c.wasmMemory;else if(!((M=new WebAssembly.Memory({initial:W/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw C("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&C("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");M&&(V=M.buffer),W=V.byteLength,B(V);var V,U,G,H,j,q,K,X=[],Y=[],Z=[],J=0,ea=null,es=null;function ei(e){c.onAbort&&c.onAbort(e),C(e="Aborted("+e+")"),L=!0,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw h(t),t}function eo(e){return e.startsWith("data:application/octet-stream;base64,")}function el(e){return e.startsWith("file://")}function eu(e){try{if(e==i&&D)return new Uint8Array(D);if(R)return R(e);throw"both async and sync fetching of the wasm failed"}catch(e){ei(e)}}eo(i="tfjs-backend-wasm-threaded-simd.wasm")||(i=k(i));var ep={};function ed(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function eh(e){var t=eg.pthreads[e];t||ei(void 0),eg.returnWorkerToPool(t)}function ec(e){var t=eg.getNewWorker();if(!t)return 6;eg.runningWorkers.push(t),eg.pthreads[e.pthread_ptr]=t,t.pthread_ptr=e.pthread_ptr;var n={cmd:"run",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return t.runPthread=()=>{x&&t.ref(),t.postMessage(n,e.transferList),delete t.runPthread},t.loaded&&t.runPthread(),0}function em(e){if(v)return eS(1,1,e);E||(eg.terminateAllThreads(),c.onExit&&c.onExit(e),L=!0),g(e,new ed(e))}var ef=function(e,t){if(!t&&v)throw eb(e),"unwind";em(e)},eg={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){v?eg.initWorker():eg.initMainThread()},initMainThread:function(){for(var e=8;e--;)eg.allocateUnusedWorker()},initWorker:function(){E=!1},setExitStatus:function(e){},terminateAllThreads:function(){for(var e of Object.values(eg.pthreads))eg.returnWorkerToPool(e);for(var e of eg.unusedWorkers)e.terminate();eg.unusedWorkers=[]},returnWorkerToPool:function(e){var t=e.pthread_ptr;delete eg.pthreads[t],eg.unusedWorkers.push(e),eg.runningWorkers.splice(eg.runningWorkers.indexOf(e),1),e.pthread_ptr=0,x&&e.unref(),eO(t)},receiveObjectTransfer:function(e){},threadInitTLS:function(){eg.tlsInitFunctions.forEach(e=>e())},loadWasmModuleToWorker:function(t,n){t.onmessage=e=>{var r,a,s=e.data,i=s.cmd;if(t.pthread_ptr&&(eg.currentProxiedOperationCallerThread=t.pthread_ptr),s.targetThread&&s.targetThread!=eF()){var o=eg.pthreads[s.targetThread];o?o.postMessage(s,s.transferList):C('Internal error! Worker sent a message "'+i+'" to target pthread '+s.targetThread+", but that thread no longer exists!"),eg.currentProxiedOperationCallerThread=void 0;return}"processProxyingQueue"===i?ek(s.queue):"spawnThread"===i?ec(s):"cleanupThread"===i?eh(s.thread):"killThread"===i?(r=s.thread,a=eg.pthreads[r],delete eg.pthreads[r],a.terminate(),eO(r),eg.runningWorkers.splice(eg.runningWorkers.indexOf(a),1),a.pthread_ptr=0):"cancelThread"===i?function(e){eg.pthreads[e].postMessage({cmd:"cancel"})}(s.thread):"loaded"===i?(t.loaded=!0,x&&t.unref(),n&&n(t),t.runPthread&&t.runPthread()):"print"===i?_("Thread "+s.threadId+": "+s.text):"printErr"===i?C("Thread "+s.threadId+": "+s.text):"alert"===i?alert("Thread "+s.threadId+": "+s.text):"setimmediate"===s.target?t.postMessage(s):"callHandler"===i?c[s.handler](...s.args):i&&C("worker sent an unknown command "+i),eg.currentProxiedOperationCallerThread=void 0},t.onerror=e=>{throw C("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},x&&(t.on("message",function(e){t.onmessage({data:e})}),t.on("error",function(e){t.onerror(e)}),t.on("detachedExit",function(){}));var r=[];for(var a of["onExit","onAbort","print","printErr"])c.hasOwnProperty(a)&&r.push(a);t.postMessage({cmd:"load",handlers:r,urlOrBlob:c.mainScriptUrlOrBlob||e,wasmMemory:M,wasmModule:O})},allocateUnusedWorker:function(){var e;e=new Worker(k("tfjs-backend-wasm-threaded-simd.worker.js")),eg.unusedWorkers.push(e)},getNewWorker:function(){return 0==eg.unusedWorkers.length&&(eg.allocateUnusedWorker(),eg.loadWasmModuleToWorker(eg.unusedWorkers[0])),eg.unusedWorkers.pop()}};function ey(e){for(;e.length>0;)e.shift()(c)}function eb(e){if(v)return eS(2,0,e);try{ef(e)}catch(e){var t;(t=e)instanceof ed||"unwind"==t||g(1,t)}}c.PThread=eg,c.establishStackSpace=function(){var e=eF(),t=r()[e+52>>>2],n=t-r()[e+56>>>2];ez(t,n),eB(t)};var ex=[];function ev(e,t,n,r){return v?eS(3,1,e,t,n,r):ew(e,t,n,r)}function ew(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return C("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];if(v&&0===a.length)return ev(e,t,n,r);var s={startRoutine:n,pthread_ptr:e,arg:r,transferList:a};return v?(s.cmd="spawnThread",postMessage(s,a),0):ec(s)}function ek(e){Atomics.store(r(),e>>2,1),eF()&&eM(e),Atomics.compareExchange(r(),e>>2,1,0)}function eI(){return 0xffff0000}function eS(e,t){var n,r,a,i=arguments.length-2,o=arguments;return n=()=>{for(var n=eW(8*i),r=n>>3,a=0;a<i;a++){var l=o[2+a];s()[r+a>>>0]=l}return eD(e,i,n,t)},r=eP(),a=n(),eB(r),a}c.invokeEntryPoint=function(e,t){var n,r=((n=ex[e])||(e>=ex.length&&(ex.length=e+1),ex[e]=n=K.get(e)),n)(t);E?eg.setExitStatus(r):eL(r)},c.executeNotifiedProxyingQueue=ek,o=x?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var eN=[];function eT(e){return v?eS(4,1,e):52}function e_(e,t,n,r,a){return v?eS(5,1,e,t,n,r,a):70}var eC=[null,[],[]];function eE(e,t,r,s){if(v)return eS(6,1,e,t,r,s);for(var i=0,o=0;o<r;o++){var l=a()[t>>>2],u=a()[t+4>>>2];t+=8;for(var p=0;p<u;p++)(function(e,t){var n=eC[e];0===t||10===t?((1===e?_:C)(P(n,0)),n.length=0):n.push(t)})(e,n()[l+p>>>0]);i+=u}return a()[s>>>2]=i,0}eg.init();var e$=[null,em,eb,ev,eT,e_,eE],eA={__emscripten_init_main_thread_js:function(e){eR(e,!b,1,!y),eg.threadInitTLS()},__emscripten_thread_cleanup:function(e){v?postMessage({cmd:"cleanupThread",thread:e}):eh(e)},__pthread_create_js:ew,_emscripten_default_pthread_stack_size:function(){return 65536},_emscripten_get_now_is_monotonic:function(){return!0},_emscripten_notify_task_queue:function(e,t,n,r){if(e==t)setTimeout(()=>ek(r));else if(v)postMessage({targetThread:e,cmd:"processProxyingQueue",queue:r});else{var a=eg.pthreads[e];if(!a)return;a.postMessage({cmd:"processProxyingQueue",queue:r})}return 1},_emscripten_set_offscreencanvas_size:function(e,t,n){return -1},abort:function(){ei("")},emscripten_check_blocking_allowed:function(){x||b||function e(t){e.shown||(e.shown={}),e.shown[t]||(e.shown[t]=1,x&&(t="warning: "+t),C(t))}("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_date_now:function(){return Date.now()},emscripten_get_heap_max:function(){return eI()},emscripten_get_now:o,emscripten_memcpy_big:function(e,t,r){n().copyWithin(e>>>0,t>>>0,t+r>>>0)},emscripten_num_logical_cores:function(){return x?er().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){eN.length=t;for(var r=n>>3,a=0;a<t;a++)eN[a]=s()[r+a>>>0];return(e<0?ep[-e-1]:e$[e]).apply(null,eN)},emscripten_resize_heap:function(e){var t=n().length;if((e>>>=0)<=t)return!1;var r=eI();if(e>r)return!1;let a=(e,t)=>e+(t-e%t)%t;for(var s=1;s<=4;s*=2){var i=t*(1+.2/s);if(i=Math.min(i,e+0x6000000),function(e){try{return M.grow(e-V.byteLength+65535>>>16),B(M.buffer),1}catch(e){}}(Math.min(r,a(Math.max(e,i),65536))))return!0}return!1},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},exit:ef,fd_close:eT,fd_seek:e_,fd_write:eE,memory:M||c.wasmMemory},eF=(function(){var e={env:eA,wasi_snapshot_preview1:eA};function t(e,t){var n,r,a=e.exports;if(c.asm=a,r=c.asm._emscripten_tls_init,eg.tlsInitFunctions.push(r),K=c.asm.__indirect_function_table,n=c.asm.__wasm_call_ctors,Y.unshift(n),O=t,!v){var s=eg.unusedWorkers.length;eg.unusedWorkers.forEach(function(e){eg.loadWasmModuleToWorker(e,function(){--s||function(e){if(J--,c.monitorRunDependencies&&c.monitorRunDependencies(J),0==J&&(null!==ea&&(clearInterval(ea),ea=null),es)){var t=es;es=null,t()}}(0)})})}}function n(e){t(e.instance,e.module)}function r(t){return(function(){if(!D&&(y||b)){if("function"==typeof fetch&&!el(i))return fetch(i,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+i+"'";return e.arrayBuffer()}).catch(function(){return eu(i)});if(F)return new Promise(function(e,t){F(i,function(t){e(new Uint8Array(t))},t)})}return Promise.resolve().then(function(){return eu(i)})})().then(function(t){return WebAssembly.instantiate(t,e)}).then(function(e){return e}).then(t,function(e){C("failed to asynchronously prepare wasm: "+e),ei(e)})}if(v||(J++,c.monitorRunDependencies&&c.monitorRunDependencies(J)),c.instantiateWasm)try{return c.instantiateWasm(e,t)}catch(e){C("Module.instantiateWasm callback failed with error: "+e),h(e)}(D||"function"!=typeof WebAssembly.instantiateStreaming||eo(i)||el(i)||x||"function"!=typeof fetch?r(n):fetch(i,{credentials:"same-origin"}).then(function(t){return WebAssembly.instantiateStreaming(t,e).then(n,function(e){return C("wasm streaming compile failed: "+e),C("falling back to ArrayBuffer instantiation"),r(n)})})).catch(h)}(),c.___wasm_call_ctors=function(){return(c.___wasm_call_ctors=c.asm.__wasm_call_ctors).apply(null,arguments)},c._init=function(){return(c._init=c.asm.init).apply(null,arguments)},c._init_with_threads_count=function(){return(c._init_with_threads_count=c.asm.init_with_threads_count).apply(null,arguments)},c._get_threads_count=function(){return(c._get_threads_count=c.asm.get_threads_count).apply(null,arguments)},c._register_tensor=function(){return(c._register_tensor=c.asm.register_tensor).apply(null,arguments)},c._dispose_data=function(){return(c._dispose_data=c.asm.dispose_data).apply(null,arguments)},c._dispose=function(){return(c._dispose=c.asm.dispose).apply(null,arguments)},c._Abs=function(){return(c._Abs=c.asm.Abs).apply(null,arguments)},c._Acos=function(){return(c._Acos=c.asm.Acos).apply(null,arguments)},c._Acosh=function(){return(c._Acosh=c.asm.Acosh).apply(null,arguments)},c._Add=function(){return(c._Add=c.asm.Add).apply(null,arguments)},c._AddN=function(){return(c._AddN=c.asm.AddN).apply(null,arguments)},c._All=function(){return(c._All=c.asm.All).apply(null,arguments)},c._Any=function(){return(c._Any=c.asm.Any).apply(null,arguments)},c._ArgMax=function(){return(c._ArgMax=c.asm.ArgMax).apply(null,arguments)},c._ArgMin=function(){return(c._ArgMin=c.asm.ArgMin).apply(null,arguments)},c._Asin=function(){return(c._Asin=c.asm.Asin).apply(null,arguments)},c._Asinh=function(){return(c._Asinh=c.asm.Asinh).apply(null,arguments)},c._Atan=function(){return(c._Atan=c.asm.Atan).apply(null,arguments)},c._Atan2=function(){return(c._Atan2=c.asm.Atan2).apply(null,arguments)},c._Atanh=function(){return(c._Atanh=c.asm.Atanh).apply(null,arguments)},c._AvgPool=function(){return(c._AvgPool=c.asm.AvgPool).apply(null,arguments)},c._AvgPool3D=function(){return(c._AvgPool3D=c.asm.AvgPool3D).apply(null,arguments)},c._AvgPool3DGrad=function(){return(c._AvgPool3DGrad=c.asm.AvgPool3DGrad).apply(null,arguments)},c._AvgPoolGrad=function(){return(c._AvgPoolGrad=c.asm.AvgPoolGrad).apply(null,arguments)},c._BatchMatMul=function(){return(c._BatchMatMul=c.asm.BatchMatMul).apply(null,arguments)},c._Bincount=function(){return(c._Bincount=c.asm.Bincount).apply(null,arguments)},c._BitwiseAnd=function(){return(c._BitwiseAnd=c.asm.BitwiseAnd).apply(null,arguments)},c._Ceil=function(){return(c._Ceil=c.asm.Ceil).apply(null,arguments)},c._ClipByValue=function(){return(c._ClipByValue=c.asm.ClipByValue).apply(null,arguments)},c._Conv2D=function(){return(c._Conv2D=c.asm.Conv2D).apply(null,arguments)},c._Conv2DBackpropInput=function(){return(c._Conv2DBackpropInput=c.asm.Conv2DBackpropInput).apply(null,arguments)},c._Conv3D=function(){return(c._Conv3D=c.asm.Conv3D).apply(null,arguments)},c._Conv3DBackpropFilterV2=function(){return(c._Conv3DBackpropFilterV2=c.asm.Conv3DBackpropFilterV2).apply(null,arguments)},c._Conv3DBackpropInputV2=function(){return(c._Conv3DBackpropInputV2=c.asm.Conv3DBackpropInputV2).apply(null,arguments)},c._Cos=function(){return(c._Cos=c.asm.Cos).apply(null,arguments)},c._Cosh=function(){return(c._Cosh=c.asm.Cosh).apply(null,arguments)},c._CropAndResize=function(){return(c._CropAndResize=c.asm.CropAndResize).apply(null,arguments)},c._Cumprod=function(){return(c._Cumprod=c.asm.Cumprod).apply(null,arguments)},c._Cumsum=function(){return(c._Cumsum=c.asm.Cumsum).apply(null,arguments)},c._DenseBincount=function(){return(c._DenseBincount=c.asm.DenseBincount).apply(null,arguments)},c._DepthToSpace=function(){return(c._DepthToSpace=c.asm.DepthToSpace).apply(null,arguments)},c._DepthwiseConv2dNative=function(){return(c._DepthwiseConv2dNative=c.asm.DepthwiseConv2dNative).apply(null,arguments)},c._Diag=function(){return(c._Diag=c.asm.Diag).apply(null,arguments)},c._Dilation2D=function(){return(c._Dilation2D=c.asm.Dilation2D).apply(null,arguments)},c._Dilation2DBackpropFilter=function(){return(c._Dilation2DBackpropFilter=c.asm.Dilation2DBackpropFilter).apply(null,arguments)},c._Dilation2DBackpropInput=function(){return(c._Dilation2DBackpropInput=c.asm.Dilation2DBackpropInput).apply(null,arguments)},c._Elu=function(){return(c._Elu=c.asm.Elu).apply(null,arguments)},c._EluGrad=function(){return(c._EluGrad=c.asm.EluGrad).apply(null,arguments)},c._Equal=function(){return(c._Equal=c.asm.Equal).apply(null,arguments)},c._Erf=function(){return(c._Erf=c.asm.Erf).apply(null,arguments)},c._Exp=function(){return(c._Exp=c.asm.Exp).apply(null,arguments)},c._Expm1=function(){return(c._Expm1=c.asm.Expm1).apply(null,arguments)},c._FlipLeftRight=function(){return(c._FlipLeftRight=c.asm.FlipLeftRight).apply(null,arguments)},c._Floor=function(){return(c._Floor=c.asm.Floor).apply(null,arguments)},c._FloorDiv=function(){return(c._FloorDiv=c.asm.FloorDiv).apply(null,arguments)},c._FusedBatchNorm=function(){return(c._FusedBatchNorm=c.asm.FusedBatchNorm).apply(null,arguments)},c._FusedConv2D=function(){return(c._FusedConv2D=c.asm.FusedConv2D).apply(null,arguments)},c._FusedDepthwiseConv2D=function(){return(c._FusedDepthwiseConv2D=c.asm.FusedDepthwiseConv2D).apply(null,arguments)},c._Gather=function(){return(c._Gather=c.asm.Gather).apply(null,arguments)},c._GatherNd=function(){return(c._GatherNd=c.asm.GatherNd).apply(null,arguments)},c._Greater=function(){return(c._Greater=c.asm.Greater).apply(null,arguments)},c._GreaterEqual=function(){return(c._GreaterEqual=c.asm.GreaterEqual).apply(null,arguments)},c._IsFinite=function(){return(c._IsFinite=c.asm.IsFinite).apply(null,arguments)},c._IsInf=function(){return(c._IsInf=c.asm.IsInf).apply(null,arguments)},c._IsNan=function(){return(c._IsNan=c.asm.IsNan).apply(null,arguments)},c._LRN=function(){return(c._LRN=c.asm.LRN).apply(null,arguments)},c._LRNGrad=function(){return(c._LRNGrad=c.asm.LRNGrad).apply(null,arguments)},c._LeakyRelu=function(){return(c._LeakyRelu=c.asm.LeakyRelu).apply(null,arguments)},c._Less=function(){return(c._Less=c.asm.Less).apply(null,arguments)},c._LessEqual=function(){return(c._LessEqual=c.asm.LessEqual).apply(null,arguments)},c._LinSpace=function(){return(c._LinSpace=c.asm.LinSpace).apply(null,arguments)},c._Log=function(){return(c._Log=c.asm.Log).apply(null,arguments)},c._Log1p=function(){return(c._Log1p=c.asm.Log1p).apply(null,arguments)},c._LogicalAnd=function(){return(c._LogicalAnd=c.asm.LogicalAnd).apply(null,arguments)},c._LogicalNot=function(){return(c._LogicalNot=c.asm.LogicalNot).apply(null,arguments)},c._LogicalOr=function(){return(c._LogicalOr=c.asm.LogicalOr).apply(null,arguments)},c._LogicalXor=function(){return(c._LogicalXor=c.asm.LogicalXor).apply(null,arguments)},c._Max=function(){return(c._Max=c.asm.Max).apply(null,arguments)},c._MaxPool=function(){return(c._MaxPool=c.asm.MaxPool).apply(null,arguments)},c._MaxPool3D=function(){return(c._MaxPool3D=c.asm.MaxPool3D).apply(null,arguments)},c._MaxPool3DGrad=function(){return(c._MaxPool3DGrad=c.asm.MaxPool3DGrad).apply(null,arguments)},c._MaxPoolGrad=function(){return(c._MaxPoolGrad=c.asm.MaxPoolGrad).apply(null,arguments)},c._MaxPoolWithArgmax=function(){return(c._MaxPoolWithArgmax=c.asm.MaxPoolWithArgmax).apply(null,arguments)},c._Maximum=function(){return(c._Maximum=c.asm.Maximum).apply(null,arguments)},c._Mean=function(){return(c._Mean=c.asm.Mean).apply(null,arguments)},c._Min=function(){return(c._Min=c.asm.Min).apply(null,arguments)},c._Minimum=function(){return(c._Minimum=c.asm.Minimum).apply(null,arguments)},c._MirrorPad=function(){return(c._MirrorPad=c.asm.MirrorPad).apply(null,arguments)},c._Mod=function(){return(c._Mod=c.asm.Mod).apply(null,arguments)},c._Multinomial=function(){return(c._Multinomial=c.asm.Multinomial).apply(null,arguments)},c._Multiply=function(){return(c._Multiply=c.asm.Multiply).apply(null,arguments)},c._Neg=function(){return(c._Neg=c.asm.Neg).apply(null,arguments)},c._NonMaxSuppressionV3=function(){return(c._NonMaxSuppressionV3=c.asm.NonMaxSuppressionV3).apply(null,arguments)},c._NonMaxSuppressionV4=function(){return(c._NonMaxSuppressionV4=c.asm.NonMaxSuppressionV4).apply(null,arguments)},c._NonMaxSuppressionV5=function(){return(c._NonMaxSuppressionV5=c.asm.NonMaxSuppressionV5).apply(null,arguments)},c._NotEqual=function(){return(c._NotEqual=c.asm.NotEqual).apply(null,arguments)},c._OneHot=function(){return(c._OneHot=c.asm.OneHot).apply(null,arguments)},c._PadV2=function(){return(c._PadV2=c.asm.PadV2).apply(null,arguments)},c._Pow=function(){return(c._Pow=c.asm.Pow).apply(null,arguments)},c._Prelu=function(){return(c._Prelu=c.asm.Prelu).apply(null,arguments)},c._Prod=function(){return(c._Prod=c.asm.Prod).apply(null,arguments)},c._RealDiv=function(){return(c._RealDiv=c.asm.RealDiv).apply(null,arguments)},c._Reciprocal=function(){return(c._Reciprocal=c.asm.Reciprocal).apply(null,arguments)},c._Relu=function(){return(c._Relu=c.asm.Relu).apply(null,arguments)},c._Relu6=function(){return(c._Relu6=c.asm.Relu6).apply(null,arguments)},c._ResizeBilinear=function(){return(c._ResizeBilinear=c.asm.ResizeBilinear).apply(null,arguments)},c._ResizeBilinearGrad=function(){return(c._ResizeBilinearGrad=c.asm.ResizeBilinearGrad).apply(null,arguments)},c._ResizeNearestNeighbor=function(){return(c._ResizeNearestNeighbor=c.asm.ResizeNearestNeighbor).apply(null,arguments)},c._ResizeNearestNeighborGrad=function(){return(c._ResizeNearestNeighborGrad=c.asm.ResizeNearestNeighborGrad).apply(null,arguments)},c._Reverse=function(){return(c._Reverse=c.asm.Reverse).apply(null,arguments)},c._RotateWithOffset=function(){return(c._RotateWithOffset=c.asm.RotateWithOffset).apply(null,arguments)},c._Round=function(){return(c._Round=c.asm.Round).apply(null,arguments)},c._Rsqrt=function(){return(c._Rsqrt=c.asm.Rsqrt).apply(null,arguments)},c._ScatterNd=function(){return(c._ScatterNd=c.asm.ScatterNd).apply(null,arguments)},c._SearchSorted=function(){return(c._SearchSorted=c.asm.SearchSorted).apply(null,arguments)},c._SelectV2=function(){return(c._SelectV2=c.asm.SelectV2).apply(null,arguments)},c._Selu=function(){return(c._Selu=c.asm.Selu).apply(null,arguments)},c._Sigmoid=function(){return(c._Sigmoid=c.asm.Sigmoid).apply(null,arguments)},c._Sign=function(){return(c._Sign=c.asm.Sign).apply(null,arguments)},c._Sin=function(){return(c._Sin=c.asm.Sin).apply(null,arguments)},c._Sinh=function(){return(c._Sinh=c.asm.Sinh).apply(null,arguments)},c._Softmax=function(){return(c._Softmax=c.asm.Softmax).apply(null,arguments)},c._Softplus=function(){return(c._Softplus=c.asm.Softplus).apply(null,arguments)},c._SparseFillEmptyRows=function(){return(c._SparseFillEmptyRows=c.asm.SparseFillEmptyRows).apply(null,arguments)},c._SparseReshape=function(){return(c._SparseReshape=c.asm.SparseReshape).apply(null,arguments)},c._SparseSegmentReduction=function(){return(c._SparseSegmentReduction=c.asm.SparseSegmentReduction).apply(null,arguments)},c._SparseToDense=function(){return(c._SparseToDense=c.asm.SparseToDense).apply(null,arguments)},c._Sqrt=function(){return(c._Sqrt=c.asm.Sqrt).apply(null,arguments)},c._Square=function(){return(c._Square=c.asm.Square).apply(null,arguments)},c._SquaredDifference=function(){return(c._SquaredDifference=c.asm.SquaredDifference).apply(null,arguments)},c._Step=function(){return(c._Step=c.asm.Step).apply(null,arguments)},c._StridedSlice=function(){return(c._StridedSlice=c.asm.StridedSlice).apply(null,arguments)},c._Sub=function(){return(c._Sub=c.asm.Sub).apply(null,arguments)},c._Sum=function(){return(c._Sum=c.asm.Sum).apply(null,arguments)},c._Tan=function(){return(c._Tan=c.asm.Tan).apply(null,arguments)},c._Tanh=function(){return(c._Tanh=c.asm.Tanh).apply(null,arguments)},c._TensorScatterUpdate=function(){return(c._TensorScatterUpdate=c.asm.TensorScatterUpdate).apply(null,arguments)},c._Tile=function(){return(c._Tile=c.asm.Tile).apply(null,arguments)},c._TopK=function(){return(c._TopK=c.asm.TopK).apply(null,arguments)},c._Transform=function(){return(c._Transform=c.asm.Transform).apply(null,arguments)},c._Transpose=function(){return(c._Transpose=c.asm.Transpose).apply(null,arguments)},c.__FusedMatMul=function(){return(c.__FusedMatMul=c.asm._FusedMatMul).apply(null,arguments)},c._malloc=function(){return(c._malloc=c.asm.malloc).apply(null,arguments)},c._free=function(){return(c._free=c.asm.free).apply(null,arguments)},c.__emscripten_tls_init=function(){return(c.__emscripten_tls_init=c.asm._emscripten_tls_init).apply(null,arguments)},c._pthread_self=function(){return(eF=c._pthread_self=c.asm.pthread_self).apply(null,arguments)}),eR=(c.___errno_location=function(){return(c.___errno_location=c.asm.__errno_location).apply(null,arguments)},c.__emscripten_thread_init=function(){return(eR=c.__emscripten_thread_init=c.asm._emscripten_thread_init).apply(null,arguments)}),eD=(c.__emscripten_thread_crashed=function(){return(c.__emscripten_thread_crashed=c.asm._emscripten_thread_crashed).apply(null,arguments)},c._emscripten_main_thread_process_queued_calls=function(){return(c._emscripten_main_thread_process_queued_calls=c.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},c._emscripten_main_browser_thread_id=function(){return(c._emscripten_main_browser_thread_id=c.asm.emscripten_main_browser_thread_id).apply(null,arguments)},c._emscripten_run_in_main_runtime_thread_js=function(){return(eD=c._emscripten_run_in_main_runtime_thread_js=c.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)}),eM=(c._emscripten_dispatch_to_thread_=function(){return(c._emscripten_dispatch_to_thread_=c.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},c.__emscripten_proxy_execute_task_queue=function(){return(eM=c.__emscripten_proxy_execute_task_queue=c.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)}),eO=c.__emscripten_thread_free_data=function(){return(eO=c.__emscripten_thread_free_data=c.asm._emscripten_thread_free_data).apply(null,arguments)},eL=c.__emscripten_thread_exit=function(){return(eL=c.__emscripten_thread_exit=c.asm._emscripten_thread_exit).apply(null,arguments)},ez=c._emscripten_stack_set_limits=function(){return(ez=c._emscripten_stack_set_limits=c.asm.emscripten_stack_set_limits).apply(null,arguments)},eP=c.stackSave=function(){return(eP=c.stackSave=c.asm.stackSave).apply(null,arguments)},eB=c.stackRestore=function(){return(eB=c.stackRestore=c.asm.stackRestore).apply(null,arguments)},eW=c.stackAlloc=function(){return(eW=c.stackAlloc=c.asm.stackAlloc).apply(null,arguments)};function eV(e){if(e=e||f,!(J>0)){if(v){d(c),v||ey(Y),startWorker(c);return}(function(){if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;){var e;e=c.preRun.shift(),X.unshift(e)}ey(X)})(),J>0||(c.setStatus?(c.setStatus("Running..."),setTimeout(function(){setTimeout(function(){c.setStatus("")},1),t()},1)):t())}function t(){l||(l=!0,c.calledRun=!0,L||(v||ey(Y),d(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),function(){if(!v){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var e;e=c.postRun.shift(),Z.unshift(e)}ey(Z)}}()))}}if(c.dynCall_iijjiiii=function(){return(c.dynCall_iijjiiii=c.asm.dynCall_iijjiiii).apply(null,arguments)},c.dynCall_jiji=function(){return(c.dynCall_jiji=c.asm.dynCall_jiji).apply(null,arguments)},c.keepRuntimeAlive=function(){return E},c.wasmMemory=M,c.cwrap=function(e,t,r,a){var s=(r=r||[]).every(e=>"number"===e||"boolean"===e);return"string"!==t&&s&&!a?c["_"+e]:function(){return function(e,t,r,a,s){var i,o,l={string:e=>{var t=0;if(null!=e&&0!==e){var r,a=(e.length<<2)+1;r=t=eW(a),function(e,t,n,r){if(n>>>=0,r>0){for(var a=n+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++>>>0]=i}else if(i<=2047){if(n+1>=a)break;t[n++>>>0]=192|i>>6,t[n++>>>0]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++>>>0]=224|i>>12,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}else{if(n+3>=a)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}}t[n>>>0]=0}}(e,n(),r,a)}return t},array:e=>{var t=eW(e.length);return(M.buffer!=V&&B(M.buffer),U).set(e,t>>>0),t}},u=c["_"+e],p=[],d=0;if(a)for(var h=0;h<a.length;h++){var m=l[r[h]];m?(0===d&&(d=eP()),p[h]=m(a[h])):p[h]=a[h]}var f=u.apply(null,p);return o=f,0!==d&&eB(d),f="string"===t?(i=o>>>0)?P(n(),i,void 0):"":"boolean"===t?!!o:o}(e,t,r,arguments,0)}},c.ExitStatus=ed,c.PThread=eg,es=function e(){l||eV(),l||(es=e)},c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);c.preInit.length>0;)c.preInit.pop()();if(eV(),$&&(u={uncaughtException:process.listeners("uncaughtException").filter(function(e){return!$.uncaughtException.indexOf(e)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(e){return!$.unhandledRejection.indexOf(e)>-1})}),"undefined"!=typeof WasmBackendModule)p=WasmBackendModule;else if(void 0!==t)p=t;else throw Error("Could not find wasm module in post.js");if(u){var eU=p._dispose;p._dispose=function(){eU(),u.uncaughtException.forEach(function(e){process.removeListener("uncaughtException",e)}),u.unhandledRejection.forEach(function(e){process.removeListener("unhandledRejection",e)})}}return t.ready}})();"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&n.amdO?define([],function(){return r}):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=r)}),es=O((e,t)=>{t.exports.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`}),ei=O((e,t)=>{var r=(()=>{var e="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return e=e||__filename,function(t){var n,r,a,s,i,o,l,u=void 0!==(t=t||{})?t:{};u.ready=new Promise(function(e,t){o=e,l=t}),"undefined"!=typeof process&&process.listeners&&(w={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p=Object.assign({},u),d=[],h="object"==typeof window,c="function"==typeof importScripts,m="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,f="";if(m){var g=Q(),y=ee();f=c?y.dirname(f)+"/":__dirname+"/",k=(e,t)=>(e=U(e)?new URL(e):y.normalize(e),g.readFileSync(e,t?void 0:"utf8")),S=e=>{var t=k(e,!0);return t.buffer||(t=new Uint8Array(t)),t},I=(e,t,n)=>{e=U(e)?new URL(e):y.normalize(e),g.readFile(e,function(e,r){e?n(e):t(r.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),d=process.argv.slice(2),process.on("uncaughtException",function(e){if(!(e instanceof H))throw e}),process.on("unhandledRejection",function(e){throw e}),u.inspect=function(){return"[Emscripten Module object]"}}else(h||c)&&(c?f=self.location.href:"undefined"!=typeof document&&document.currentScript&&(f=document.currentScript.src),e&&(f=e),f=0!==f.indexOf("blob:")?f.substr(0,f.replace(/[?#].*/,"").lastIndexOf("/")+1):"",k=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},c&&(S=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),I=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{if(200==r.status||0==r.status&&r.response){t(r.response);return}n()},r.onerror=n,r.send(null)},e=>document.title=e);var b=u.print||console.log.bind(console),x=u.printErr||console.warn.bind(console);Object.assign(u,p),p=null,u.arguments&&(d=u.arguments),u.thisProgram&&u.thisProgram,u.quit&&u.quit,u.wasmBinary&&(N=u.wasmBinary);var v=u.noExitRuntime||!0;"object"!=typeof WebAssembly&&W("no native wasm support detected");var w,k,I,S,N,T,_=!1,C="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function E(e,t,n){t>>>=0;for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.buffer&&C)return C.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(!(128&i)){s+=String.fromCharCode(i);continue}var o=63&e[t++];if((224&i)==192){s+=String.fromCharCode((31&i)<<6|o);continue}var l=63&e[t++];if((i=(240&i)==224?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}return s}function $(e){A=e,u.HEAP8=F=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAP32=new Int32Array(e),u.HEAPU8=R=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAPU32=D=new Uint32Array(e),u.HEAPF32=new Float32Array(e),u.HEAPF64=new Float64Array(e)}u.INITIAL_MEMORY;var A,F,R,D,M=[],O=[],L=[],z=0,P=null,B=null;function W(e){u.onAbort&&u.onAbort(e),x(e="Aborted("+e+")"),_=!0,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function V(e){return e.startsWith("data:application/octet-stream;base64,")}function U(e){return e.startsWith("file://")}function G(e){try{if(e==r&&N)return new Uint8Array(N);if(S)return S(e);throw"both async and sync fetching of the wasm failed"}catch(e){W(e)}}function H(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function j(e){for(;e.length>0;)e.shift()(u)}function q(){return 0xffff0000}V(r="tfjs-backend-wasm.wasm")||(n=r,r=u.locateFile?u.locateFile(n,f):f+n);var K=[null,[],[]],X={abort:function(){W("")},emscripten_get_heap_max:function(){return q()},emscripten_memcpy_big:function(e,t,n){R.copyWithin(e>>>0,t>>>0,t+n>>>0)},emscripten_resize_heap:function(e){var t=R.length;e>>>=0;var n=q();if(e>n)return!1;let r=(e,t)=>e+(t-e%t)%t;for(var a=1;a<=4;a*=2){var s=t*(1+.2/a);if(s=Math.min(s,e+0x6000000),function(e){try{return T.grow(e-A.byteLength+65535>>>16),$(T.buffer),1}catch(e){}}(Math.min(n,r(Math.max(e,s),65536))))return!0}return!1},fd_close:function(e){return 52},fd_seek:function(e,t,n,r,a){return 70},fd_write:function(e,t,n,r){for(var a=0,s=0;s<n;s++){var i=D[t>>>2],o=D[t+4>>>2];t+=8;for(var l=0;l<o;l++)(function(e,t){var n=K[e];0===t||10===t?((1===e?b:x)(E(n,0)),n.length=0):n.push(t)})(e,R[i+l>>>0]);a+=o}return D[r>>>2]=a,0}},Y=(function(){var e={env:X,wasi_snapshot_preview1:X};function t(e,t){var n,r=e.exports;u.asm=r,$((T=u.asm.memory).buffer),u.asm.__indirect_function_table,n=u.asm.__wasm_call_ctors,O.unshift(n),function(e){if(z--,u.monitorRunDependencies&&u.monitorRunDependencies(z),0==z&&(null!==P&&(clearInterval(P),P=null),B)){var t=B;B=null,t()}}(0)}function n(e){t(e.instance)}function a(t){return(function(){if(!N&&(h||c)){if("function"==typeof fetch&&!U(r))return fetch(r,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+r+"'";return e.arrayBuffer()}).catch(function(){return G(r)});if(I)return new Promise(function(e,t){I(r,function(t){e(new Uint8Array(t))},t)})}return Promise.resolve().then(function(){return G(r)})})().then(function(t){return WebAssembly.instantiate(t,e)}).then(function(e){return e}).then(t,function(e){x("failed to asynchronously prepare wasm: "+e),W(e)})}if(z++,u.monitorRunDependencies&&u.monitorRunDependencies(z),u.instantiateWasm)try{return u.instantiateWasm(e,t)}catch(e){x("Module.instantiateWasm callback failed with error: "+e),l(e)}(N||"function"!=typeof WebAssembly.instantiateStreaming||V(r)||U(r)||m||"function"!=typeof fetch?a(n):fetch(r,{credentials:"same-origin"}).then(function(t){return WebAssembly.instantiateStreaming(t,e).then(n,function(e){return x("wasm streaming compile failed: "+e),x("falling back to ArrayBuffer instantiation"),a(n)})})).catch(l)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.__wasm_call_ctors).apply(null,arguments)},u._init=function(){return(u._init=u.asm.init).apply(null,arguments)},u._init_with_threads_count=function(){return(u._init_with_threads_count=u.asm.init_with_threads_count).apply(null,arguments)},u._get_threads_count=function(){return(u._get_threads_count=u.asm.get_threads_count).apply(null,arguments)},u._register_tensor=function(){return(u._register_tensor=u.asm.register_tensor).apply(null,arguments)},u._dispose_data=function(){return(u._dispose_data=u.asm.dispose_data).apply(null,arguments)},u._dispose=function(){return(u._dispose=u.asm.dispose).apply(null,arguments)},u._Abs=function(){return(u._Abs=u.asm.Abs).apply(null,arguments)},u._Acos=function(){return(u._Acos=u.asm.Acos).apply(null,arguments)},u._Acosh=function(){return(u._Acosh=u.asm.Acosh).apply(null,arguments)},u._Add=function(){return(u._Add=u.asm.Add).apply(null,arguments)},u._AddN=function(){return(u._AddN=u.asm.AddN).apply(null,arguments)},u._All=function(){return(u._All=u.asm.All).apply(null,arguments)},u._Any=function(){return(u._Any=u.asm.Any).apply(null,arguments)},u._ArgMax=function(){return(u._ArgMax=u.asm.ArgMax).apply(null,arguments)},u._ArgMin=function(){return(u._ArgMin=u.asm.ArgMin).apply(null,arguments)},u._Asin=function(){return(u._Asin=u.asm.Asin).apply(null,arguments)},u._Asinh=function(){return(u._Asinh=u.asm.Asinh).apply(null,arguments)},u._Atan=function(){return(u._Atan=u.asm.Atan).apply(null,arguments)},u._Atan2=function(){return(u._Atan2=u.asm.Atan2).apply(null,arguments)},u._Atanh=function(){return(u._Atanh=u.asm.Atanh).apply(null,arguments)},u._AvgPool=function(){return(u._AvgPool=u.asm.AvgPool).apply(null,arguments)},u._AvgPool3D=function(){return(u._AvgPool3D=u.asm.AvgPool3D).apply(null,arguments)},u._AvgPool3DGrad=function(){return(u._AvgPool3DGrad=u.asm.AvgPool3DGrad).apply(null,arguments)},u._AvgPoolGrad=function(){return(u._AvgPoolGrad=u.asm.AvgPoolGrad).apply(null,arguments)},u._BatchMatMul=function(){return(u._BatchMatMul=u.asm.BatchMatMul).apply(null,arguments)},u._Bincount=function(){return(u._Bincount=u.asm.Bincount).apply(null,arguments)},u._BitwiseAnd=function(){return(u._BitwiseAnd=u.asm.BitwiseAnd).apply(null,arguments)},u._Ceil=function(){return(u._Ceil=u.asm.Ceil).apply(null,arguments)},u._ClipByValue=function(){return(u._ClipByValue=u.asm.ClipByValue).apply(null,arguments)},u._Conv2D=function(){return(u._Conv2D=u.asm.Conv2D).apply(null,arguments)},u._Conv2DBackpropInput=function(){return(u._Conv2DBackpropInput=u.asm.Conv2DBackpropInput).apply(null,arguments)},u._Conv3D=function(){return(u._Conv3D=u.asm.Conv3D).apply(null,arguments)},u._Conv3DBackpropFilterV2=function(){return(u._Conv3DBackpropFilterV2=u.asm.Conv3DBackpropFilterV2).apply(null,arguments)},u._Conv3DBackpropInputV2=function(){return(u._Conv3DBackpropInputV2=u.asm.Conv3DBackpropInputV2).apply(null,arguments)},u._Cos=function(){return(u._Cos=u.asm.Cos).apply(null,arguments)},u._Cosh=function(){return(u._Cosh=u.asm.Cosh).apply(null,arguments)},u._CropAndResize=function(){return(u._CropAndResize=u.asm.CropAndResize).apply(null,arguments)},u._Cumprod=function(){return(u._Cumprod=u.asm.Cumprod).apply(null,arguments)},u._Cumsum=function(){return(u._Cumsum=u.asm.Cumsum).apply(null,arguments)},u._DenseBincount=function(){return(u._DenseBincount=u.asm.DenseBincount).apply(null,arguments)},u._DepthToSpace=function(){return(u._DepthToSpace=u.asm.DepthToSpace).apply(null,arguments)},u._DepthwiseConv2dNative=function(){return(u._DepthwiseConv2dNative=u.asm.DepthwiseConv2dNative).apply(null,arguments)},u._Diag=function(){return(u._Diag=u.asm.Diag).apply(null,arguments)},u._Dilation2D=function(){return(u._Dilation2D=u.asm.Dilation2D).apply(null,arguments)},u._Dilation2DBackpropFilter=function(){return(u._Dilation2DBackpropFilter=u.asm.Dilation2DBackpropFilter).apply(null,arguments)},u._Dilation2DBackpropInput=function(){return(u._Dilation2DBackpropInput=u.asm.Dilation2DBackpropInput).apply(null,arguments)},u._Elu=function(){return(u._Elu=u.asm.Elu).apply(null,arguments)},u._EluGrad=function(){return(u._EluGrad=u.asm.EluGrad).apply(null,arguments)},u._Equal=function(){return(u._Equal=u.asm.Equal).apply(null,arguments)},u._Erf=function(){return(u._Erf=u.asm.Erf).apply(null,arguments)},u._Exp=function(){return(u._Exp=u.asm.Exp).apply(null,arguments)},u._Expm1=function(){return(u._Expm1=u.asm.Expm1).apply(null,arguments)},u._FlipLeftRight=function(){return(u._FlipLeftRight=u.asm.FlipLeftRight).apply(null,arguments)},u._Floor=function(){return(u._Floor=u.asm.Floor).apply(null,arguments)},u._FloorDiv=function(){return(u._FloorDiv=u.asm.FloorDiv).apply(null,arguments)},u._FusedBatchNorm=function(){return(u._FusedBatchNorm=u.asm.FusedBatchNorm).apply(null,arguments)},u._FusedConv2D=function(){return(u._FusedConv2D=u.asm.FusedConv2D).apply(null,arguments)},u._FusedDepthwiseConv2D=function(){return(u._FusedDepthwiseConv2D=u.asm.FusedDepthwiseConv2D).apply(null,arguments)},u._Gather=function(){return(u._Gather=u.asm.Gather).apply(null,arguments)},u._GatherNd=function(){return(u._GatherNd=u.asm.GatherNd).apply(null,arguments)},u._Greater=function(){return(u._Greater=u.asm.Greater).apply(null,arguments)},u._GreaterEqual=function(){return(u._GreaterEqual=u.asm.GreaterEqual).apply(null,arguments)},u._IsFinite=function(){return(u._IsFinite=u.asm.IsFinite).apply(null,arguments)},u._IsInf=function(){return(u._IsInf=u.asm.IsInf).apply(null,arguments)},u._IsNan=function(){return(u._IsNan=u.asm.IsNan).apply(null,arguments)},u._LRN=function(){return(u._LRN=u.asm.LRN).apply(null,arguments)},u._LRNGrad=function(){return(u._LRNGrad=u.asm.LRNGrad).apply(null,arguments)},u._LeakyRelu=function(){return(u._LeakyRelu=u.asm.LeakyRelu).apply(null,arguments)},u._Less=function(){return(u._Less=u.asm.Less).apply(null,arguments)},u._LessEqual=function(){return(u._LessEqual=u.asm.LessEqual).apply(null,arguments)},u._LinSpace=function(){return(u._LinSpace=u.asm.LinSpace).apply(null,arguments)},u._Log=function(){return(u._Log=u.asm.Log).apply(null,arguments)},u._Log1p=function(){return(u._Log1p=u.asm.Log1p).apply(null,arguments)},u._LogicalAnd=function(){return(u._LogicalAnd=u.asm.LogicalAnd).apply(null,arguments)},u._LogicalNot=function(){return(u._LogicalNot=u.asm.LogicalNot).apply(null,arguments)},u._LogicalOr=function(){return(u._LogicalOr=u.asm.LogicalOr).apply(null,arguments)},u._LogicalXor=function(){return(u._LogicalXor=u.asm.LogicalXor).apply(null,arguments)},u._Max=function(){return(u._Max=u.asm.Max).apply(null,arguments)},u._MaxPool=function(){return(u._MaxPool=u.asm.MaxPool).apply(null,arguments)},u._MaxPool3D=function(){return(u._MaxPool3D=u.asm.MaxPool3D).apply(null,arguments)},u._MaxPool3DGrad=function(){return(u._MaxPool3DGrad=u.asm.MaxPool3DGrad).apply(null,arguments)},u._MaxPoolGrad=function(){return(u._MaxPoolGrad=u.asm.MaxPoolGrad).apply(null,arguments)},u._MaxPoolWithArgmax=function(){return(u._MaxPoolWithArgmax=u.asm.MaxPoolWithArgmax).apply(null,arguments)},u._Maximum=function(){return(u._Maximum=u.asm.Maximum).apply(null,arguments)},u._Mean=function(){return(u._Mean=u.asm.Mean).apply(null,arguments)},u._Min=function(){return(u._Min=u.asm.Min).apply(null,arguments)},u._Minimum=function(){return(u._Minimum=u.asm.Minimum).apply(null,arguments)},u._MirrorPad=function(){return(u._MirrorPad=u.asm.MirrorPad).apply(null,arguments)},u._Mod=function(){return(u._Mod=u.asm.Mod).apply(null,arguments)},u._Multinomial=function(){return(u._Multinomial=u.asm.Multinomial).apply(null,arguments)},u._Multiply=function(){return(u._Multiply=u.asm.Multiply).apply(null,arguments)},u._Neg=function(){return(u._Neg=u.asm.Neg).apply(null,arguments)},u._NonMaxSuppressionV3=function(){return(u._NonMaxSuppressionV3=u.asm.NonMaxSuppressionV3).apply(null,arguments)},u._NonMaxSuppressionV4=function(){return(u._NonMaxSuppressionV4=u.asm.NonMaxSuppressionV4).apply(null,arguments)},u._NonMaxSuppressionV5=function(){return(u._NonMaxSuppressionV5=u.asm.NonMaxSuppressionV5).apply(null,arguments)},u._NotEqual=function(){return(u._NotEqual=u.asm.NotEqual).apply(null,arguments)},u._OneHot=function(){return(u._OneHot=u.asm.OneHot).apply(null,arguments)},u._PadV2=function(){return(u._PadV2=u.asm.PadV2).apply(null,arguments)},u._Pow=function(){return(u._Pow=u.asm.Pow).apply(null,arguments)},u._Prelu=function(){return(u._Prelu=u.asm.Prelu).apply(null,arguments)},u._Prod=function(){return(u._Prod=u.asm.Prod).apply(null,arguments)},u._RealDiv=function(){return(u._RealDiv=u.asm.RealDiv).apply(null,arguments)},u._Reciprocal=function(){return(u._Reciprocal=u.asm.Reciprocal).apply(null,arguments)},u._Relu=function(){return(u._Relu=u.asm.Relu).apply(null,arguments)},u._Relu6=function(){return(u._Relu6=u.asm.Relu6).apply(null,arguments)},u._ResizeBilinear=function(){return(u._ResizeBilinear=u.asm.ResizeBilinear).apply(null,arguments)},u._ResizeBilinearGrad=function(){return(u._ResizeBilinearGrad=u.asm.ResizeBilinearGrad).apply(null,arguments)},u._ResizeNearestNeighbor=function(){return(u._ResizeNearestNeighbor=u.asm.ResizeNearestNeighbor).apply(null,arguments)},u._ResizeNearestNeighborGrad=function(){return(u._ResizeNearestNeighborGrad=u.asm.ResizeNearestNeighborGrad).apply(null,arguments)},u._Reverse=function(){return(u._Reverse=u.asm.Reverse).apply(null,arguments)},u._RotateWithOffset=function(){return(u._RotateWithOffset=u.asm.RotateWithOffset).apply(null,arguments)},u._Round=function(){return(u._Round=u.asm.Round).apply(null,arguments)},u._Rsqrt=function(){return(u._Rsqrt=u.asm.Rsqrt).apply(null,arguments)},u._ScatterNd=function(){return(u._ScatterNd=u.asm.ScatterNd).apply(null,arguments)},u._SearchSorted=function(){return(u._SearchSorted=u.asm.SearchSorted).apply(null,arguments)},u._SelectV2=function(){return(u._SelectV2=u.asm.SelectV2).apply(null,arguments)},u._Selu=function(){return(u._Selu=u.asm.Selu).apply(null,arguments)},u._Sigmoid=function(){return(u._Sigmoid=u.asm.Sigmoid).apply(null,arguments)},u._Sign=function(){return(u._Sign=u.asm.Sign).apply(null,arguments)},u._Sin=function(){return(u._Sin=u.asm.Sin).apply(null,arguments)},u._Sinh=function(){return(u._Sinh=u.asm.Sinh).apply(null,arguments)},u._Softmax=function(){return(u._Softmax=u.asm.Softmax).apply(null,arguments)},u._Softplus=function(){return(u._Softplus=u.asm.Softplus).apply(null,arguments)},u._SparseFillEmptyRows=function(){return(u._SparseFillEmptyRows=u.asm.SparseFillEmptyRows).apply(null,arguments)},u._SparseReshape=function(){return(u._SparseReshape=u.asm.SparseReshape).apply(null,arguments)},u._SparseSegmentReduction=function(){return(u._SparseSegmentReduction=u.asm.SparseSegmentReduction).apply(null,arguments)},u._SparseToDense=function(){return(u._SparseToDense=u.asm.SparseToDense).apply(null,arguments)},u._Sqrt=function(){return(u._Sqrt=u.asm.Sqrt).apply(null,arguments)},u._Square=function(){return(u._Square=u.asm.Square).apply(null,arguments)},u._SquaredDifference=function(){return(u._SquaredDifference=u.asm.SquaredDifference).apply(null,arguments)},u._Step=function(){return(u._Step=u.asm.Step).apply(null,arguments)},u._StridedSlice=function(){return(u._StridedSlice=u.asm.StridedSlice).apply(null,arguments)},u._Sub=function(){return(u._Sub=u.asm.Sub).apply(null,arguments)},u._Sum=function(){return(u._Sum=u.asm.Sum).apply(null,arguments)},u._Tan=function(){return(u._Tan=u.asm.Tan).apply(null,arguments)},u._Tanh=function(){return(u._Tanh=u.asm.Tanh).apply(null,arguments)},u._TensorScatterUpdate=function(){return(u._TensorScatterUpdate=u.asm.TensorScatterUpdate).apply(null,arguments)},u._Tile=function(){return(u._Tile=u.asm.Tile).apply(null,arguments)},u._TopK=function(){return(u._TopK=u.asm.TopK).apply(null,arguments)},u._Transform=function(){return(u._Transform=u.asm.Transform).apply(null,arguments)},u._Transpose=function(){return(u._Transpose=u.asm.Transpose).apply(null,arguments)},u.__FusedMatMul=function(){return(u.__FusedMatMul=u.asm._FusedMatMul).apply(null,arguments)},u._malloc=function(){return(u._malloc=u.asm.malloc).apply(null,arguments)},u._free=function(){return(u._free=u.asm.free).apply(null,arguments)},u.___errno_location=function(){return(u.___errno_location=u.asm.__errno_location).apply(null,arguments)},u.stackSave=function(){return(Y=u.stackSave=u.asm.stackSave).apply(null,arguments)}),Z=u.stackRestore=function(){return(Z=u.stackRestore=u.asm.stackRestore).apply(null,arguments)},J=u.stackAlloc=function(){return(J=u.stackAlloc=u.asm.stackAlloc).apply(null,arguments)};function et(e){e=e||d,z>0||(function(){if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;){var e;e=u.preRun.shift(),M.unshift(e)}j(M)}(),z>0)||(u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),t()},1)):t());function t(){a||(a=!0,u.calledRun=!0,_||(j(O),o(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),function(){if(u.postRun)for("function"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var e;e=u.postRun.shift(),L.unshift(e)}j(L)}()))}}if(u.dynCall_iijjiiii=function(){return(u.dynCall_iijjiiii=u.asm.dynCall_iijjiiii).apply(null,arguments)},u.dynCall_jiji=function(){return(u.dynCall_jiji=u.asm.dynCall_jiji).apply(null,arguments)},u.cwrap=function(e,t,n,r){var a=(n=n||[]).every(e=>"number"===e||"boolean"===e);return"string"!==t&&a&&!r?u["_"+e]:function(){return function(e,t,n,r,a){var s,i,o={string:e=>{var t=0;if(null!=e&&0!==e){var n=(e.length<<2)+1;t=J(n),function(e,t,n,r){if(n>>>=0,r>0){for(var a=n+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++>>>0]=i}else if(i<=2047){if(n+1>=a)break;t[n++>>>0]=192|i>>6,t[n++>>>0]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++>>>0]=224|i>>12,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}else{if(n+3>=a)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63,t[n++>>>0]=128|i>>6&63,t[n++>>>0]=128|63&i}}t[n>>>0]=0}}(e,R,t,n)}return t},array:e=>{var t=J(e.length);return F.set(e,t>>>0),t}},l=u["_"+e],p=[],d=0;if(r)for(var h=0;h<r.length;h++){var c=o[n[h]];c?(0===d&&(d=Y()),p[h]=c(r[h])):p[h]=r[h]}var m=l.apply(null,p);return i=m,0!==d&&Z(d),m="string"===t?(s=i>>>0)?E(R,s,void 0):"":"boolean"===t?!!i:i}(e,t,n,arguments,0)}},B=function e(){a||et(),a||(B=e)},u.preInit)for("function"==typeof u.preInit&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();if(et(),w&&(s={uncaughtException:process.listeners("uncaughtException").filter(function(e){return!w.uncaughtException.indexOf(e)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(e){return!w.unhandledRejection.indexOf(e)>-1})}),void 0!==t)i=t;else if("undefined"!=typeof WasmBackendModuleThreadedSimd)i=WasmBackendModuleThreadedSimd;else throw Error("Could not find wasm module in post.js");if(s){var en=i._dispose;i._dispose=function(){en(),s.uncaughtException.forEach(function(e){process.removeListener("uncaughtException",e)}),s.unhandledRejection.forEach(function(e){process.removeListener("unhandledRejection",e)})}}return t.ready}})();"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&n.amdO?define([],function(){return r}):"object"==typeof e&&(e.WasmBackendModule=r)}),eo=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},el=class{refCount(e){return eu("refCount")}incRef(e){return eu("incRef")}timerAvailable(){return!0}time(e){return eu("time")}read(e){return eu("read")}readSync(e){return eu("readSync")}readToGPU(e,t){return eu("readToGPU")}numDataIds(){return eu("numDataIds")}disposeData(e,t){return eu("disposeData")}write(e,t,n){return eu("write")}move(e,t,n,r,a){return eu("move")}createTensorFromGPUData(e,t,n){return eu("createTensorFromGPUData")}memory(){return eu("memory")}floatPrecision(){return eu("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return eu("dispose")}};function eu(e){throw Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function ep(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,em(e,--t,n)}function ed(e,t){if(e.length!==t.length)throw Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,em(e,--n,r),em(t,n,r)}function eh(e,t,n){return Math.max(e,Math.min(t,n))}function ec(e){return e%2==0?e:e+1}function em(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function ef(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function eg(e,t){let n=Math.random();return t*n+(1-n)*e}function ey(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function eb(e,t){if(!e)throw Error("string"==typeof t?t:t())}function ex(e,t,n=""){eb(eS(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function ev(e){eb(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function ew(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ek(e){return 0===e.length}function eI(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function eS(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function eN(e){return e%1==0}function eT(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return -1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function e_(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function eC(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return ep(t),t}function eE(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function e$(e,t=e=>0,n,r){return new Promise((a,s)=>{let i=0,o=()=>{if(e()){a();return}let l=t(++i);if(null!=n&&i>=n){s();return}null!=r?r(o,l):setTimeout(o,l)};o()})}function eA(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function eF(e,t){let n=t.length;return eb((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),eb(e.every(e=>eN(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?n+e:e)}function eR(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:eF(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function eD(e,t){return eM(e,t)}function eM(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else if("string"===e)n=Array(t);else throw Error(`Unknown data type ${e}`);return n}function eO(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function eL(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function ez(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function eP(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw Error(`Unknown dtype ${e}`)}function eB(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function eW(e){return"string"==typeof e||e instanceof String}function eV(e){return"boolean"==typeof e}function eU(e){return"number"==typeof e}function eG(e){return Array.isArray(e)?eG(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":eU(e)?"float32":eW(e)?"string":eV(e)?"bool":"float32"}function eH(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ej(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function eq(e){let t=e.length;if(t<2)return[];let n=Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function eK(e,t,n=!1){if(0===e.length)return t[0];let r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return function e(t,n,r,a=!1){let s=[];if(1===n.length){let e=n[0]*(a?2:1);for(let n=0;n<e;n++)s[n]=r[t+n]}else{let i=n[0],o=n.slice(1),l=o.reduce((e,t)=>e*t)*(a?2:1);for(let n=0;n<i;n++)s[n]=e(t+n*l,o,r,a)}return s}(0,e,t,n)}function eX(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw Error(`Unknown dtype ${t}`)}function eY(e,t){let n=eZ(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function eZ(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw Error(`Unknown data type ${t}`)}function eJ(e,t){let n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return eK(e,new Float32Array(n));if("int32"===t)return eK(e,new Int32Array(n));if("bool"===t)return eK(e,new Uint8Array(n));throw Error(`Unknown data type ${t}`)}function eQ(e){e.forEach(t=>{eb(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function e0(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function e1(e,t,n){if(0===t)return[];if(1===t)return[e];let r=Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function e2(e){return e&&e.then&&"function"==typeof e.then}var e3="tfjsflags",e4=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=e6,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(e8.getBool("IS_TEST")||e8.getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];e8.getBool("IS_TEST")||e8.getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(e2(t))throw Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);e3 in e&&e[e3].split(",").forEach(e=>{let t,[n,r]=e.split(":");this.urlFlags[n]="true"===(t=r.toLowerCase())||"false"===t?"true"===t:`${+t}`===t?+t:r})}};function e6(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>{var r,a;return r=n[0],a=n[1],t[decodeURIComponent(r)]=decodeURIComponent(a||""),n.join("=")}),t}function e5(){return e8}var e8=null;function e7(){if(null==ia){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else if("undefined"!=typeof self)e=self;else throw Error("Could not find a global object");ia=e}return ia}function e9(e,t){let n;let r=(null==(n=e7())._tfGlobals&&(n._tfGlobals=new Map),n._tfGlobals);if(r.has(e))return r.get(e);{let n=t();return r.set(e,n),r.get(e)}}var te="Abs",tt="Acos",tn="Acosh",tr="Add",ta="AddN",ts="All",ti="Any",to="ArgMax",tl="ArgMin",tu="Asin",tp="Asinh",td="Atan",th="Atanh",tc="Atan2",tm="AvgPool",tf="AvgPoolGrad",tg="AvgPool3D",ty="AvgPool3DGrad",tb="BatchMatMul",tx="BatchToSpaceND",tv="Bincount",tw="BitwiseAnd",tk="BroadcastTo",tI="BroadcastArgs",tS="Cast",tN="Ceil",tT="ClipByValue",t_="Complex",tC="ComplexAbs",tE="Concat",t$="Conv2D",tA="Conv2DBackpropFilter",tF="Conv2DBackpropInput",tR="Conv3D",tD="Conv3DBackpropFilterV2",tM="Conv3DBackpropInputV2",tO="Cos",tL="Cosh",tz="Cumprod",tP="Cumsum",tB="CropAndResize",tW="DenseBincount",tV="DepthToSpace",tU="DepthwiseConv2dNative",tG="DepthwiseConv2dNativeBackpropFilter",tH="DepthwiseConv2dNativeBackpropInput",tj="Diag",tq="Dilation2D",tK="Dilation2DBackpropInput",tX="Dilation2DBackpropFilter",tY="Draw",tZ="RealDiv",tJ="Einsum",tQ="Elu",t0="EluGrad",t1="Erf",t2="Equal",t3="Exp",t4="ExpandDims",t6="Expm1",t5="FFT",t8="Fill",t7="FlipLeftRight",t9="Floor",ne="FloorDiv",nt="FusedBatchNorm",nn="GatherV2",nr="GatherNd",na="Greater",ns="GreaterEqual",ni="Identity",no="IFFT",nl="Imag",nu="IsFinite",np="IsInf",nd="IsNan",nh="LeakyRelu",nc="Less",nm="LessEqual",nf="LinSpace",ng="Log",ny="Log1p",nb="LogicalAnd",nx="LogicalNot",nv="LogicalOr",nw="LogicalXor",nk="LogSoftmax",nI="LowerBound",nS="LRN",nN="LRNGrad",nT="MatrixBandPart",n_="Max",nC="Maximum",nE="MaxPool",n$="MaxPoolGrad",nA="MaxPool3D",nF="MaxPool3DGrad",nR="MaxPoolWithArgmax",nD="Mean",nM="Min",nO="Minimum",nL="MirrorPad",nz="Mod",nP="Multinomial",nB="Multiply",nW="Neg",nV="NotEqual",nU="NonMaxSuppressionV3",nG="NonMaxSuppressionV4",nH="NonMaxSuppressionV5",nj="OnesLike",nq="OneHot",nK="Pack",nX="PadV2",nY="Pool",nZ="Pow",nJ="Prelu",nQ="Prod",n0="RaggedGather",n1="RaggedRange",n2="RaggedTensorToTensor",n3="Range",n4="Real",n6="Reciprocal",n5="Relu",n8="Reshape",n7="ResizeNearestNeighbor",n9="ResizeNearestNeighborGrad",re="ResizeBilinear",rt="ResizeBilinearGrad",rn="Relu6",rr="Reverse",ra="Round",rs="Rsqrt",ri="ScatterNd",ro="TensorScatterUpdate",rl="SearchSorted",ru="Select",rp="Selu",rd="Slice",rh="Sin",rc="Sinh",rm="Sign",rf="Sigmoid",rg="Softplus",ry="Sqrt",rb="Sum",rx="SpaceToBatchND",rv="SplitV",rw="Softmax",rk="SparseFillEmptyRows",rI="SparseReshape",rS="SparseSegmentMean",rN="SparseSegmentSum",rT="SparseToDense",r_="SquaredDifference",rC="Square",rE="StaticRegexReplace",r$="StridedSlice",rA="StringNGrams",rF="StringSplit",rR="StringToHashBucketFast",rD="Sub",rM="Tan",rO="Tanh",rL="Tile",rz="TopK",rP="Transform",rB="Transpose",rW="Unique",rV="Unpack",rU="UnsortedSegmentSum",rG="UpperBound",rH="ZerosLike",rj="Step",rq="FromPixels",rK="RotateWithOffset",rX="_FusedMatMul",rY="FusedConv2D",rZ="FusedDepthwiseConv2D";function rJ(...e){e8.getBool("IS_TEST")||e8.getBool("PROD")||console.warn(...e)}function rQ(...e){e8.getBool("IS_TEST")||e8.getBool("PROD")||console.log(...e)}var r0=e9("kernelRegistry",()=>new Map),r1=e9("gradRegistry",()=>new Map);function r2(e,t){let n=ae(e,t);return r0.get(n)}function r3(e){return r1.get(e)}function r4(e){let t=r0.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function r6(e){let{kernelName:t,backendName:n}=e,r=ae(t,n);r0.has(r)&&rJ(`The kernel '${t}' for backend '${n}' is already registered`),r0.set(r,e)}function r5(e){let{kernelName:t}=e;r1.has(t)&&e8.getBool("DEBUG")&&rJ(`Overriding the gradient for '${t}'`),r1.set(t,e)}function r8(e,t){let n=ae(e,t);if(!r0.has(n))throw Error(`The kernel '${e}' for backend '${t}' is not registered`);r0.delete(n)}function r7(e){if(!r1.has(e))throw Error(`The gradient '${e}' for backend is not registered`);r1.delete(e)}function r9(e,t){r4(e).forEach(e=>{r6(Object.assign({},e,{backendName:t}))})}function ae(e,t){return`${t}_${e}`}var at={};function an(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}L(at,{arraysEqual:()=>eS,arraysEqualWithNull:()=>eI,assert:()=>eb,assertNonNegativeIntegerDimensions:()=>eQ,assertNonNull:()=>ev,assertShapesMatch:()=>ex,bytesFromStringArray:()=>eB,bytesPerElement:()=>eP,checkConversionForErrors:()=>eO,clamp:()=>eh,computeStrides:()=>eq,convertBackendValuesAndArrayBuffer:()=>eX,createScalarValue:()=>ag,createShuffledIndices:()=>eC,decodeString:()=>aw,distSquared:()=>ey,encodeString:()=>av,fetch:()=>ax,fingerPrint64:()=>af,flatten:()=>aI,getArrayFromDType:()=>eM,getTypedArrayFromDType:()=>eD,hasEncodingLoss:()=>ez,hexToLong:()=>as,indexToLoc:()=>e1,inferDtype:()=>eG,inferFromImplicitShape:()=>eA,isBoolean:()=>eV,isFunction:()=>eH,isInt:()=>eN,isNumber:()=>eU,isPromise:()=>e2,isScalarShape:()=>ek,isString:()=>eW,isTypedArray:()=>ak,isValidDtype:()=>eL,locToIndex:()=>e0,makeOnesTypedArray:()=>eY,makeZerosNestedTypedArray:()=>eJ,makeZerosTypedArray:()=>eZ,nearestDivisor:()=>ej,nearestLargerEven:()=>ec,now:()=>ab,parseAxisParam:()=>eF,randUniform:()=>eg,repeatedTry:()=>e$,rightPad:()=>eE,shuffle:()=>ep,shuffleCombo:()=>ed,sizeFromShape:()=>ew,sizeToSquarishShape:()=>e_,squeezeShape:()=>eR,sum:()=>ef,swap:()=>em,tanh:()=>eT,toNestedArray:()=>eK,toTypedArray:()=>ay});var ar=P(B()),aa=ar.default||ar;function as(e){return aa.fromString(e,!0,16)}var ai=as("c3a5c85c97cb3127"),ao=as("b492b66fbe98f273"),al=as("9ae16a3b2f90404f");function au(e){return e.xor(e.shru(47))}function ap(e,t,n){let r=e.slice(t,t+n);return aa.fromBytes(Array.from(r),!0,!0)}function ad(e,t){return ap(e,t,8)}function ah(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function ac(e,t,n=as("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return(a=a.xor(a.shru(47))).mul(n)}function am(e,t,n,r){var a,s,i,o,l,u;let p;return a=ad(e,t),s=ad(e,t+8),i=ad(e,t+16),o=ad(e,t+24),l=n,u=r,l=l.add(a),u=ah(u.add(l).add(o),21),p=l,l=(l=l.add(s)).add(i),u=u.add(ah(l,44)),[l.add(o),u.add(p)]}function af(e,t=e.length){let n=aa.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){let n=al.add(2*t),r=ad(e,0).add(al),a=ad(e,t-8);return ac(ah(a,37).mul(n).add(r),ah(r,25).add(a).mul(n),n)}if(t>=4){let n=al.add(2*t);return ac(ap(e,0,4).shl(3).add(t),ap(e,t-4,4),n)}if(t>0){let n=e[0],r=e[t>>1],a=e[t-1];return au(al.mul(n+(r<<8)).xor(ai.mul(t+(a<<2)))).mul(al)}return al}(e,t):function(e,t=e.length){let n=al.add(2*t),r=ad(e,0).mul(ao),a=ad(e,8),s=ad(e,t-8).mul(n),i=ad(e,t-16).mul(al);return ac(ah(r.add(a),43).add(ah(s,30)).add(i),r.add(ah(a.add(al),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){let n=al.add(2*t),r=ad(e,0).mul(al),a=ad(e,8),s=ad(e,t-8).mul(n),i=ad(e,t-16).mul(al),o=ah(r.add(a),43).add(ah(s,30)).add(i),l=ac(o,r.add(ah(a.add(al),18)).add(s),n),u=ad(e,16).mul(n),p=ad(e,24),d=o.add(ad(e,t-32)).mul(n),h=l.add(ad(e,t-24)).mul(n);return ac(ah(u.add(p),43).add(ah(d,30)).add(h),u.add(ah(p.add(r),18)).add(d),n)}(e,t);let r=n,a=n.mul(ao).add(113),s=au(a.mul(al).add(113)).mul(al),i=[aa.UZERO,aa.UZERO],o=[aa.UZERO,aa.UZERO];r=r.mul(al).add(ad(e,0));let l=0,u=(t-1>>6)*64,p=u+(t-1&63)-63;do r=ah(r.add(a).add(i[0]).add(ad(e,l+8)),37).mul(ao),a=ah(a.add(i[1]).add(ad(e,l+48)),42).mul(ao),r=r.xor(o[1]),a=a.add(i[0]).add(ad(e,l+40)),s=ah(s.add(o[0]),33).mul(ao),i=am(e,l,i[1].mul(ao),r.add(o[0])),o=am(e,l+32,s.add(o[1]),a.add(ad(e,l+16))),[s,r]=[r,s],l+=64;while(l!==u);let d=ao.add(s.and(255).shl(1));return l=p,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=ah(r.add(a).add(i[0]).add(ad(e,l+8)),37).mul(d),a=ah(a.add(i[1]).add(ad(e,l+48)),42).mul(d),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(ad(e,l+40))),s=ah(s.add(o[0]),33).mul(d),i=am(e,l,i[1].mul(d),r.add(o[0])),o=am(e,l+32,s.add(o[1]),a.add(ad(e,l+16))),[s,r]=[r,s],ac(ac(i[0],o[0],d).add(au(a).mul(ai)).add(s),ac(i[1],o[1],d).add(r),d)}function ag(e,t){return"string"===t?av(e):ay([e],t)}function ay(e,t){var n;if("string"===t)throw Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=aI(e)),e8.getBool("DEBUG")&&eO(e,t),(n=e)instanceof Float32Array&&"float32"===t||n instanceof Int32Array&&"int32"===t||n instanceof Uint8Array&&"bool"===t)return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw Error(`Unknown data type ${t}`)}function ab(){return e8.platform.now()}function ax(e,t){return e8.platform.fetch(e,t)}function av(e,t="utf-8"){return t=t||"utf-8",e8.platform.encode(e,t)}function aw(e,t="utf-8"){return t=t||"utf-8",e8.platform.decode(e,t)}function ak(e){return null!=e8.platform.isTypedArray?e8.platform.isTypedArray(e):an(e)}function aI(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||e2(e)||null==e||ak(e)&&n)t.push(e);else if(Array.isArray(e)||ak(e))for(let r=0;r<e.length;++r)aI(e[r],t,n);else{let r=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)aI(e[a],t,n)}return t}var aS=class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new aN)}profileKernel(e,t,n){let r,a=()=>{r=n()},s,i=ab();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{for(let e of(a(),r))e.dataSync();s=Promise.resolve({kernelMs:ab()-i})}if(e8.getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){let n=r[t];n.data().then(t=>{(function(e,t,n){if("float32"===t)for(let t=0;t<e.length;t++){let r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}})(t,n.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then(e=>e.kernelMs),extraInfo:s.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}},aN=class{logKernelProfile(e,t,n,r,a,s){let i="number"==typeof r?eE(`${r}ms`,9):r.error,o=eE(e,25),l=t.rank,u=t.size,p=eE(t.shape.toString(),14),d="";for(let e in a){let n=a[e];if(null!=n){let r=n.shape||t.shape,a=r.length;d+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}	%c${i}	%c${l}D ${p}	%c${u}	%c${d}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function aT(e,t,n){return eE(Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:eW(e)?`'${e}'`:"bool"===n?a_(e):parseFloat(e.toFixed(7)).toString(),t)}function a_(e){return 0===e?"false":"true"}function aC(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var aE=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ew(e),null!=n){let e=n.length;eb(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||eM(t,this.size),this.strides=eq(e)}set(e,...t){0===t.length&&(t=[0]),eb(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t])throw Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`);t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return a$().makeTensor(this.values,this.shape,this.dtype)}},a$=null,aA=null,aF=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ew(e),this.strides=eq(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return aA.buffer(this.shape,this.dtype,e)}bufferSync(){return aA.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return eK(this.shape,e,"complex64"===this.dtype)}arraySync(){return eK(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=a$().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map(e=>aw(e))}catch(e){throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),a$().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=a$().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>aw(e))}catch(e){throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await a$().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),a$().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw Error("Tensor is disposed.")}print(e=!1){return aA.print(this,e)}clone(){return this.throwIfDisposed(),aA.clone(this)}toString(e=!1){var t,n,r;let a,s,i,o,l;return t=this.dataSync(),n=this.shape,r=this.dtype,a=eq(n),s=function(e,t,n,r){let a=ew(t),s=r[r.length-1],i=Array(s).fill(0),o=t.length,l="complex64"===n?aC(e):e;if(o>1)for(let e=0;e<a/s;e++){let t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],aT(l[t+e],0,n).length)}return i}(t,n,r,a),i=n.length,o=function e(t,n,r,a,s,i=!0){let o="complex64"===r?2:1,l=n[0],u=n.length;if(0===u)return"complex64"===r?[aT(aC(t)[0],0,r)]:"bool"===r?[a_(t[0])]:[t[0].toString()];if(1===u){if(l>20){let e=Array.from(t.slice(0,3*o)),n=Array.from(t.slice((l-3)*o,l*o));return"complex64"===r&&(e=aC(e),n=aC(n)),["["+e.map((e,t)=>aT(e,s[t],r)).join(", ")+", ..., "+n.map((e,t)=>aT(e,s[l-3+t],r)).join(", ")+"]"]}return["["+("complex64"===r?aC(t):Array.from(t)).map((e,t)=>aT(e,s[t],r)).join(", ")+"]"]}let p=n.slice(1),d=a.slice(1),h=a[0]*o,c=[];if(l>20){for(let n=0;n<3;n++){let a=n*h,i=a+h;c.push(...e(t.slice(a,i),p,r,d,s,!1))}c.push("...");for(let n=l-3;n<l;n++){let a=n*h,i=a+h;c.push(...e(t.slice(a,i),p,r,d,s,n===l-1))}}else for(let n=0;n<l;n++){let a=n*h,i=a+h;c.push(...e(t.slice(a,i),p,r,d,s,n===l-1))}let m=2===u?",":"";c[0]="["+(l>0?c[0]+m:"");for(let e=1;e<c.length-1;e++)c[e]=" "+c[e]+m;let f=`,
`;for(let e=2;e<u;e++)f+=`
`;return c[c.length-1]=" "+c[c.length-1]+"]"+(i?"":f),c}(t,n,r,a,s),l=["Tensor"],e&&(l.push(`  dtype: ${r}`),l.push(`  rank: ${i}`),l.push(`  shape: [${n}]`),l.push("  values:")),l.push(o.map(e=>"    "+e).join(`
`)),l.join(`
`)}cast(e){return this.throwIfDisposed(),aA.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),a$().makeVariable(this,e,t,n)}};function aR(){return e9("Tensor",()=>aF)}Object.defineProperty(aF,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),aR();var aD=class extends aF{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!eS(e.shape,this.shape))throw Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);a$().disposeTensor(this),this.dataId=e.dataId,a$().incRef(this,null)}dispose(){a$().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(aD,Symbol.hasInstance,{value:e=>e instanceof aF&&null!=e.assign&&e.assign instanceof Function});var aM={};L(aM,{assertTypesMatch:()=>aV,getTensorsInContainer:()=>aG,isTensorInList:()=>aU,makeTypesMatch:()=>aW}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(is||(is={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ii||(ii={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(io||(io={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(il||(il={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(iu||(iu={}));var aO={float32:il,int32:ii,bool:io,complex64:iu};function aL(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw Error(`Can not upcast ${e} with ${t}`)}return aO[e][t]}function az(e){return aL(e,"int32")}function aP(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function aB(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function aW(e,t){if(e.dtype===t.dtype)return[e,t];let n=aL(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function aV(e,t){eb(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function aU(e,t){return t.some(t=>t.id===e.id)}function aG(e){let t=[];return function e(t,n,r){if(null!=t){if(t instanceof aF){n.push(t);return}if(Array.isArray(t)||"object"==typeof t)for(let a in t){let s=t[a];r.has(s)||(r.add(s),e(s,n,r))}}}(e,t,new Set),t}function aH(e){return null!=e.kernelName}var aj=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},aq=class e{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new aj}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(rJ(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new aS(this.backendInstance),!0}setupRegisteredKernels(){r4(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){r4(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof el||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,rJ(`Initialization of backend ${e} failed`),rJ(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return rJ(`Initialization of backend ${e} failed`),rJ(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>((n=t())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return e.nextTensorId++}nextVariableId(){return e.nextVariableId++}clone(e){let t=aX.runKernel(ni,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>aX.runKernel(tS,{x:e},{dtype:"float32"})}),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==r2(e,this.backendName))throw Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=aH(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(aH(e)){let{kernelName:n,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=r2(n,this.backendName);eb(null!=l,()=>`Cannot find registered kernel '${n}' for backend '${this.backendName}'`),t=()=>{let e=this.backend.numDataIds(),t=Array.isArray(o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend}))?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(n,e,t);let u=t.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(a){let e=this.getTensorsForGradient(n,s,u);r=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:n}=e,s=e=>{a&&(r=e.map(e=>this.keep(this.clone(e))))};t=()=>{let e=this.backend.numDataIds(),t=Array.isArray(o=this.tidy(()=>n(this.backend,s)))?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,t),t}}let{inputs:u,attrs:p}=e,d=aH(e)?null:e.backwardsFunc,h;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(h=this.profiler.profileKernel(l,u,()=>t()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),n=h.outputs):n=t()}),a&&this.addTapeNode(l,u,n,d,r,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(e=>null!=u[e]?u[e].shape:null),outputShapes:n.map(e=>e.shape),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(o)?n:n[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){let r=r3(e);if(null!=r){let e=r.inputsToSave||[],a=r.outputsToSave||[],s;r.saveAllInputs?(eb(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(t).map(e=>t[e])):s=e.map(e=>t[e]);let i=n.filter((e,t)=>a[t]);return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&eW(e[0])&&(a=e.map(e=>av(e)));let s=r.write(a,t,n),i=new aF(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){let e=this.state.tensorInfo.get(s),t=eB(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){let a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:r,dtype:a}=e,s=new aF(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new aD(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*eP(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof aD||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*eP(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;for(let r of(this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n,this.state.activeProfile.kernels))r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=r3(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map((e,t)=>{if(null==e){let e=n[t],r=eZ(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=aG(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(eb(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));eb(a instanceof aF,()=>"The result y returned by f() must be a tensor.");let s=function(e,t,n){let r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){let s=e[n],i=s.inputs;for(let e in i){let n=i[e],o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach(e=>r[e.id]=!0),o=!0,a[s.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let t=e.length-1;t>=0;t--){let n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(let e in r)s[r[e].id]=!0,i[n.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let n=e[t];if(a[n.id]&&i[n.id]){let e={};for(let t in n.inputs){let a=n.inputs[t];r[a.id]&&(e[t]=a)}let t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{var e;let r,i={};i[a.id]=null==n?(r=eY(ew(e=a.shape),"float32"),aX.makeTensor(r,e,"float32")):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach(t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)}),null==s.gradient)throw Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=n(()=>o[t]());if("float32"!==a.dtype)throw Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!eS(a.shape,i.shape))throw Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(i,s,e=>this.tidy(e),aY);let o=t.map(e=>i[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(let t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:o}})}customGrad(e){return eb(eH(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{eb(t.every(e=>e instanceof aF),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc({forwardFunc:(r,a)=>(eb((n=e(...t,a)).value instanceof aF,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),eb(eH(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{let a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];eb(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),eb(s.every(e=>e instanceof aF),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let i={};return s.forEach((e,t)=>{i[t]=()=>e}),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=ab(),n=await this.backend.time(e);return n.wallMs=ab()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){for(let e in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new aj,this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function aK(){let e=e7();if(null==e._tfengine){let t=new e4(e);e._tfengine=new aq(t)}return e8=e._tfengine.ENV,a$=()=>e._tfengine,e._tfengine}aq.nextTensorId=0,aq.nextVariableId=0;var aX=aK();function aY(e,t){return aX.runKernel(tr,{a:e,b:t})}var aZ={};function aJ(e){ip=e}function aQ(e){if(void 0!==ip)return ip;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function a0(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}L(aZ,{isBrowser:()=>a0,isMobile:()=>aQ,mockIsMobile:()=>aJ});var a1=e8;function a2(e,t){let n=e;if(ak(e))return"string"===t?[]:[e.length];if(aP(e)){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(aB(e))return[e.buffer.size/(null==t?4:eP(t))];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||ak(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&e8.getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],!Array.isArray(t)&&!ak(t)){eb(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);return}eb(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${t.length} elements`),eb(t.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${t.length} elements`);let a=n.slice(1);for(let n=0;n<t.length;++n)e(t[n],a,r.concat(n))}(e,r,[]),r}function a3(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function a4(e,t,n,r="numeric"){if(e instanceof aR())return a3(r,e.dtype,t,n),e;let a=eG(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),a3(r,a,t,n),null==e||!ak(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let s=a2(e,a);ak(e)||Array.isArray(e)||(e=[e]);let i="string"!==a?ay(e,a):aI(e,[],!0);return aX.makeTensor(i,s,a)}function a6(e,t,n,r="numeric"){if(!Array.isArray(e))throw Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,a)=>a4(e,`${t}[${a}]`,n,r))}a1.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),a1.registerFlag("IS_BROWSER",()=>a0()),a1.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),a1.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),a1.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),a1.registerFlag("PROD",()=>!1),a1.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>a1.getBool("DEBUG")),a1.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),a1.registerFlag("IS_TEST",()=>!1),a1.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>a1.getBool("DEBUG")),a1.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),a1.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),a1.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);var a5="__op";function a8(e){let t=Object.keys(e);if(1!==t.length)throw Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));let a=(...e)=>{aX.startScope(n);try{let t=r(...e);return e2(t)&&console.error("Cannot return a Promise inside of tidy."),aX.endScope(t),t}catch(e){throw aX.endScope(null),e}};return Object.defineProperty(a,"name",{value:n+=a5,configurable:!0}),a}var a7=a8({complex_:function(e,t){let n=a4(e,"real","complex"),r=a4(t,"imag","complex");return ex(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`),aX.runKernel(t_,{real:n,imag:r})}});function a9(e,t,n,r){if(null==r)r=eG(e);else if("complex64"===r)throw Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(aB(e)||aP(e)){if("float32"!==r&&"int32"!==r)throw Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return aX.backend.createTensorFromGPUData(e,t||n,r)}if(!ak(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){eQ(t);let e=ew(t),r=ew(n);eb(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let e=0;e<n.length;++e){let r=n[e],a=e!==n.length-1||r!==ew(t.slice(e));eb(n[e]===t[e]||!a,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return ak(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?ay(e,r):aI(e,[],!0),aX.makeTensor(e,t,r)}function se(e,t,n){let r=a2(e,n);return a9(e,t,r,n)}var st={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},sn=class e{static join(t){return new e(t).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),0===(e=e.map(e=>ak(e)?e.buffer:e)).length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){let r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length||(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e))return new ArrayBuffer(0);let n=this.findShardForByte(e);if(-1===n)throw Error(`Could not find start shard for byte ${e}`);let r=new ArrayBuffer(t-e),a=new Uint8Array(r),s=0;for(let r=n;r<this.shards.length;r++){let n=this.shards[r],i=e+s-n.start,o=s,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,i,l-i);if(a.set(u,o),s+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return -1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;let n=function(e,t){let n=0,r=e.length;for(;n<=r;){let a=Math.floor((r-n)/2)+n,s=t(e[a]);if(0===s)return a;s<0?r=a:n=a+1}return -1}(this.shards,t);return -1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}};function sr(){e8.set("PROD",!0)}function sa(){e8.set("DEBUG",!0)}function ss(){e8.set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function si(e){e8.getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function so(){aX.disposeVariables()}function sl(){return aX}function su(){return aX.memory()}function sp(e){return aX.profile(e)}function sd(e,t){return aX.tidy(e,t)}function sh(e){aG(e).forEach(e=>e.dispose())}function sc(e){return aX.keep(e)}function sm(e){return aX.time(e)}function sf(e){return aX.setBackend(e)}function sg(){return aX.ready()}function sy(){return aX.backendName}function sb(e){aX.removeBackend(e)}function sx(e){return aX.findBackend(e)}function sv(e){return aX.findBackendFactory(e)}function sw(e,t,n=1){return aX.registerBackend(e,t,n)}function sk(){return aX.backend}function sI(e,t){e8.setPlatform(e,t)}async function sS(e,t){let n=[],r=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let s=0;s<a.length;++s){let i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise(async e=>{let t=await o.bytes(),n=new Uint8Array(t.reduce((e,t)=>e+t.length,0)+4*t.length),r=0;for(let e=0;e<t.length;e++){let a=t[e],s=new Uint8Array(new Uint32Array([a.length]).buffer);n.set(s,r),r+=4,n.set(a,r),r+=a.length}e(n)});r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:function(e){if(null===e)throw Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});let r=new Uint8Array(t),a=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),r.buffer}(await Promise.all(r)),specs:n}}function sN(e,t){let n=new sn(e),r={},a=0;for(let e of t){let t=function(e,t){let n=ew(e.shape),r;if("quantization"in e)r=st[e.quantization.dtype];else if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=4+new Uint32Array(t(e,e+4))[0];return e}else r=st[e.dtype];return n*r}(e,(e,t)=>n.slice(a+e,a+t));r[e.name]=s_(e,n.slice(a,a+t)),a+=t}return r}async function sT(e,t){let n=ew(e.shape),r;if("quantization"in e)r=st[e.quantization.dtype];else if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=4+new Uint32Array(await t(e,e+4))[0];return e}else r=st[e.dtype];return n*r}function s_(e,t){let n=e.name,r=e.dtype,a=e.shape,s=ew(a),i,o=0;if("quantization"in e){let a=e.quantization;if("uint8"===a.dtype||"uint16"===a.dtype){if(!("min"in a&&"scale"in a))throw Error(`Weight ${e.name} with quantization ${a.dtype} doesn't have corresponding metadata min and scale.`)}else if("float16"===a.dtype){if("float32"!==r)throw Error(`Weight ${e.name} is quantized with ${a.dtype} which only supports weights of type float32 not ${r}.`)}else throw Error(`Weight ${e.name} has unknown quantization dtype ${a.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let l=st[a.dtype],u="uint8"===a.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===r){if("uint8"===a.dtype||"uint16"===a.dtype){i=new Float32Array(u.length);for(let e=0;e<u.length;e++){let t=u[e];i[e]=t*a.scale+a.min}}else if("float16"===a.dtype){let e,t,n;i=(e=function(){let e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return(t&=-8388609)|(n+=0x38800000)},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=0x38000000+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=0x47800000,e[32]=0x80000000,e[63]=0xc7800000;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=0x80000000+(t-32<<23);return e}(),n=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}(),r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){let i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)})(u)}else throw Error(`Unsupported quantization type ${a.dtype} for weight type float32.`)}else if("int32"===r){if("uint8"!==a.dtype&&"uint16"!==a.dtype)throw Error(`Unsupported quantization type ${a.dtype} for weight type int32.`);i=new Int32Array(u.length);for(let e=0;e<u.length;e++){let t=u[e];i[e]=Math.round(t*a.scale+a.min)}}else throw Error(`Unsupported dtype in weight '${n}': ${r}`);o+=s*l}else if("string"===r){let n=ew(e.shape);i=[];for(let e=0;e<n;e++){let e=new Uint32Array(t.slice(o,o+4))[0];o+=4;let n=new Uint8Array(t.slice(o,o+e));i.push(n),o+=e}}else{let e=st[r];if("float32"===r)i=new Float32Array(t);else if("int32"===r)i=new Int32Array(t);else if("bool"===r)i=new Uint8Array(t);else if("complex64"===r){i=new Float32Array(t);let e=new Float32Array(i.length/2),n=new Float32Array(i.length/2);for(let t=0;t<e.length;t++)e[t]=i[2*t],n[t]=i[2*t+1];let r=se(e,a,"float32"),s=se(n,a,"float32"),o=a7(r,s);return r.dispose(),s.dispose(),o}else throw Error(`Unsupported dtype in weight '${n}': ${r}`);o+=s*e}return se(i,a,r)}async function sC(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){let{done:t,value:a}=await e.read();if(t&&null==a){let e=n-r.byteLength;throw Error(`Reader is done but ${e} bytes are still expected`)}let s=new Uint8Array(r.length+a.byteLength);s.set(r,0),s.set(new Uint8Array(a),r.length),r=s}return r.buffer}async function sE(e,t){let n={},r=e.getReader(),a=new ArrayBuffer(0);for(let e of t){let t=await sT(e,async(e,t)=>(a=await sC(r,a,t)).slice(e,t)),s=(a=await sC(r,a,t)).slice(0,t);a=a.slice(t);let i=s_(e,s);if(n[e.name]=i,"webgpu"===sy()){let e=sk();"uploadToGPU"in e&&ew(i.shape)>=e8.get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}var s$="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function sA(e){return s$?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function sF(e){return sn.join(e)}function sR(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function sD(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function sM(e,t,n){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function sO(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),sM(e,n,r)}function sL(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:sA(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:sA(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new sn(e.weightData).byteLength}}function sz(e){let t=[];for(let n of e)t.push(...n.weights);return t}var sP=class e{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==e.instance&&(e.instance=new e),e.instance}static registerSaveRouter(t){e.getInstance().saveRouters.push(t)}static registerLoadRouter(t){e.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return e.getHandlers(t,"save")}static getLoadHandlers(t,n){return e.getHandlers(t,"load",n)}static getHandlers(t,n,r){let a=[];return("load"===n?e.getInstance().loadRouters:e.getInstance().saveRouters).forEach(e=>{let n=e(t,r);null!==n&&a.push(n)}),a}},sB=e=>sP.registerSaveRouter(e),sW=e=>sP.registerLoadRouter(e),sV=e=>sP.getSaveHandlers(e),sU=(e,t)=>sP.getLoadHandlers(e,t),sG="tensorflowjs",sH="models_store",sj="model_info_store";function sq(){if(!e8.getBool("IS_BROWSER"))throw Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw Error("The current browser does not appear to support IndexedDB.");return t}function sK(e){let t=e.result;t.createObjectStore(sH,{keyPath:"modelPath"}),t.createObjectStore(sj,{keyPath:"modelPath"})}var sX=class{constructor(e){if(this.indexedDB=sq(),null==e||!e)throw Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{let r=this.indexedDB.open(sG,1);r.onupgradeneeded=()=>sK(r),r.onsuccess=()=>{let a=r.result;if(null==t){let t=a.transaction(sH,"readonly"),r=t.objectStore(sH).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{let r;t.weightData=sn.join(t.weightData);let s=sL(t),i=a.transaction(sj,"readwrite"),o=i.objectStore(sj),l;try{l=o.put({modelPath:this.modelPath,modelArtifactsInfo:s})}catch(e){return n(e)}l.onsuccess=()=>{let l=(r=a.transaction(sH,"readwrite")).objectStore(sH),u;try{u=l.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s})}catch(e){return n(e)}u.onsuccess=()=>e({modelArtifactsInfo:s}),u.onerror=e=>{let t=(o=i.objectStore(sj)).delete(this.modelPath);t.onsuccess=()=>(a.close(),n(u.error)),t.onerror=e=>(a.close(),n(u.error))}},l.onerror=e=>(a.close(),n(l.error)),i.oncomplete=()=>{null==r?a.close():r.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)})}};sX.URL_SCHEME="indexeddb://";var sY=e=>{var t;return e8.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(sX.URL_SCHEME)?(t=e.slice(sX.URL_SCHEME.length),new sX(t)):null};sP.registerSaveRouter(sY),sP.registerLoadRouter(sY);var sZ=class{constructor(){this.indexedDB=sq()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(sG,1);n.onupgradeneeded=()=>sK(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(sj,"readonly"),s=a.objectStore(sj).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(sX.URL_SCHEME)?t.slice(sX.URL_SCHEME.length):t,new Promise((t,n)=>{let r=this.indexedDB.open(sG,1);r.onupgradeneeded=()=>sK(r),r.onsuccess=()=>{let a=r.result,s=a.transaction(sj,"readwrite"),i=s.objectStore(sj),o=i.get(e),l;o.onsuccess=()=>{if(null==o.result)return a.close(),n(Error(`Cannot find model with path '${e}' in IndexedDB.`));{let r=i.delete(e),s=()=>{let r=(l=a.transaction(sH,"readwrite")).objectStore(sH).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)})}},sJ="tensorflowjs_models",sQ="info";function s0(e){return{info:[sJ,e,sQ].join("/"),topology:[sJ,e,"model_topology"].join("/"),weightSpecs:[sJ,e,"weight_specs"].join("/"),weightData:[sJ,e,"weight_data"].join("/"),modelMetadata:[sJ,e,"model_metadata"].join("/")}}function s1(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}var s2=class{constructor(e){if(!e8.getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=s0(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=sL(e),a=sn.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(s$)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(a));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw s1(this.keys),Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(s$){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};s2.URL_SCHEME="localstorage://";var s3=e=>{var t;return e8.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(s2.URL_SCHEME)?(t=e.slice(s2.URL_SCHEME.length),new s2(t)):null};sP.registerSaveRouter(s3),sP.registerLoadRouter(s3);var s4=class{constructor(){eb(e8.getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),eb("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=sJ+"/",n="/"+sQ;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[function(e){let t=e.split("/");if(t.length<3)throw Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join("/")}(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;let n=s0(e=(t=e).startsWith(s2.URL_SCHEME)?t.slice(s2.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw Error(`Cannot find model at path '${e}'`);let r=JSON.parse(this.LS.getItem(n.info));return s1(n),r}},s6=class e{constructor(){this.managers={}}static getInstance(){return null==e.instance&&(e.instance=new e),e.instance}static registerManager(t,n){eb(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),eb(t.length>0,()=>"scheme must not be an empty string.");let r=e.getInstance();eb(null==r.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),r.managers[t]=n}static getManager(t){let n=e.getInstance().managers[t];if(null==n)throw Error(`Cannot find model manager for scheme '${t}'`);return n}static getSchemes(){return Object.keys(e.getInstance().managers)}};function s5(e){if(-1===e.indexOf("://"))throw Error(`The url string provided does not contain a scheme. Supported schemes are: ${s6.getSchemes().join(",")}`);return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function s8(e,t,n=!1){eb(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=sP.getLoadHandlers(e);eb(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),eb(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let a=r[0],s=sP.getSaveHandlers(t);eb(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),eb(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let i=s[0],o=s5(e).scheme,l=s5(e).path,u=o===s5(e).scheme,p=await a.load();n&&u&&await s6.getManager(o).removeModel(l);let d=await i.save(p);return n&&!u&&await s6.getManager(o).removeModel(l),d.modelArtifactsInfo}async function s7(){let e=s6.getSchemes(),t={};for(let n of e){let e=await s6.getManager(n).listModels();for(let r in e)t[n+"://"+r]=e[r]}return t}async function s9(e){let t=s5(e);return s6.getManager(t.scheme).removeModel(t.path)}async function ie(e,t){return s8(e,t,!1)}async function it(e,t){return s8(e,t,!0)}var ir=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if("undefined"==typeof window||!e8.getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))}isTypedArray(e){return an(e)}};if(e8.get("IS_BROWSER")){e8.setPlatform("browser",new ir);try{s6.registerManager(s2.URL_SCHEME,new s4)}catch(e){}try{s6.registerManager(sX.URL_SCHEME,new sZ)}catch(e){}}var ia,is,ii,io,il,iu,ip,id,ih={importFetch:()=>W()},ic=class{constructor(){this.util=V(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=e8.global.fetch?e8.global.fetch(e,t):(null==id&&(id=ih.importFetch()),id(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}};function im(e,t="float32",n){return t=t||"float32",eQ(e),new aE(e,t,n)}e8.get("IS_NODE")&&!e8.get("IS_BROWSER")&&e8.setPlatform("node",new ic);var ig=a8({cast_:function(e,t){let n=a4(e,"x","cast");if(!eL(t))throw Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw Error("Only strings can be casted to strings");return aX.runKernel(tS,{x:n},{dtype:t})}}),iy=a8({clone_:function(e){let t={x:a4(e,"x","clone","string_or_numeric")};return aX.runKernel(ni,t)}});function ib(e,t=!1){console.log(e.toString(t))}aK(),aA={buffer:im,cast:ig,clone:iy,print:ib};var ix=a8({add_:function(e,t){let n=a4(e,"a","add"),r=a4(t,"b","add");[n,r]=aW(n,r);let a={a:n,b:r};return aX.runKernel(tr,a)}}),iv=a8({floorDiv_:function(e,t){let n=a4(e,"a","floorDiv"),r=a4(t,"b","floorDiv");[n,r]=aW(n,r);let a={a:n,b:r};return aX.runKernel(ne,a)}}),iw=a8({div_:function(e,t){let n=a4(e,"a","div"),r=a4(t,"b","div");if([n,r]=aW(n,r),"int32"===n.dtype&&"int32"===r.dtype)return iv(n,r);let a={a:n,b:r};return aX.runKernel(tZ,a,{})}}),ik=a8({mul_:function(e,t){let n=a4(e,"a","mul"),r=a4(t,"b","mul");[n,r]=aW(n,r);let a={a:n,b:r};return aX.runKernel(nB,a)}}),iI=a8({abs_:function(e){let t=a4(e,"x","abs");return"complex64"===t.dtype?aX.runKernel(tC,{x:t}):aX.runKernel(te,{x:t})}}),iS=a8({acos_:function(e){let t={x:a4(e,"x","acos")};return aX.runKernel(tt,t)}}),iN=a8({acosh_:function(e){let t={x:a4(e,"x","acosh")};return aX.runKernel(tn,t)}}),iT=a8({addN_:function(e){eb(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),eb(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((e,t)=>a4(e,`tensors${t}`,"addN")),n=t[0];return t.forEach(e=>{if(e.dtype!==n.dtype)throw Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!eS(e.shape,n.shape))throw Error("All tensors passed to tf.addN() must have the same shape")}),aX.runKernel(ta,t)}}),i_=a8({all_:function(e,t=null,n=!1){let r={x:a4(e,"x","all","bool")};return aX.runKernel(ts,r,{axis:t,keepDims:n})}}),iC=a8({any_:function(e,t=null,n=!1){let r={x:a4(e,"x","any","bool")};return aX.runKernel(ti,r,{axis:t,keepDims:n})}}),iE=a8({argMax_:function(e,t=0){let n={x:a4(e,"x","argMax")};return aX.runKernel(to,n,{axis:t})}}),i$=a8({argMin_:function(e,t=0){let n={x:a4(e,"x","argMin")};return aX.runKernel(tl,n,{axis:t})}}),iA=a8({asin_:function(e){let t={x:a4(e,"x","asin")};return aX.runKernel(tu,t)}}),iF=a8({asinh_:function(e){let t={x:a4(e,"x","asinh")};return aX.runKernel(tp,t)}}),iR=a8({atan_:function(e){let t={x:a4(e,"x","atan")};return aX.runKernel(td,t)}}),iD=a8({atan2_:function(e,t){let n=a4(e,"a","atan2"),r=a4(t,"b","atan2");[n,r]=aW(n,r);let a={a:n,b:r};return aX.runKernel(tc,a)}}),iM=a8({atanh_:function(e){let t={x:a4(e,"x","atanh")};return aX.runKernel(th,t)}});function iO(e,t,n,r,a="NHWC",s){let i=[...t,e[3]];return iP(e,i,n,s,r,null,null,iX(a))}function iL(e,t,n,r,a,s,i="channelsLast"){let[o,l]=iV(t),u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else if("channelsFirst"===i)u=[o,l,e[1],e[1]];else throw Error(`Unknown dataFormat ${i}`);return iP(e,u,n,r,a,s,!1,i)}function iz(e,t,n,r,a,s,i="NDHWC"){let[o,l,u]=iU(t),p,d;if("NDHWC"===i)d="channelsLast",p=[o,l,u,e[4],e[4]];else if("NCDHW"===i)d="channelsFirst",p=[o,l,u,e[1],e[1]];else throw Error(`Unknown dataFormat ${i}`);return iB(e,p,n,r,a,!1,d,s)}function iP(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,p,d]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,p,d]=e;else if("channelsFirst"===o)[l,d,u,p]=e;else throw Error(`Unknown dataFormat ${o}`);let[h,c,,m]=t,[f,g]=iV(n),[y,b]=iV(r),x=iG(h,y),v=iG(c,b),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,a,s,i,o,l){let u,p,d;if("number"==typeof e){var h,c;let a,i;u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let l=(h=[t,n],null==(c=e)&&(c=iW(h,s,r)),a=h[0],i=h[1],[iH((a-s+2*c)/r+1,o),iH((i-s+2*c)/r+1,o)]);p=l[0],d=l[1]}else if("same"===e){p=Math.ceil(t/r),d=Math.ceil(n/a);let e=Math.max(0,(p-1)*r+s-t),o=Math.max(0,(d-1)*a+i-n),l=Math.floor(e/2),h=Math.floor(o/2);u={top:l,bottom:e-l,left:h,right:o-h,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-s+1)/r),d=Math.ceil((n-i+1)/a);else if("object"==typeof e){let h="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],f="channelsLast"===l?e[2][1]:e[3][1];u={top:h,bottom:c,left:m,right:f,type:0===h&&0===c&&0===m&&0===f?"VALID":"EXPLICIT"},p=iH((t-s+h+c)/r+1,o),d=iH((n-i+m+f)/a+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outHeight:p,outWidth:d}}(a,u,p,f,g,x,v,s,o),S=i?m*d:m,N;return"channelsFirst"===o?N=[l,S,k,I]:"channelsLast"===o&&(N=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:p,inChannels:d,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:f,strideWidth:g,filterHeight:h,filterWidth:c,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function iB(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,p,d,h]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,p,d,h]=e;else if("channelsFirst"===i)[l,h,u,p,d]=e;else throw Error(`Unknown dataFormat ${i}`);let[c,m,f,,g]=t,[y,b,x]=iU(n),[v,w,k]=iU(r),I=iG(c,v),S=iG(m,w),N=iG(f,k),{padInfo:T,outDepth:_,outHeight:C,outWidth:E}=function(e,t,n,r,a,s,i,o,l,u,p){let d,h,c,m;if("valid"===e&&(e=0),"number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let f=function(e,t,n,r,a,s){null==a&&(a=iW(e,t[0],r[0]));let i=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*a>=t[n]&&(i[n]=iH((e[n]-t[n]+2*a)/r[n]+1,s));return i}([t,n,r,1],[o,l,u],0,[a,s,i],e,p);h=f[0],c=f[1],m=f[2]}else if("same"===e){h=Math.ceil(t/a),c=Math.ceil(n/s),m=Math.ceil(r/i);let e=(h-1)*a+o-t,p=(c-1)*s+l-n,f=(m-1)*i+u-r,g=Math.floor(e/2),y=Math.floor(p/2),b=Math.floor(f/2);d={top:y,bottom:p-y,left:b,right:f-b,front:g,back:e-g,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:h,outHeight:c,outWidth:m}}(a,u,p,d,y,b,x,I,S,N,o),$=s?g*h:g,A;return"channelsFirst"===i?A=[l,$,_,C,E]:"channelsLast"===i&&(A=[l,_,C,E,$]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:p,inWidth:d,inChannels:h,outDepth:_,outHeight:C,outWidth:E,outChannels:$,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:c,filterHeight:m,filterWidth:f,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function iW(e,t,n,r=1){let a=iG(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function iV(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function iU(e){return"number"==typeof e?[e,e,e]:e}function iG(e,t){return t<=1?e:e+(e-1)*(t-1)}function iH(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw Error(`Unknown roundingMode ${t}`)}}function ij(e){let[t,n,r]=iV(e);return 1===t&&1===n&&1===r}function iq(e,t){return ij(e)||ij(t)}function iK(e){return iV(e).every(e=>e>0)}function iX(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw Error(`Unknown dataFormat ${e}`)}function iY(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)eb(eN(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if("object"==typeof t)t.forEach(t=>{t.forEach(t=>{eb(eN(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}var iZ=a8({reshape_:function(e,t){let n={x:a4(e,"x","reshape","string_or_numeric")};return aX.runKernel(n8,n,{shape:t})}}),iJ=a8({avgPool_:function(e,t,n,r,a){let s=a4(e,"x","avgPool","float32");eb(iq(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let i=s,o=!1;3===s.rank&&(o=!0,i=iZ(s,[1,s.shape[0],s.shape[1],s.shape[2]])),eb(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),iY("avgPool",r,a);let l={x:i},u=aX.runKernel(tm,l,{filterSize:t,strides:n,pad:r,dimRoundingMode:a});return u=ig(u,s.dtype),o?iZ(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),iQ=a8({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){let i=a4(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=iZ(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),eb(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),eb("NDHWC"===s,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),eb("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),iY("avgPool3d",r,a);let u={x:o},p=aX.runKernel(tg,u,{filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s});return p=ig(p,o.dtype),l?iZ(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),i0=a8({concat_:function(e,t=0){eb(e.length>=1,()=>"Pass at least one tensor to concat");let n=a6(e,"tensors","concat","string_or_numeric");return("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${e.dtype}. `)}),1===n.length)?iy(n[0]):aX.runKernel(tE,n,{axis:t})}}),i1=a8({matMul_:function(e,t,n=!1,r=!1){let a=a4(e,"a","matMul"),s=a4(t,"b","matMul");[a,s]=aW(a,s);let i={a:a,b:s};return aX.runKernel(tb,i,{transposeA:n,transposeB:r})}}),i2=a8({sigmoid_:function(e){let t={x:a4(e,"x","sigmoid","float32")};return aX.runKernel(rf,t)}}),i3=a8({slice_:function(e,t,n){let r=a4(e,"x","slice","string_or_numeric");if(0===r.rank)throw Error("Slicing scalar is not possible");return aX.runKernel(rd,{x:r},{begin:t,size:n})}}),i4=a8({tanh_:function(e){let t={x:a4(e,"x","tanh","float32")};return aX.runKernel(rO,t)}}),i6=a8({basicLSTMCell_:function(e,t,n,r,a,s){let i=a4(e,"forgetBias","basicLSTMCell"),o=a4(t,"lstmKernel","basicLSTMCell"),l=a4(n,"lstmBias","basicLSTMCell"),u=a4(r,"data","basicLSTMCell"),p=a4(a,"c","basicLSTMCell"),d=ix(i1(i0([u,a4(s,"h","basicLSTMCell")],1),o),l),h=d.shape[0],c=d.shape[1]/4,m=[h,c],f=i3(d,[0,0],m),g=i3(d,[0,c],m),y=i3(d,[0,2*c],m),b=i3(d,[0,3*c],m),x=ix(ik(i2(f),i4(g)),ik(p,i2(ix(i,y)))),v=ik(i4(x),i2(b));return[x,v]}}),i5=a8({batchToSpaceND_:function(e,t,n){let r=a4(e,"x","batchToSpaceND"),a=t.reduce((e,t)=>e*t);return eb(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),eb(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),eb(r.shape[0]%a==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`),aX.runKernel(tx,{x:r},{blockShape:t,crops:n})}}),i8=a8({batchNorm_:function(e,t,n,r,a,s){let i;null==s&&(s=.001);let o=a4(e,"x","batchNorm"),l=a4(t,"mean","batchNorm"),u=a4(n,"variance","batchNorm"),p;null!=a&&(p=a4(a,"scale","batchNorm")),null!=r&&(i=a4(r,"offset","batchNorm")),eb(l.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),eb(null==i||l.rank===i.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),eb(null==p||l.rank===p.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let d={x:0===o.rank||1===o.rank?iZ(o,[1,1,1,o.size]):2===o.rank?iZ(o,[1,1,o.shape[0],o.shape[1]]):3===o.rank?iZ(o,[1,o.shape[0],o.shape[1],o.shape[2]]):o,scale:p,offset:i,mean:l,variance:u},h={varianceEpsilon:s};return iZ(aX.runKernel(nt,d,h),o.shape)}}),i7=a8({batchNorm2d_:function(e,t,n,r,a,s){let i,o=a4(e,"x","batchNorm"),l=a4(t,"mean","batchNorm"),u=a4(n,"variance","batchNorm"),p;return null!=a&&(p=a4(a,"scale","batchNorm")),null!=r&&(i=a4(r,"offset","batchNorm")),eb(2===o.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),eb(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`),eb(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=p&&eb(2===p.rank||1===p.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${p.rank}.`),null!=i&&eb(2===i.rank||1===i.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${i.rank}.`),i8(o,l,u,i,p,s)}}),i9=a8({batchNorm3d_:function(e,t,n,r,a,s){let i,o=a4(e,"x","batchNorm"),l=a4(t,"mean","batchNorm"),u=a4(n,"variance","batchNorm"),p;return null!=a&&(p=a4(a,"scale","batchNorm")),null!=r&&(i=a4(r,"offset","batchNorm")),eb(3===o.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),eb(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`),eb(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=p&&eb(3===p.rank||1===p.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${p.rank}.`),null!=i&&eb(3===i.rank||1===i.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${i.rank}.`),i8(o,l,u,i,p,s)}}),oe=a8({batchNorm4d_:function(e,t,n,r,a,s){let i,o=a4(e,"x","batchNorm"),l=a4(t,"mean","batchNorm"),u=a4(n,"variance","batchNorm"),p;return null!=a&&(p=a4(a,"scale","batchNorm")),null!=r&&(i=a4(r,"offset","batchNorm")),eb(4===o.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),eb(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`),eb(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=p&&eb(4===p.rank||1===p.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${p.rank}.`),null!=i&&eb(4===i.rank||1===i.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${i.rank}.`),i8(o,l,u,i,p,s)}}),ot=a8({bincount_:function(e,t,n){let r=a4(e,"x","bincount"),a=a4(t,"weights","bincount");return eb("int32"===r.dtype,()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),eb(n>=0,()=>`size must be non-negative, but got ${n}.`),eb(a.size===r.size||0===a.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`),aX.runKernel(tv,{x:r,weights:a},{size:n})}}),on=a8({bitwiseAnd_:function(e,t){let n=a4(e,"x","bitwiseAnd"),r=a4(t,"y","bitwiseAnd");if(!eS(n.shape,r.shape))throw Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);return aX.runKernel(tw,{a:n,b:r})}}),or=a8({broadcastArgs_:function(e,t){let n=a4(e,"s0","broadcastArgs","int32"),r=a4(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);return aX.runKernel(tI,{s0:n,s1:r})}}),oa=a8({broadcastTo_:function(e,t){let n=a4(e,"broadcastTo","x"),r=n.shape;if(eQ(t),t.length<n.rank)throw Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=iZ(n,e)}let a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return iy(n);let i={x:n};return aX.runKernel(rL,i,{reps:s})}}),os=a8({ceil_:function(e){let t={x:a4(e,"x","ceil","float32")};return aX.runKernel(tN,t)}});function oi(e,t,n){eQ(e),n=n||eG(t);let r={shape:e,value:t,dtype:n};return aX.runKernel(t8,{},r)}var oo=a8({clipByValue_:function(e,t,n){let r=a4(e,"x","clipByValue");return(eb(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)?oi(r.shape,t,r.dtype):aX.runKernel(tT,{x:r},{clipValueMin:t,clipValueMax:n})}}),ol=a8({concat1d_:function(e){return i0(e,0)}}),ou=a8({concat2d_:function(e,t){return i0(e,t)}}),op=a8({concat3d_:function(e,t){return i0(e,t)}}),od=a8({concat4d_:function(e,t){return i0(e,t)}}),oh=a8({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=a4(e,"x","conv2d","float32"),l=a4(t,"filter","conv2d","float32"),u=o,p=!1;3===o.rank&&(p=!0,u=iZ(o,[1,o.shape[0],o.shape[1],o.shape[2]])),eb(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),eb(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),iY("conv2d",r,i);let d="NHWC"===a?u.shape[3]:u.shape[1];eb(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),eb(iq(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),eb(iK(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),eb(iK(n),()=>"Error in conv2D: Strides should be larger than 0.");let h={x:u,filter:l},c=aX.runKernel(t$,h,{strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i});return p?iZ(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),oc=a8({conv1d_:function(e,t,n,r,a="NWC",s=1,i){let o=a4(e,"x","conv1d"),l=a4(t,"filter","conv1d"),u=o,p=!1;2===o.rank&&(p=!0,u=iZ(o,[1,o.shape[0],o.shape[1]])),eb(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),eb(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),iY("conv1d",r,i),eb(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),eb(iq(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),eb(iK(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),eb(iK(n),()=>"Error in conv1D: Stride should be larger than 0."),eb("NWC"===a,()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);let d=iZ(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=oh(iZ(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d,[1,n],r,"NHWC",[1,s],i);return p?iZ(h,[h.shape[2],h.shape[3]]):iZ(h,[h.shape[0],h.shape[2],h.shape[3]])}}),om=a8({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){eb(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=iZ(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),eb(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),eb(4===l.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),eb(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let p="NHWC"===s?o[3]:o[1],d="NHWC"===s?l.shape[3]:l.shape[1];eb(p===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[2]}.`),eb(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),iY("conv2dDerInput",a,i);let h={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},m=aX.runKernel(tF,h,c);return u?iZ(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),of=a8({conv2dTranspose_:function(e,t,n,r,a,s){return om(n,a4(e,"x","conv2dTranspose"),a4(t,"filter","conv2dTranspose"),r,a,"NHWC",s)}}),og=a8({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=a4(e,"x","conv3d"),o=a4(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=iZ(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),eb(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),eb(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),eb(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),eb(iq(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),eb("NDHWC"===a,()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),eb(iK(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),eb(iK(n),()=>"Error in conv3D: Strides should be larger than 0.");let p={x:l,filter:o},d=aX.runKernel(tR,p,{strides:n,pad:r,dataFormat:a,dilations:s});return u?iZ(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),oy=a8({conv3DBackpropInput_:function(e,t,n,r,a){eb(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=iZ(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];eb(5===s.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),eb(5===i.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),eb(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),eb(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),eb(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);let p={dy:i,filter:n},d={pad:a,strides:r,inputShape:s},h=aX.runKernel(tM,p,d);return o?iZ(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),ob=a8({conv3dTranspose_:function(e,t,n,r,a){return oy(n,a4(e,"x","conv3dTranspose"),a4(t,"filter","conv3dTranspose"),r,a)}}),ox=a8({cos_:function(e){let t={x:a4(e,"x","cos","float32")};return aX.runKernel(tO,t)}}),ov=a8({cosh_:function(e){let t={x:a4(e,"x","cosh","float32")};return aX.runKernel(tL,t)}}),ow=a8({cumprod_:function(e,t=0,n=!1,r=!1){let a={x:a4(e,"x","cumprod")};return aX.runKernel(tz,a,{axis:t,exclusive:n,reverse:r})}}),ok=a8({cumsum_:function(e,t=0,n=!1,r=!1){let a={x:a4(e,"x","cumsum")};return aX.runKernel(tP,a,{axis:t,exclusive:n,reverse:r})}}),oI=a8({denseBincount_:function(e,t,n,r=!1){let a=a4(e,"x","denseBincount"),s=a4(t,"weights","denseBincount");return eb("int32"===a.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),eb(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),eb(n>=0,()=>`size must be non-negative, but got ${n}.`),eb(s.size===a.size||0===s.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`),aX.runKernel(tW,{x:a,weights:s},{size:n,binaryOutput:r})}}),oS=a8({depthToSpace_:function(e,t,n="NHWC"){let r=a4(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];return eb(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),eb(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t}  for depthToSpace with input shape
    ${r.shape}`),eb(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${r.shape}`),eb(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`),aX.runKernel(tV,{x:r},{blockSize:t,dataFormat:n})}}),oN=a8({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=a4(e,"x","depthwiseConv2d","float32"),l=a4(t,"filter","depthwiseConv2d","float32"),u=o,p=!1;3===o.rank&&(p=!0,u=iZ(o,[1,o.shape[0],o.shape[1],o.shape[2]])),eb(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),eb(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let d="NHWC"===a?u.shape[3]:u.shape[1];eb(d===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${l.shape[2]}.`),iY("depthwiseConv2d",r,i);let h={x:u,filter:l},c=aX.runKernel(tU,h,{strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i});return p?iZ(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),oT=a8({diag_:function(e){let t={x:a4(e,"x","diag")};return aX.runKernel(tj,t)}}),o_=a8({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){let i=a4(e,"x","dilation2d"),o=a4(t,"filter","dilation2d");eb(3===i.rank||4===i.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),eb(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),eb("NHWC"===s,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,u=!1;3===i.rank&&(l=iZ(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),eb(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);let p={x:l,filter:o},d=aX.runKernel(tq,p,{strides:n,pad:r,dilations:a});return u?iZ(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),oC={};function oE(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function o$(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function oA(e,t){let n=Math.max(e.length,t.length),r=Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];null==s&&(s=1);let i=t[t.length-a-1];if(null==i&&(i=1),1===s)r[n-a-1]=i;else if(1===i)r[n-a-1]=s;else if(s!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);else r[n-a-1]=s}return r}L(oC,{assertAndGetBroadcastShape:()=>oA,getBroadcastDims:()=>oE,getReductionAxes:()=>o$});var oF=a8({equal_:function(e,t){let n=a4(e,"a","equal","string_or_numeric"),r=a4(t,"b","equal","string_or_numeric");[n,r]=aW(n,r),oA(n.shape,r.shape);let a={a:n,b:r};return aX.runKernel(t2,a)}}),oR=a8({where_:function(e,t,n){let r=a4(t,"a","where"),a=a4(n,"b","where"),s=a4(e,"condition","where","bool"),i=oA(oA(s.shape,r.shape),a.shape),o=oa(s,i),l=oa(r,i),u=oa(a,i);return aX.runKernel(ru,{condition:o,t:l,e:u})}}),oD=a8({zerosLike_:function(e){let t={x:a4(e,"x","zerosLike")};return aX.runKernel(rH,t)}}),oM=a8({divNoNan_:function(e,t){let n=a4(e,"a","div"),r=a4(t,"b","div");[n,r]=aW(n,r);let a=iw(n,r),s=oD(a);return oR(oF(r,s),s,a)}}),oO=a8({dot_:function(e,t){let n=a4(e,"t1","dot"),r=a4(t,"t2","dot");eb((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(eb(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),1===n.rank&&1===r.rank){let e=i1(iZ(n,[1,-1]),iZ(r,[-1,1]));return iZ(e,[])}if(1===n.rank&&2===r.rank){let e=i1(iZ(n,[1,-1]),iZ(r,[r.shape[0],r.shape[1]]));return iZ(e,[e.size])}if(2!==n.rank||1!==r.rank)return i1(n,iZ(r,[r.shape[0],r.shape[1]]));{let e=i1(n,iZ(r,[-1,1]));return iZ(e,[e.size])}}}),oL=a8({einsum_:function(e,...t){let n=t.map((e,t)=>a4(e,`tensors${t}`,"einsum"));return aX.runKernel(tJ,n,{equation:e})}}),oz=a8({elu_:function(e){let t={x:a4(e,"x","elu","float32")};return aX.runKernel(tQ,t)}}),oP=a8({ensureShape_:function(e,t){let n=a4(e,"x","ensureShape","string_or_numeric");if(!eI(n.shape,t))throw Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}}),oB=a8({erf_:function(e){let t=a4(e,"x","erf");eb("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=ig(t,"float32"));let n={x:t};return aX.runKernel(t1,n)}});function oW(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function oV(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function oU(e,t){let n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map(t=>e[t])]}function oG(e,t){return oV(e,t.map(e=>1),t)}function oH(e,t,n){eb(oW(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function oj(e,t){if(oW(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function oq(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function oK(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var oX=a8({max_:function(e,t=null,n=!1){let r={x:a4(e,"x","max")};return aX.runKernel(n_,r,{reductionIndices:t,keepDims:n})}}),oY=a8({min_:function(e,t=null,n=!1){let r={x:a4(e,"x","min")};return aX.runKernel(nM,r,{axis:t,keepDims:n})}}),oZ=a8({pow_:function(e,t){let n=a4(e,"base","pow"),r=a4(t,"exp","pow");[n,r]=aW(n,r);let a={a:n,b:r};return aX.runKernel(nZ,a)}});function oJ(e,t){if((ak(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ak(e)&&!(e instanceof Uint8Array))throw Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return a9(e,[],[],t)}var oQ=a8({sqrt_:function(e){let t={x:a4(e,"x","sqrt","float32")};return aX.runKernel(ry,t)}}),o0=a8({square_:function(e){let t=a4(e,"x","square");return aX.runKernel("Square",{x:t},{})}}),o1=a8({sum_:function(e,t=null,n=!1){let r=a4(e,"x","sum");"bool"===r.dtype&&(r=ig(r,"int32"));let a={x:r};return aX.runKernel(rb,a,{axis:t,keepDims:n})}}),o2=a8({norm_:function(e,t="euclidean",n=null,r=!1){let a=function e(t,n,r=null){if(0===t.rank)return iI(t);if(1!==t.rank&&null===r)return e(iZ(t,[-1]),n,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return o1(iI(t),r);if(n===1/0)return oX(iI(t),r);if(n===-1/0)return oY(iI(t),r);if("euclidean"===n||2===n)return oQ(o1(oZ(iI(t),oJ(2,"int32")),r));throw Error(`Error in norm: invalid ord value: ${n}`)}if(Array.isArray(r)&&2===r.length){if(1===n)return oX(o1(iI(t),r[0]),r[1]-1);if(n===1/0)return oX(o1(iI(t),r[1]),r[0]);if(n===-1/0)return oY(o1(iI(t),r[1]),r[0]);if("fro"===n||"euclidean"===n)return oQ(o1(o0(t),r));throw Error(`Error in norm: invalid ord value: ${n}`)}throw Error(`Error in norm: invalid axis: ${r}`)}(e=a4(e,"x","norm"),t,n),s=a.shape;if(r){let t=eF(n,e.shape);s=oG(a.shape,t)}return iZ(a,s)}}),o3=a8({euclideanNorm_:function(e,t=null,n=!1){return o2(e,"euclidean",t,n)}}),o4=a8({exp_:function(e){let t={x:a4(e,"x","exp")};return aX.runKernel(t3,t)}}),o6=a8({expandDims_:function(e,t=0){let n=a4(e,"x","expandDims","string_or_numeric");return eb(t<=n.rank,()=>"Axis must be <= rank of the tensor"),aX.runKernel(t4,{input:n},{dim:t})}}),o5=a8({expm1_:function(e){let t={x:a4(e,"x","expm1")};return aX.runKernel(t6,t)}}),o8=a8({tile_:function(e,t){let n=a4(e,"x","tile","string_or_numeric");return eb(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`),aX.runKernel(rL,{x:n},{reps:t})}}),o7=a8({eye_:function(e,t,n,r="float32"){null==t&&(t=e);let a=im([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);let i=iZ(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return o8(o6(i,0),[n[0],1,1]);if(2===n.length)return o8(o6(o6(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return o8(o6(o6(o6(i,0),0),0),[n[0],n[1],n[2],1,1]);throw Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),o9=a8({floor_:function(e){let t={x:a4(e,"x","floor","float32")};return aX.runKernel(t9,t)}}),le=a8({gather_:function(e,t,n=0,r=0){let a=a4(e,"x","gather"),s=a4(t,"indices","gather","int32");return aX.runKernel(nn,{x:a,indices:s},{axis:n,batchDims:r})}}),lt=a8({greater_:function(e,t){let n=a4(e,"a","greater","string_or_numeric"),r=a4(t,"b","greater","string_or_numeric");[n,r]=aW(n,r),oA(n.shape,r.shape);let a={a:n,b:r};return aX.runKernel(na,a)}}),ln=a8({greaterEqual_:function(e,t){let n=a4(e,"a","greaterEqual","string_or_numeric"),r=a4(t,"b","greaterEqual","string_or_numeric");[n,r]=aW(n,r),oA(n.shape,r.shape);let a={a:n,b:r};return aX.runKernel(ns,a)}}),lr=a8({imag_:function(e){let t={input:a4(e,"input","imag")};return aX.runKernel(nl,t)}}),la=a8({isFinite_:function(e){let t={x:a4(e,"x","isFinite")};return aX.runKernel(nu,t)}}),ls=a8({isInf_:function(e){let t={x:a4(e,"x","isInf")};return aX.runKernel(np,t)}}),li=a8({isNaN_:function(e){let t={x:a4(e,"x","isNaN")};return aX.runKernel(nd,t)}}),lo=a8({leakyRelu_:function(e,t=.2){let n={x:a4(e,"x","leakyRelu")};return aX.runKernel(nh,n,{alpha:t})}}),ll=a8({less_:function(e,t){let n=a4(e,"a","less","string_or_numeric"),r=a4(t,"b","less","string_or_numeric");[n,r]=aW(n,r),oA(n.shape,r.shape);let a={a:n,b:r};return aX.runKernel(nc,a)}}),lu=a8({lessEqual_:function(e,t){let n=a4(e,"a","lessEqual","string_or_numeric"),r=a4(t,"b","lessEqual","string_or_numeric");[n,r]=aW(n,r),oA(n.shape,r.shape);let a={a:n,b:r};return aX.runKernel(nm,a)}});function lp(e,t,n){if(n<=0)throw Error("The number of values should be positive.");return aX.runKernel(nf,{},{start:e,stop:t,num:n})}var ld=a8({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){let s=a4(e,"x","localResponseNormalization");eb(4===s.rank||3===s.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),eb(eN(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;3===s.rank&&(o=!0,i=iZ(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u=aX.runKernel(nS,l,{depthRadius:t,bias:n,alpha:r,beta:a});return o?iZ(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),lh=a8({log_:function(e){let t={x:a4(e,"x","log","float32")};return aX.runKernel(ng,t)}}),lc=a8({log1p_:function(e){let t={x:a4(e,"x","log1p")};return aX.runKernel(ny,t)}});function lm(e){return eb(eH(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let r=a4(t,"x","tf.grad","string_or_numeric"),a=null!=n?a4(n,"dy","tf.grad"):null;return aX.tidy(()=>{let{value:t,grads:n}=aX.gradients(()=>e(r),[r],a);return null!=a&&ex(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),lv(n),n[0]})}}function lf(e){return eb(eH(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{eb(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=a6(t,"args","tf.grads","string_or_numeric"),a=null!=n?a4(n,"dy","tf.grads"):null;return aX.tidy(()=>{let{value:t,grads:n}=aX.gradients(()=>e(...r),r,a);return null!=a&&ex(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),lv(n),n})}}function lg(e){return eb(eH(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{eb(t instanceof aF,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),eb(null==n||n instanceof aF,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:a}=aX.gradients(()=>e(t),[t],n);return lv(r),{grad:r[0],value:a}}}function ly(e){return eb(eH(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{eb(Array.isArray(t)&&t.every(e=>e instanceof aF),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),eb(null==n||n instanceof aF,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=aX.gradients(()=>e(...t),t,n);return null!=n&&ex(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),lv(r.grads),r}}function lb(e,t){eb(eH(e),()=>"The f passed in variableGrads(f) must be a function"),eb(null==t||Array.isArray(t)&&t.every(e=>e instanceof aD),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=null!=t;if(!n)for(let e in t=[],aX.registeredVariables)t.push(aX.registeredVariables[e]);let r=n?t.filter(e=>!e.trainable):null,a=t.length;eb((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);let{value:s,grads:i}=aX.gradients(e,t,null,!0);eb(i.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),eb(0===s.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`);let o={};return t.forEach((e,t)=>{null!=i[t]&&(o[e.name]=i[t])}),null!=r&&r.forEach(e=>o[e.name]=null),{value:s,grads:o}}function lx(e){return aX.customGrad(e)}function lv(e){if(e.filter(e=>null==e).length>0)throw Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}var lw=a8({neg_:function(e){let t={x:a4(e,"x","neg")};return aX.runKernel(nW,t)}}),lk=a8({softplus_:function(e){let t={x:a4(e,"x","softplus")};return aX.runKernel(rg,t)}}),lI=a8({logSigmoid_:function(e){let t=a4(e,"x","logSigmoid");return lx(e=>({value:lw(lk(lw(e))),gradFunc:t=>ik(t,i2(lw(e)))}))(t)}}),lS=a8({sub_:function(e,t){let n=a4(e,"a","sub"),r=a4(t,"b","sub");[n,r]=aW(n,r);let a={a:n,b:r};return aX.runKernel(rD,a)}}),lN=a8({logSoftmax_:function(e,t=-1){let n=a4(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return lx((e,n)=>{let r=oX(e,t,!0),a=lS(e,r),s=lS(ig(a,"float32"),lh(o1(o4(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[r]=n,a=o4(r);return lS(e,ik(o1(e,t,!0),a))}}})(n)}}),lT=a8({logSumExp_:function(e,t=null,n=!1){let r=a4(e,"x","logSumExp"),a=eF(t,r.shape),s=oX(r,a,!0),i=lh(o1(o4(lS(r,s)),a)),o=ix(iZ(s,i.shape),i);if(n){let e=oG(o.shape,a);return iZ(o,e)}return o}}),l_=a8({logicalAnd_:function(e,t){let n=a4(e,"a","logicalAnd","bool"),r=a4(t,"b","logicalAnd","bool");return oA(n.shape,r.shape),aX.runKernel(nb,{a:n,b:r})}}),lC=a8({logicalNot_:function(e){let t={x:a4(e,"x","logicalNot","bool")};return aX.runKernel(nx,t)}}),lE=a8({logicalOr_:function(e,t){let n=a4(e,"a","logicalOr","bool"),r=a4(t,"b","logicalOr","bool");return oA(n.shape,r.shape),aX.runKernel(nv,{a:n,b:r})}}),l$=a8({logicalXor_:function(e,t){let n=a4(e,"a","logicalXor","bool"),r=a4(t,"b","logicalXor","bool");return oA(n.shape,r.shape),l_(lE(e,t),lC(l_(e,t)))}}),lA=a8({searchSorted_:function(e,t,n="left"){let r=a4(e,"sortedSequence","searchSorted"),a=a4(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=iZ(r,[-1,s]),l=iZ(a,[-1,i]);if(o.rank<2)throw Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ew(l.shape)>=0x80000000)throw Error("values tensor size must less than 2147483648");if(o.shape[1]>=0x80000000)throw Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);return aX.runKernel(rl,{sortedSequence:o,values:l},{side:n})}});function lF(e,t){return lA(e,t,"left")}var lR=a8({maxPool_:function(e,t,n,r,a){let s=a4(e,"x","maxPool"),i=s,o=!1;3===s.rank&&(o=!0,i=iZ(s,[1,s.shape[0],s.shape[1],s.shape[2]])),eb(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),eb(iq(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),iY("maxPool",r,a);let l={x:i},u=aX.runKernel(nE,l,{filterSize:t,strides:n,pad:r,dimRoundingMode:a});return o?iZ(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),lD=a8({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=a4(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=iZ(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),eb(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),eb("NDHWC"===s,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),iY("maxPool3d",r,a);let u={x:o},p=aX.runKernel(nA,u,{filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s});return l?iZ(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),lM=a8({maxPoolWithArgmax_:function(e,t,n,r,a=!1){let s={x:a4(e,"x","maxPoolWithArgmax")},i=aX.runKernel(nR,s,{filterSize:t,strides:n,pad:r,includeBatchInIndex:a});return{result:i[0],indexes:i[1]}}}),lO=a8({maximum_:function(e,t){let n=a4(e,"a","maximum"),r=a4(t,"b","maximum");[n,r]=aW(n,r),"bool"===n.dtype&&(n=ig(n,"int32"),r=ig(r,"int32")),oA(n.shape,r.shape);let a={a:n,b:r};return aX.runKernel(nC,a)}}),lL=a8({mean_:function(e,t=null,n=!1){let r={x:a4(e,"x","mean")};return aX.runKernel(nD,r,{axis:t,keepDims:n})}});function lz(e,t="float32"){if(eQ(e),"complex64"===t)return a7(lz(e,"float32"),lz(e,"float32"));let n=eZ(ew(e),t);return aX.makeTensor(n,e,t)}function lP(e,t="float32"){if(eQ(e),"complex64"===t)return a7(lP(e,"float32"),lz(e,"float32"));let n=eY(ew(e),t);return aX.makeTensor(n,e,t)}function lB(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=a4(e,"x","meshgrid",e instanceof aF?e.dtype:"float32");if(void 0===t)return[r];let a=a4(t,"y","meshgrid",t instanceof aF?t.dtype:"float32"),s=ew(r.shape),i=ew(a.shape);return"xy"===n?(r=iZ(r,[1,-1]),a=iZ(a,[-1,1]),[i1(lP([i,1],r.dtype),r),i1(a,lP([1,s],a.dtype))]):(r=iZ(r,[-1,1]),a=iZ(a,[1,-1]),[i1(r,lP([1,i],r.dtype)),i1(lP([s,1],a.dtype),a)])}var lW=a8({minimum_:function(e,t){let n=a4(e,"a","minimum"),r=a4(t,"b","minimum");[n,r]=aW(n,r),"bool"===n.dtype&&(n=ig(n,"int32"),r=ig(r,"int32")),oA(n.shape,r.shape);let a={a:n,b:r};return aX.runKernel(nO,a)}}),lV=a8({mirrorPad_:function(e,t,n){eb("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let r=a4(e,"x","mirrorPad");if(0===r.rank)throw Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");eb(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)eb(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),eb(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`);return aX.runKernel(nL,{x:r},{paddings:t,mode:n})}}),lU=a8({mod_:function(e,t){let n=a4(e,"a","mod"),r=a4(t,"b","mod");[n,r]=aW(n,r);let a={a:n,b:r};return aX.runKernel(nz,a)}}),lG=a8({moments_:function(e,t=null,n=!1){let r=eF(t,(e=a4(e,"x","moments")).shape),a=lL(e,r,n),s=a.shape;n||(s=oG(a.shape,r));let i=lL(o0(lS(ig(e,"float32"),iZ(a,s))),r,n);return{mean:a,variance:i}}}),lH=a8({multiRNNCell_:function(e,t,n,r){let a=a4(t,"data","multiRNNCell"),s=a6(n,"c","multiRNNCell"),i=a6(r,"h","multiRNNCell"),o=a,l=[];for(let t=0;t<e.length;t++){let n=e[t](o,s[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}let u=[],p=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),p.push(l[e+1]);return[u,p]}}),lj=a8({multinomial_:function(e,t,n,r=!1){let a=a4(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:1===i?iZ(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=aX.runKernel(nP,o,l);return 1===i?iZ(u,[u.size]):u}}),lq=a8({notEqual_:function(e,t){let n=a4(e,"a","notEqual","string_or_numeric"),r=a4(t,"b","notEqual","string_or_numeric");[n,r]=aW(n,r),oA(n.shape,r.shape);let a={a:n,b:r};return aX.runKernel(nV,a)}}),lK=a8({oneHot_:function(e,t,n=1,r=0,a="int32"){if(t<2)throw Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:a4(e,"indices","oneHot","int32")};return aX.runKernel(nq,s,{dtype:a,depth:t,onValue:n,offValue:r})}}),lX=a8({onesLike_:function(e){let t={x:a4(e,"x","onesLike")};return aX.runKernel(nj,t)}}),lY=a8({outerProduct_:function(e,t){let n=a4(e,"v1","outerProduct"),r=a4(t,"v2","outerProduct");return eb(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`),i1(iZ(n,[-1,1]),iZ(r,[1,-1]))}}),lZ=a8({pad_:function(e,t,n=0){let r=a4(e,"x","pad");if(0===r.rank)throw Error("pad(scalar) is not defined. Pass non-scalar to pad");return aX.runKernel(nX,{x:r},{paddings:t,constantValue:n})}}),lJ=a8({pad1d_:function(e,t,n=0){return eb(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),lZ(e,[t],n)}}),lQ=a8({pad2d_:function(e,t,n=0){return eb(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),lZ(e,t,n)}}),l0=a8({pad3d_:function(e,t,n=0){return eb(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),lZ(e,t,n)}}),l1=a8({pad4d_:function(e,t,n=0){return eb(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),lZ(e,t,n)}}),l2=a8({spaceToBatchND_:function(e,t,n){let r=a4(e,"x","spaceToBatchND");return eb(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),eb(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),eb(r.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`),aX.runKernel(rx,{x:r},{blockShape:t,paddings:n})}}),l3=a8({pool_:function(e,t,n,r,a,s,i){var o;let l,u,p,d,h,c,m,f;null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let g=a4(e,"x","maxPool"),y=g,b=!1;3===g.rank&&(b=!0,y=iZ(g,[1,g.shape[0],g.shape[1],g.shape[2]])),eb(iq(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);let x=iL(y.shape,t,s,a,r),v=[x.dilationHeight,x.dilationWidth],w;w="same"===r?(u=(l=[x.filterHeight,x.filterWidth].map((e,t)=>e+(e-1)*(v[t]-1)).map(e=>e-1)).map(e=>Math.floor(e/2)),p=l.map((e,t)=>e-u[t]),l.map((e,t)=>[u[t],p[t]])):[[0,0],[0,0]];let k=1===v[0]&&1===v[1],[I,S]=(o=[x.inHeight,x.inWidth],d=w.map(e=>e[0]),c=o.concat(d,h=w.map(e=>e[1])),m=v.map((e,t)=>(e-c[t]%e)%e),f=h.map((e,t)=>e+m[t]),[v.map((e,t)=>[d[t],f[t]]),v.map((e,t)=>[0,m[t]])]),N=k?r:"valid",T=k?y:l2(y,v,I),_=("avg"===n?()=>iJ(T,t,s,N,i):()=>lR(T,t,s,N,i))(),C=k?_:i5(_,v,S);return b?iZ(C,[C.shape[1],C.shape[2],C.shape[3]]):C}}),l4=a8({prelu_:function(e,t){let n=a4(e,"x","prelu"),r=a4(t,"alpha","prelu");return aX.runKernel(nJ,{x:n,alpha:r})}}),l6=a8({prod_:function(e,t=null,n=!1){let r=a4(e,"x","prod");"bool"===r.dtype&&(r=ig(r,"int32"));let a={x:r};return aX.runKernel(nQ,a,{axis:t,keepDims:n})}}),l5=a8({raggedGather_:function(e,t,n,r){let a=e.map((e,t)=>a4(e,`tensors${t}`,"raggedGather","int32")),s=a4(t,"paramsDenseValues","raggedGather"),i=a4(n,"indices","raggedGather","int32"),o=aX.runKernel(n0,{paramsNestedSplits:a,paramsDenseValues:s,indices:i},{outputRaggedRank:r});return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}}),l8=a8({raggedRange_:function(e,t,n){let r=a4(e,"starts","raggedRange"),a=a4(t,"limits","raggedRange",r.dtype),s=a4(n,"deltas","raggedRange",r.dtype),i=aX.runKernel(n1,{starts:r,limits:a,deltas:s});return{rtNestedSplits:i[0],rtDenseValues:i[1]}}}),l7=a8({raggedTensorToTensor_:function(e,t,n,r,a){let s=a4(e,"shape","raggedTensorToTensor","int32"),i=a4(t,"values","raggedTensorToTensor"),o=a4(n,"defaultValue","raggedTensorToTensor",i.dtype),l=r.map((e,t)=>a4(e,`tensors${t}`,"raggedTensorToTensor","int32"));return aX.runKernel(n2,{shape:s,values:i,defaultValue:o,rowPartitionTensors:l},{rowPartitionTypes:a})}}),l9=a8({rand_:function(e,t,n){eQ(e);let r=ew(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else if("bool"===n)a=new Uint8Array(r);else throw Error(`Unknown data type ${n}`);for(let e=0;e<r;e++)a[e]=t();return aX.makeTensor(a,e,n)}}),ue=P(Z()),ut={};L(ut,{TEST_EPSILON_FLOAT16:()=>un,createVideoElement:()=>uh,encodeStrings:()=>function e(t){for(let n=0;n<t.length;n++){let r=t[n];Array.isArray(r)?e(r):t[n]=av(r)}return t},expectArrayBuffersEqual:()=>ud,expectArraysClose:()=>ur,expectArraysEqual:()=>uo,expectNumbersClose:()=>ul,expectPromiseToFail:()=>ui,expectValuesInRange:()=>up,play:()=>uc,testEpsilon:()=>ua});var un=.1;function ur(e,t,n){return null==n&&(n=ua()),us(e,t,(e,t)=>uu(e,t,n))}function ua(){return 32===aX.backend.floatPrecision()?.001:un}function us(e,t,n){let r=!0;if((ak(e)||ak(t))&&(r=!1),ak(e)&&ak(t)&&(r=!0),r){let n=e.constructor.name,r=t.constructor.name;if(n!==r)throw Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=a2(e),r=a2(t);if(!eS(n,r))throw Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}let a=ak(e)?e:aI(e),s=ak(t)?t:aI(t);if(a.length!==s.length)throw Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.
Actual:   ${a}.
Expected: ${s}.`);for(let e=0;e<s.length;++e){let t=a[e],r=s[e];if(!n(t,r))throw Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.
Actual:   ${a}.
Expected: ${s}.`)}"undefined"!=typeof expect&&expect().nothing()}function ui(e,t){e().then(()=>t.fail(),()=>t()),"undefined"!=typeof expect&&expect().nothing()}function uo(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return eW(e)||eW(e[0])||eW(t)||eW(t[0])?us(e,n,(e,t)=>e==t):us(e,t,(e,t)=>uu(e,t,0))}function ul(e,t,n){if(null==n&&(n=ua()),!uu(e,t,n))throw Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function uu(e,t,n){return!(isFinite(e)||isFinite(t))||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function up(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function ud(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function uh(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(e=>{t.addEventListener("loadeddata",n=>e(t)),t.load()})}async function uc(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}var um=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=ue.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do s=(r=2*this.random()-1)*r+(a=2*this.random()-1)*a;while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},uf=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=ue.alea(a.toString()),this.randn=new um(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do r=this.randn.nextValue(),s=1+this.c*r;while(s<=0);if(s*=s*s,t=1-.331*(e=r*r)*e,n=.5*e+this.d*(1-s+Math.log(s)),(a=this.randu())<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},ug=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ue.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}},uy=a8({randomGamma_:function(e,t,n=1,r="float32",a){if(eQ(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw Error(`Unsupported data type ${r}`);let s=new uf(t,n,r,a),i=im(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),ub=a8({randomNormal_:function(e,t=0,n=1,r,a){if(eQ(e),null!=r&&"bool"===r)throw Error(`Unsupported data type ${r}`);let s=new um(t,n,r,!1,a),i=im(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),ux=a8({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw Error(`Unsupported data type ${t}`);return ub(e,0,1,t,n)}}),uv=a8({randomUniform_:function(e,t=0,n=1,r="float32",a){eQ(e);let s=im(e,r),i=new ug(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),uw=a8({randomUniformInt_:function(e,t,n,r){return uv(e,t,n,"int32",r)}});function uk(e,t,n=1,r="float32"){if(0===n)throw Error("Cannot have a step of zero");return aX.runKernel(n3,{},{start:e,stop:t,step:n,dtype:r})}var uI=a8({real_:function(e){let t={input:a4(e,"input","real")};return aX.runKernel(n4,t)}}),uS=a8({reciprocal_:function(e){let t={x:a4(e,"x","reciprocal")};return aX.runKernel(n6,t)}}),uN=a8({relu_:function(e){let t={x:a4(e,"x","relu")};return aX.runKernel(n5,t)}}),uT=a8({relu6_:function(e){let t={x:a4(e,"x","relu6")};return aX.runKernel(rn,t)}}),u_=a8({reverse_:function(e,t){let n={x:a4(e,"x","reverse")};return aX.runKernel(rr,n,{dims:t})}}),uC=a8({reverse1d_:function(e){let t=a4(e,"x","reverse");return eb(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),u_(t,0)}}),uE=a8({reverse2d_:function(e,t){let n=a4(e,"x","reverse");return eb(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),u_(n,t)}}),u$=a8({reverse3d_:function(e,t){let n=a4(e,"x","reverse");return eb(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),u_(n,t)}}),uA=a8({reverse4d_:function(e,t){let n=a4(e,"x","reverse");return eb(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),u_(n,t)}}),uF=a8({round_:function(e){let t={x:a4(e,"x","round")};return aX.runKernel(ra,t)}}),uR=a8({rsqrt_:function(e){let t={x:a4(e,"x","rsqrt","float32")};return aX.runKernel(rs,t)}}),uD=a8({selu_:function(e){let t={x:a4(e,"x","selu")};return aX.runKernel(rp,t)}}),uM=a8({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){let o=a4(e,"x","separableConv2d"),l=a4(t,"depthwiseFilter","separableConv2d"),u=a4(n,"pointwiseFilter","separableConv2d"),p=o,d=!1;if(3===o.rank&&(d=!0,p=iZ(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");eb(4===p.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`),eb(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),eb(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),eb(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),eb(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let h=l.shape[2],c=l.shape[3];eb(u.shape[2]===h*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*c}, but got ${u.shape[2]}.`);let m=oh(oN(p,l,r,a,i,s),u,1,"valid",i);return d?iZ(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),uO=async function(e,t){let n=a4(e,"x","setdiff1d"),r=a4(t,"y","setdiff1d");eb(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),eb(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),eb(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);let a=await n.data(),s=new Set(await r.data()),i=0;for(let e=0;e<a.length;e++)s.has(a[e])||i++;let o=new aE([i],n.dtype),l=new aE([i],"int32");for(let e=0,t=0;e<a.length;e++)s.has(a[e])||(o.values[t]=a[e],l.values[t]=e,t++);return[o.toTensor(),l.toTensor()]},uL=a8({sign_:function(e){let t={x:a4(e,"x","sign")};return aX.runKernel(rm,t)}}),uz=a8({sin_:function(e){let t={x:a4(e,"x","sin","float32")};return aX.runKernel(rh,t)}}),uP=a8({sinh_:function(e){let t={x:a4(e,"x","sinh")};return aX.runKernel(rc,t)}}),uB=a8({slice1d_:function(e,t,n){let r=a4(e,"x","slice1d");return eb(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),i3(r,[t],[n])}}),uW=a8({slice2d_:function(e,t,n){let r=a4(e,"x","slice2d");return eb(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),i3(r,t,n)}}),uV=a8({slice3d_:function(e,t,n){let r=a4(e,"x","slice3d");return eb(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),i3(r,t,n)}}),uU=a8({slice4d_:function(e,t,n){let r=a4(e,"x","slice4d");return eb(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),i3(r,t,n)}}),uG=a8({softmax_:function(e,t=-1){let n=a4(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={dim:t};return aX.runKernel(rw,{logits:n},r)}}),uH=a8({fft_:function(e){return eb("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),aX.runKernel(t5,{input:e})}}),uj=a8({ifft_:function(e){return eb("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),aX.runKernel(no,{input:e})}}),uq=a8({irfft_:function(e){let t=e.shape[e.shape.length-1],n=e.size/t,r;if(t<=2)r=uj(iZ(e,[n,t]));else{let a=[n,2*(t-1)],s=iZ(uI(e),[n,t]),i=iZ(lr(e),[n,t]),o=u_(i3(s,[0,1],[n,t-2]),1),l=ik(u_(i3(i,[0,1],[n,t-2]),1),oJ(-1));r=uj(iZ(a7(i0([s,o],1),i0([i,l],1)),[a[0],a[1]]))}if(r=uI(r),3===e.rank&&0!==e.shape[0]){let t=r,n=e.shape[0];r=iZ(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),uK=a8({split_:function(e,t,n=0){let r={x:a4(e,"x","split")};return aX.runKernel(rv,r,{numOrSizeSplits:t,axis:n})}}),uX=a8({rfft_:function(e,t){eb("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],r=e.size/n,a;if(null!=t&&t<n){let r=e.shape.map(e=>0),s=e.shape.map(e=>e);s[e.shape.length-1]=t,a=i3(e,r,s),n=t}else if(null!=t&&t>n){let r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,a=i0([e,lz(r)],e.shape.length-1),n=t}else a=e;let s=oD(a),i=uH(iZ(a7(a,s),[r,n])),o=Math.floor(n/2)+1,l=uI(i),u=lr(i),p=uK(l,[o,n-o],l.shape.length-1),d=uK(u,[o,n-o],u.shape.length-1),h=a.shape.slice();return h[a.shape.length-1]=o,iZ(a7(p[0],d[0]),h)}}),uY=a8({squaredDifference_:function(e,t){let n=a4(e,"a","squaredDifference"),r=a4(t,"b","squaredDifference");[n,r]=aW(n,r),oA(n.shape,r.shape);let a={a:n,b:r};return aX.runKernel(r_,a,{})}}),uZ=a8({squeeze_:function(e,t){let n=a4(e,"x","squeeze","string_or_numeric");return iZ(n,eR(n.shape,t).newShape)}}),uJ=a8({stack_:function(e,t=0){let n=a6(e,"tensors","stack","string_or_numeric");return eb(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&eb(t<=n[0].rank,()=>"Axis must be <= rank of the tensor"),aX.runKernel(nK,n,{axis:t})}}),uQ=a8({step_:function(e,t=0){let n={x:a4(e,"x","step")};return aX.runKernel(rj,n,{alpha:t})}}),u0=a8({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u={x:a4(e,"x","stridedSlice","string_or_numeric")};return aX.runKernel(r$,u,{begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l})}}),u1=a8({tan_:function(e){let t={x:a4(e,"x","tan","float32")};return aX.runKernel(rM,t)}});function u2(e,t){ev(e);let n=a2(e,t);if(1!==n.length)throw Error("tensor1d() requires values to be a flat/TypedArray");return a9(e,null,n,t)}function u3(e,t,n){if(ev(e),null!=t&&2!==t.length)throw Error("tensor2d() requires shape to have two numbers");let r=a2(e,n);if(2!==r.length&&1!==r.length)throw Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return a9(e,t,r,n)}function u4(e,t,n){if(ev(e),null!=t&&3!==t.length)throw Error("tensor3d() requires shape to have three numbers");let r=a2(e,n);if(3!==r.length&&1!==r.length)throw Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw Error("tensor3d() requires shape to be provided when `values` are a flat array");return a9(e,t,r,n)}function u6(e,t,n){if(ev(e),null!=t&&4!==t.length)throw Error("tensor4d() requires shape to have four numbers");let r=a2(e,n);if(4!==r.length&&1!==r.length)throw Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw Error("tensor4d() requires shape to be provided when `values` are a flat array");return a9(e,t,r,n)}function u5(e,t,n){if(ev(e),null!=t&&5!==t.length)throw Error("tensor5d() requires shape to have five numbers");let r=a2(e,n);if(5!==r.length&&1!==r.length)throw Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw Error("tensor5d() requires shape to be provided when `values` are a flat array");return a9(e,t,r,n)}function u8(e,t,n){if(ev(e),null!=t&&6!==t.length)throw Error("tensor6d() requires shape to have six numbers");let r=a2(e,n);if(6!==r.length&&1!==r.length)throw Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw Error("tensor6d() requires shape to be provided when `values` are a flat array");return a9(e,t=t||r,r,n)}var u7={};function u9(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw Error(s+` update.rank != ${a+e.length-r}`);for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function pe(e,t,n){if(t.rank<1)throw Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw Error(`Updates specified for empty output. updates shape: ${e.shape}`)}u9(n,t,e)}function pt(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let e=a;e<s;++e)i*=n[e];let o=a<1?1:a,l=ew(t.shape)/o,u=[...eq(n.slice(0,a)),1];return{sliceRank:a,numUpdates:l,sliceSize:i,strides:u,outputSize:ew(n)}}L(u7,{calculateShapes:()=>pt,validateInput:()=>pe,validateUpdateShape:()=>u9});var pn=a8({tensorScatterUpdate_:function(e,t,n){let r=a4(e,"tensor","tensorScatterupdate"),a=a4(t,"indices","tensorScatterupdate","int32"),s=a4(n,"updates","tensorScatterupdate");if(pe(s,a,r.shape),r.dtype!==s.dtype)throw Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${s.dtype}.`);return aX.runKernel(ro,{tensor:r,indices:a,updates:s},{})}}),pr=a8({topk_:function(e,t=1,n=!0){let r=a4(e,"x","topk");if(0===r.rank)throw Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let[s,i]=aX.runKernel(rz,{x:r},{k:t,sorted:n});return{values:s,indices:i}}}),pa=a8({truncatedNormal_:function(e,t=0,n=1,r,a){if(eQ(e),null!=r&&"bool"===r)throw Error("Unsupported data type $ { dtype }");let s=new um(t,n,r,!0,a),i=im(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),ps=a8({unique_:function(e,t=0){let n=a4(e,"x","unique","string_or_numeric");eb(n.rank>0,()=>"The input tensor must be at least 1D");let[r,a]=aX.runKernel(rW,{x:n},{axis:t});return{values:r,indices:a}}}),pi=a8({unsortedSegmentSum_:function(e,t,n){let r=a4(e,"x","unsortedSegmentSum"),a=a4(t,"segmentIds","unsortedSegmentSum","int32");return eb(eN(n),()=>"numSegments must be of dtype int"),aX.runKernel(rU,{x:r,segmentIds:a},{numSegments:n})}}),po=a8({unstack_:function(e,t=0){let n=a4(e,"x","unstack","string_or_numeric");return eb(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`),aX.runKernel(rV,{value:n},{axis:t})}});function pl(e,t){return lA(e,t,"right")}function pu(e,t=!0,n,r){return aX.makeVariable(e,t,n,r)}function pp(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let r=im(e,"int32"),a=im([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var pd=async function(e){let t=a4(e,"condition","whereAsync","bool"),n=await t.data(),r=pp(t.shape,n);return e!==t&&t.dispose(),r},ph=async function(e,t,n){let r=a4(e,"tensor","boolMask"),a=a4(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;eb(i>0,()=>"mask cannot be scalar"),ex(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];let u=iZ(r,o.slice(0,s).concat([l],o.slice(s+i))),p=iZ(a,[-1]),d=await pd(p),h=uZ(d,[1]),c=le(u,h,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),h.dispose(),u.dispose(),p.dispose(),d.dispose(),c},pc=a8({transpose_:function(e,t,n){let r=a4(e,"x","transpose");if(null==t&&(t=r.shape.map((e,t)=>t).reverse()),eb(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(e=>{eb(e>=0&&e<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`)}),r.rank<=1)return r.clone();let a={perm:t};return"complex64"===r.dtype?sd(()=>{let e=uI(r),t=lr(r);return e=aX.runKernel(rB,{x:e},a),t=aX.runKernel(rB,{x:t},a),n&&(t=lw(t)),a7(e,t)}):aX.runKernel(rB,{x:r},a)}}),pm=a8({movingAverage_:function(e,t,n,r,a=!0){let s=a4(e,"v","movingAverage"),i=a4(t,"x","movingAverage"),o=a4(n,"decay","movingAverage");aV(s,i),eb(eS(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=oJ(1),u=lS(l,o),p=ik(lS(i,s),u);return a&&(eb(null!=r,()=>"When using zeroDebias: true, step is required."),p=iw(p,lS(l,oZ(o,a4(r,"step","movingAverage"))))),ix(s,p)}}),pf=a8({scatterND_:function(e,t,n){eQ(n);let r=a4(e,"indices","scatterND","int32"),a=a4(t,"updates","scatterND");return pe(a,r,n),aX.runKernel(ri,{indices:r,updates:a},{shape:n})}}),pg=a8({sparseToDense_:function(e,t,n,r=0){eQ(n);let a=a4(e,"sparseIndices","sparseToDense","int32"),s=a4(t,"sparseValues","sparseToDense","string_or_numeric"),i=a4(r,"defaultValue","sparseToDense",s.dtype);return function(e,t,n,r){if("int32"!==e.dtype)throw Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(!(0===t.rank||1===t.rank&&i===a))throw Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i),aX.runKernel(rT,{sparseIndices:a,sparseValues:s,defaultValue:i},{outputShape:n})}}),py=a8({gatherND_:function(e,t){let n=a4(t,"indices","gatherND","int32"),r={params:a4(e,"x","gatherND","string_or_numeric"),indices:n};return aX.runKernel(nr,r)}}),pb=a8({dropout_:function(e,t,n,r){let a=a4(e,"x","dropout");if(eb("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),eb(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof aF?a.clone():a;let s=function(e,t){if(null==t)return e.shape.slice();if(eS(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t;return ik(a,iw(o9(ix(uv(s,0,1,"float32",r),i)),i))}});function px(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function pv(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return u2(a,"float32")}var pw=async function(e,t,n=1){let r=a4(e,"predictions","inTopK"),a=a4(t,"targets","inTopK");eb(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),eb(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),ex(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];eb(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],p=eM("bool",l);for(let e=0;e<l;e++){let t=e*u,r=i.subarray(t,t+u),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort((e,t)=>t.value-e.value),p[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){p[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),se(p,a.shape,"bool")},pk={};L(pk,{conv2d:()=>pC,depthwiseConv2d:()=>pA,matMul:()=>pF});var pI=a8({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=iZ(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=iZ(t,[1,t.shape[0],t.shape[1],t.shape[2]])),eb(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),eb(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),eb(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let u="NHWC"===s?o.shape[3]:o.shape[1],p="NHWC"===s?l.shape[3]:l.shape[1];eb(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),eb(p===n[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${n[3]}).`),iY("conv2dDerFilter",a,i);let d={x:o,dy:l};return aX.runKernel(tA,d,{strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n})}});function pS(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return ik(e,uQ(t));throw Error(`Cannot compute gradient for fused activation ${n}.`)}function pN(e,t){let n=t,r=o$(e.shape,t.shape);return r.length>0&&(n=o1(n,r)),iZ(n,e.shape)}function pT(e,t,n,r){if("linear"===t)return e;if("relu"===t)return uN(e);if("elu"===t)return oz(e);if("relu6"===t)return uT(e);if("prelu"===t)return l4(e,n);if("leakyrelu"===t)return lo(e,r);if("sigmoid"===t)return i2(e);throw Error(`Unknown fused activation ${t}.`)}var p_=(e,t)=>!(e>0)||"linear"===t,pC=a8({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:p}){let d;if(l=l||"linear",!1===p_(aX.state.gradientDepth,l)){eb("NHWC"===a,()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let d=oh(e,t,n,r,a,s,i);return null!=o&&(d=ix(d,o)),pT(d,l,u,p)}let h=a4(e,"x","conv2d","float32"),c=a4(t,"filter","conv2d","float32"),m=h,f=!1;3===h.rank&&(f=!0,m=iZ(h,[1,h.shape[0],h.shape[1],h.shape[2]])),eb(4===m.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${m.rank}.`),eb(4===c.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),iY("fused conv2d",r,i);let g="NHWC"===a?m.shape[3]:m.shape[1];eb(c.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${c.shape[2]}.`),eb(iq(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);let y=iP(m.shape,c.shape,n,s,r,i),b;if(null!=o&&(b=a4(o,"bias","fused conv2d"),[b]=aW(b,h),"NHWC"===a?oA(y.outShape,b.shape):(eb(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),eb(0===b.shape.length||b.shape[0]===y.outChannels||1===b.shape[0],()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${y.outChannels})`))),null!=u){let e=u.shape;if(eb(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)eb(1===e[0]||e[0]===y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${y.outChannels}).`);else if(3===e.length)try{oA(e,y.outShape)}catch(t){throw Error(`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${y.outShape}).`)}d=a4(u,"prelu weights","fused conv2d")}let x=(e,t)=>{eb("NHWC"===a,()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);let[i,o,u,p]=t,d=pS(e,u,l);eb(ij(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let h=[om(o.shape,d,i,n,r),pI(o,d,i.shape,n,r)];if(null!=p){let e=pN(p,d);h.push(e)}return h},v={x:m,filter:c,bias:b,preluActivationWeights:d},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:p};return null==o?lx((e,t,n)=>{let r=aX.runKernel(rY,v,w);return n([t,e,r]),f&&(r=iZ(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(m,c):lx((e,t,n,r)=>{let a=aX.runKernel(rY,v,w);return r([t,e,a,n]),f&&(a=iZ(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(m,c,b)}}),pE=a8({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=iZ(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=iZ(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l};return aX.runKernel(tG,u,{strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n})}}),p$=a8({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=iZ(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},p=aX.runKernel(tH,u,{strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e});return l?iZ(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),pA=a8({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:p}){let d;if(!1===p_(aX.state.gradientDepth,l)){let d=oN(e,t,n,r,a,s,i);return null!=o&&(d=ix(d,o)),pT(d,l,u,p)}let h=a4(e,"x","depthwiseConv2d","float32"),c=a4(t,"filter","depthwiseConv2d","float32"),m=h,f=!1;3===h.rank&&(f=!0,m=iZ(h,[1,h.shape[0],h.shape[1],h.shape[2]])),eb(4===m.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),eb(4===c.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),eb(m.shape[3]===c.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),null==s&&(s=[1,1]),eb(iq(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),iY("fused depthwiseConv2d",r,i);let g=iP(m.shape,c.shape,n,s,r,i,!0),y;null!=o&&(y=a4(o,"bias","fused conv2d"),[y]=aW(y,h),oA(g.outShape,y.shape)),null!=u&&(d=a4(u,"prelu weights","fused depthwiseConv2d"));let b=(e,t)=>{eb(ij(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[a,o,u,p]=t,d=pS(e,u,l),h=p$(o.shape,d,a,n,r,s,i),c=pE(o,d,a.shape,n,r,s,i);return null!=p?[h,c,pN(y,d)]:[h,c]},x={x:m,filter:c,bias:y,preluActivationWeights:d},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:p};return null==o?lx((e,t,n)=>{let r=aX.runKernel(rZ,x,v);return n([t,e,r]),f&&(r=iZ(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}})(m,c):lx((e,t,n,r)=>{let a=aX.runKernel(rZ,x,v);return r([t,e,a,n]),f&&(a=iZ(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}})(m,c,y)}}),pF=a8({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){let l;if(!1===p_(aX.state.gradientDepth,s)){let l=i1(e,t,n,r);return null!=a&&(l=ix(l,a)),pT(l,s,i,o)}let u=a4(e,"a","fused matMul"),p=a4(t,"b","fused matMul");[u,p]=aW(u,p);let d=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?p.shape[p.rank-1]:p.shape[p.rank-2],c=n?u.shape[u.rank-1]:u.shape[u.rank-2],m=r?p.shape[p.rank-2]:p.shape[p.rank-1],f=u.shape.slice(0,-2),g=p.shape.slice(0,-2),y=ew(f),b=ew(g);eb(d===h,()=>`Error in fused matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${u.shape} and ${p.shape} and transposeA=${n} and transposeB=${r} must match.`);let x=oA(u.shape.slice(0,-2),p.shape.slice(0,-2)).concat([c,m]),v=n?iZ(u,[y,d,c]):iZ(u,[y,c,d]),w=r?iZ(p,[b,m,h]):iZ(p,[b,h,m]),k;null!=a&&(k=a4(a,"bias","fused matMul"),[k]=aW(k,u),oA(x,k.shape)),null!=i&&(l=a4(i,"prelu weights","fused matMul"));let I=(e,t)=>{let[i,o,l,u]=t,p=pS(iZ(e,l.shape),l,s),d,h;return(n||r?!n&&r?(d=i1(p,o,!1,!1),h=i1(p,i,!0,!1)):n&&!r?(d=i1(o,p,!1,!0),h=i1(i,p,!1,!1)):(d=i1(o,p,!0,!0),h=i1(p,i,!0,!0)):(d=i1(p,o,!1,!0),h=i1(i,p,!0,!1)),null!=a)?[d,h,pN(u,p)]:[d,h]},S={a:v,b:w,bias:k,preluActivationWeights:l},N={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?lx((e,t,n)=>{let r=aX.runKernel(rX,S,N);return n([e,t,r]),{value:iZ(r,x),gradFunc:I}})(v,w):lx((e,t,n,r)=>{let a=aX.runKernel(rX,S,N);return r([e,t,a,n]),{value:iZ(a,x),gradFunc:I}})(v,w,k)}}),pR=a8({hammingWindow_:function(e){return pv(e,.54,.46)}}),pD=a8({hannWindow_:function(e){return pv(e,.5,.5)}}),pM=a8({frame_:function(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(i3(e,s,t)),s+=n;if(r)for(;s<e.size;){let r=s+t-e.size,o=i0([i3(e,s,t-r),oi([r],a)]);i.push(o),s+=n}return 0===i.length?u3([],[0,t]):iZ(i0(i),[i.length,t])}}),pO=a8({stft_:function(e,t,n,r,a=pD){return null==r&&(r=px(t)),uX(ik(pM(e,t,n),a(t)),r)}}),pL=a8({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){let i=a4(e,"image","cropAndResize"),o=a4(t,"boxes","cropAndResize","float32"),l=a4(n,"boxInd","cropAndResize","int32"),u=o.shape[0];return eb(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),eb(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),eb(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),eb(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),eb(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),eb("bilinear"===a||"nearest"===a,()=>`method must be bilinear or nearest, but was ${a}`),aX.runKernel(tB,{image:i,boxes:o,boxInd:l},{method:a,extrapolationValue:s,cropSize:r})}}),pz=a8({flipLeftRight_:function(e){let t=a4(e,"image","flipLeftRight","float32");return eb(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),aX.runKernel(t7,{image:t},{})}}),pP=a8({grayscaleToRGB_:function(e){let t=a4(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];eb(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),eb(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let a=Array(t.rank);return a.fill(1,0,n),a[n]=3,o8(t,a)}}),pB=a8({rgbToGrayscale_:function(e){let t=a4(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];eb(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),eb(3===r,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);let a=t.dtype,s=ig(t,"float32"),i=u2([.2989,.587,.114]),o;switch(t.rank){case 2:o=oL("ij,j->i",s,i);break;case 3:o=oL("ijk,k->ij",s,i);break;case 4:o=oL("ijkl,l->ijk",s,i);break;case 5:o=oL("ijklm,m->ijkl",s,i);break;case 6:o=oL("ijklmn,n->ijklm",s,i);break;default:throw Error("Not a valid tensor rank.")}return ig(o=o6(o,-1),a)}}),pW=a8({rotateWithOffset_:function(e,t,n=0,r=.5){let a=a4(e,"image","rotateWithOffset","float32");return eb(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`),aX.runKernel(rK,{image:a},{radians:t,fillValue:n,center:r})}});function pV(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),eb(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),eb(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),eb(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),eb(1===t.rank,()=>"scores must be a 1D tensor"),eb(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),eb(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var pU=a8({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=a4(e,"boxes","nonMaxSuppression","float32"),i=a4(t,"scores","nonMaxSuppression","float32"),o=pV(s,i,n,r,a),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return aX.runKernel(nU,{boxes:s,scores:i},l)}});function pG(e,t){return e>t?1:e<t?-1:0}function pH(e,t,n,r,a){return pK(e,t,n,r,a,0)}function pj(e,t,n,r,a,s){return pK(e,t,n,r,a,0,!1,s,!0)}function pq(e,t,n,r,a,s){return pK(e,t,n,r,a,s,!0)}function pK(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let e=0;e<t.length;e++)t[e]>a&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(pX);let p=s>0?-.5/s:0,d=[],h=[];for(;d.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=d.length-1;n>=i;--n){let i=function(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),p=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),c=(o-s)*(l-i),m=(d-u)*(h-p);if(c<=0||m<=0)return 0;let f=Math.max(Math.min(o,d)-Math.max(s,u),0)*Math.max(Math.min(l,h)-Math.max(i,p),0);return f/(c+m-f)}(e,s,d[n]);if(i>=r){o=!0;break}if(t.score=t.score*function(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}(r,p,i),t.score<=a)break}t.suppressBeginIndex=d.length,o||(t.score===n?(d.push(s),h.push(t.score)):t.score>a&&function(e,t,n){let r=function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){let o=n(t,e[s=r+(a-r>>>1)]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||pG);e.splice(r<0?-(r+1):r,0,t)}(u,t,pX))}let c=d.length,m=n-c;o&&m>0&&(d.push(...Array(m).fill(0)),h.push(...Array(m).fill(0)));let f={selectedIndices:d};return i&&(f.selectedScores=h),l&&(f.validOutputs=c),f}function pX(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function pY(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=a4(e,"boxes","nonMaxSuppressionAsync"),i=a4(t,"scores","nonMaxSuppressionAsync"),o=pV(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),{selectedIndices:u}=pH(l[0],l[1],n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),u2(u,"int32")}var pZ=a8({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=a4(e,"boxes","nonMaxSuppression"),o=a4(t,"scores","nonMaxSuppression"),l=pV(i,o,n,r,a,s);n=l.maxOutputSize;let u={maxOutputSize:n,iouThreshold:r=l.iouThreshold,scoreThreshold:a=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},p=aX.runKernel(nH,{boxes:i,scores:o},u);return{selectedIndices:p[0],selectedScores:p[1]}}});async function pJ(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=a4(e,"boxes","nonMaxSuppressionAsync"),o=a4(t,"scores","nonMaxSuppressionAsync"),l=pV(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),{selectedIndices:p,selectedScores:d}=pq(u[0],u[1],n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:u2(p,"int32"),selectedScores:u2(d)}}var pQ=a8({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=a4(e,"boxes","nonMaxSuppression"),o=a4(t,"scores","nonMaxSuppression"),l=pV(i,o,n,r,a,null),u=l.maxOutputSize,p=l.iouThreshold,d=l.scoreThreshold,h=aX.runKernel(nG,{boxes:i,scores:o},{maxOutputSize:u,iouThreshold:p,scoreThreshold:d,padToMaxOutputSize:s});return{selectedIndices:h[0],validOutputs:h[1]}}});async function p0(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=a4(e,"boxes","nonMaxSuppressionAsync"),o=a4(t,"scores","nonMaxSuppressionAsync"),l=pV(i,o,n,r,a,null),u=l.maxOutputSize,p=l.iouThreshold,d=l.scoreThreshold,[h,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:f}=pj(h,c,u,p,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:u2(m,"int32"),validOutputs:oJ(f,"int32")}}var p1=a8({resizeBilinear_:function(e,t,n=!1,r=!1){let a=a4(e,"images","resizeBilinear");eb(3===a.rank||4===a.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),eb(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),eb(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;3===a.rank&&(i=!0,s=iZ(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l=aX.runKernel(re,o,{alignCorners:n,halfPixelCenters:r,size:t});return i?iZ(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),p2=a8({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){let a=a4(e,"images","resizeNearestNeighbor");eb(3===a.rank||4===a.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),eb(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),eb("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),eb(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;3===a.rank&&(i=!0,s=iZ(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l=aX.runKernel(n7,o,{alignCorners:n,halfPixelCenters:r,size:t});return i?iZ(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),p3=a8({threshold_:function(e,t="binary",n=!1,r=.5){let a=a4(e,"image","threshold"),s=a.shape[0]*a.shape[1],i=ik(u2([r]),255),o,l,u,p;if(eb(3===a.rank,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),eb(3===a.shape[2]||1===a.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),eb("int32"===a.dtype||"float32"===a.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),eb("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===a.shape[2]){[o,l,u]=uK(a,[1,1,1],-1);let e=ik(o,.2989),t=ik(l,.587),n=ik(u,.114);p=ix(ix(e,t),n)}else p=e;return"otsu"===t&&(i=function(e,t){let n=u2([-1]),r=u2([0]),a=u2([0]),s,i,o,l,u,p;for(let d=0;d<e.size-1;d++){s=i3(e,0,d+1),i=i3(e,d+1),u=iw(o1(s),t),p=iw(o1(i),t),o=iw(o1(ik(s,uk(0,s.size))),o1(s));let h=oi(i.shape,s.size),c=ix(uk(0,i.size),h),m=lS(o,l=iw(o1(ik(i,c)),o1(i))),f=lS(o,l),g=ik(u,p),y=lt(a=ik(ik(g,m),f),r);r=oR(y,a,r),n=oR(y,u2([d]),n)}return n}(ot(ig(uF(p),"int32"),se([]),256),s)),ig(ik(n?lu(p,i):lt(p,i),255),"int32")}}),p4=a8({transform_:function(e,t,n="nearest",r="constant",a=0,s){let i=a4(e,"image","transform","float32"),o=a4(t,"transforms","transform","float32");return eb(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),eb(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),eb(null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`),aX.runKernel(rP,{image:i,transforms:o},{interpolation:n,fillMode:r,fillValue:a,outputShape:s})}}),p6=a8({bandPart_:function(e,t,n){let r=a4(e,"a","bandPart");eb(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let a=r.shape,[s,i]=r.shape.slice(-2),o,l;"number"==typeof t?(eb(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),eb(t<=s,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`),o=a4(t<0?s:t,"numLower","bandPart")):(eb("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),o=oR(ll(t,0),s,lW(t,s))),"number"==typeof n?(eb(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),eb(n<=i,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`),l=a4(n<0?i:n,"numUpper","bandPart")):(eb("int32"===n.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),l=oR(ll(n,0),i,lW(n,i)));let u=lS(iZ(uk(0,s,1,"int32"),[-1,1]),uk(0,i,1,"int32")),p=l_(lu(u,o),ln(u,lw(l))),d=lz([s,i],r.dtype);return iZ(uJ(po(iZ(r,[-1,s,i])).map(e=>oR(p,e,d))),a)}}),p5=a8({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,eb(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=e[0].shape[0];for(let t=1;t<e.length;++t)eb(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=uK(e,e.shape[0],0).map(e=>uZ(e,[0]));eb(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],r=e;for(let t=0;t<e.length;++t)n.push(aX.tidy(()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){let t=ik(o1(ik(n[r],e)),n[r]);e=lS(e,t)}return iw(e,o2(e,"euclidean"))}));return t?uJ(n,0):n}});function p8(e,t=!1){return aX.tidy(()=>{eb(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],r=e.shape[1],a=o7(n),s=iy(e),i=u3([[1]],[1,1]),o=iy(i),l=n>=r?r:n;for(let e=0;e<l;++e){let t=s,l=o,u=a;[o,s,a]=aX.tidy(()=>{let t=i3(s,[e,e],[n-e,1]),l=o2(t),u=i3(s,[e,e],[1,1]),p=oR(lt(u,0),u3([[-1]]),u3([[1]])),d=lS(u,ik(p,l)),h=iw(t,d);o=1===h.shape[0]?iy(i):i0([i,i3(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);let c=lw(iw(i1(p,d),l)),m=i3(s,[e,0],[n-e,r]),f=ik(c,o),g=pc(o);if(0===e)s=lS(m,i1(f,i1(g,m)));else{let t=lS(m,i1(f,i1(g,m)));s=i0([i3(s,[0,0],[e,r]),t],0)}let y=pc(f),b=i3(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=lS(b,i1(i1(b,o),y));else{let t=lS(b,i1(i1(b,o),y));a=i0([i3(a,[0,0],[n,e]),t],1)}return[o,s,a]}),sh([t,l,u])}return!t&&n>r&&(a=i3(a,[0,0],[n,r]),s=i3(s,[0,0],[r,r])),[a,s]})}var p7,p9=a8({qr_:function(e,t=!1){if(eb(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return p8(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=po(iZ(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach(e=>{let[n,r]=p8(e,t);a.push(n),s.push(r)}),[iZ(uJ(a,0),e.shape),iZ(uJ(s,0),e.shape)]}}});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(p7||(p7={}));var de=a8({computeWeightedLoss_:function(e,t,n=p7.SUM_BY_NONZERO_WEIGHTS){let r=a4(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=a4(t,"weights","computeWeightedLoss"));let s=null==a?r:ik(r,a);if(n===p7.NONE)return s;if(n===p7.SUM)return o1(s);if(n===p7.MEAN){if(null==a)return lL(s);{let e=r.size/a.size,t=iw(o1(s),o1(a));return e>1?iw(t,oJ(e)):t}}if(n===p7.SUM_BY_NONZERO_WEIGHTS){if(null==a)return iw(o1(s),oJ(r.size));{let e=ig(o1(lq(ik(a,lP(r.shape)),oJ(0))),"float32");return iw(o1(s),e)}}throw Error(`Unknown reduction: ${n}`)}}),dt=a8({absoluteDifference_:function(e,t,n,r=p7.SUM_BY_NONZERO_WEIGHTS){let a=a4(e,"labels","absoluteDifference"),s=a4(t,"predictions","absoluteDifference"),i=null;return null!=n&&(i=a4(n,"weights","absoluteDifference")),ex(a.shape,s.shape,"Error in absoluteDifference: "),de(iI(lS(a,s)),i,r)}}),dn=a8({cosineDistance_:function(e,t,n,r,a=p7.SUM_BY_NONZERO_WEIGHTS){let s=a4(e,"labels","cosineDistance"),i=a4(t,"predictions","cosineDistance"),o=null;return null!=r&&(o=a4(r,"weights","cosineDistance")),ex(s.shape,i.shape,"Error in cosineDistance: "),de(lS(oJ(1),o1(ik(s,i),n,!0)),o,a)}}),dr=a8({hingeLoss_:function(e,t,n,r=p7.SUM_BY_NONZERO_WEIGHTS){let a=a4(e,"labels","hingeLoss"),s=a4(t,"predictions","hingeLoss"),i=null;null!=n&&(i=a4(n,"weights","hingeLoss")),ex(a.shape,s.shape,"Error in hingeLoss: ");let o=oJ(1);return a=lS(ik(oJ(2),a),o),de(uN(lS(o,ik(a,s))),i,r)}}),da=a8({huberLoss_:function(e,t,n,r=1,a=p7.SUM_BY_NONZERO_WEIGHTS){let s=a4(e,"labels","huberLoss"),i=a4(t,"predictions","huberLoss"),o=null;null!=n&&(o=a4(n,"weights","huberLoss")),ex(s.shape,i.shape,"Error in huberLoss: ");let l=oJ(r),u=iI(lS(i,s)),p=lW(u,l),d=lS(u,p);return de(ix(ik(oJ(.5),o0(p)),ik(l,d)),o,a)}}),ds=a8({logLoss_:function(e,t,n,r=1e-7,a=p7.SUM_BY_NONZERO_WEIGHTS){let s=a4(e,"labels","logLoss"),i=a4(t,"predictions","logLoss"),o=null;null!=n&&(o=a4(n,"weights","logLoss")),ex(s.shape,i.shape,"Error in logLoss: ");let l=oJ(1),u=oJ(r),p=lw(ik(s,lh(ix(i,u)))),d=ik(lS(l,s),lh(ix(lS(l,i),u)));return de(lS(p,d),o,a)}}),di=a8({meanSquaredError_:function(e,t,n,r=p7.SUM_BY_NONZERO_WEIGHTS){let a=a4(e,"labels","meanSquaredError"),s=a4(t,"predictions","meanSquaredError"),i=null;return null!=n&&(i=a4(n,"weights","meanSquaredError")),ex(a.shape,s.shape,"Error in meanSquaredError: "),de(uY(a,s),i,r)}}),dl=a8({sigmoidCrossEntropy_:function(e,t,n,r=0,a=p7.SUM_BY_NONZERO_WEIGHTS){let s,i,o,l,u,p=a4(e,"multiClassLabels","sigmoidCrossEntropy"),d=a4(t,"logits","sigmoidCrossEntropy"),h=null;if(null!=n&&(h=a4(n,"weights","sigmoidCrossEntropy")),ex(p.shape,d.shape,"Error in sigmoidCrossEntropy: "),r>0){let e=oJ(r),t=oJ(1),n=oJ(.5);p=ix(ik(p,lS(t,e)),ik(n,e))}return de((s=a4(p,"labels","sigmoidCrossEntropyWithLogits"),i=a4(d,"logits","sigmoidCrossEntropyWithLogits"),ex(s.shape,i.shape,"Error in sigmoidCrossEntropyWithLogits: "),o=uN(i),l=ik(i,s),u=lc(o4(lw(iI(i)))),ix(lS(o,l),u)),h,a)}}),du=a8({softmaxCrossEntropy_:function(e,t,n,r=0,a=p7.SUM_BY_NONZERO_WEIGHTS){let s=a4(e,"onehotLabels","softmaxCrossEntropy"),i=a4(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=a4(n,"weights","softmaxCrossEntropy")),ex(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let e=oJ(r),t=oJ(1),n=oJ(s.shape[1]);s=ix(ik(s,lS(t,e)),iw(e,n))}return de(function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return lx((e,t,r)=>{let a=lT(t,[n],!0),s=lS(ig(t,"float32"),a);return r([e,s]),{value:o1(lw(ik(s,e)),[n]),gradFunc:(e,t)=>{let[r,a]=t,s=oG(e.shape,[n]);return[ik(iZ(e,s),lS(ig(r,"float32"),o4(a))),ik(iZ(e,s),lS(o4(a),ig(r,"float32")))]}}})(e,t)}(s,i),o,a)}}),dp=a8({sparseFillEmptyRows_:function(e,t,n,r){let a=a4(e,"indices","sparseFillEmptyRows","int32"),s=a4(t,"values","sparseFillEmptyRows"),i=a4(n,"denseShape","sparseFillEmptyRows","int32"),o=a4(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(1!==s.rank)throw Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw Error(`Default value should be a scalar but received shape ${o.shape}`);let l=aX.runKernel(rk,{indices:a,values:s,denseShape:i,defaultValue:o});return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),dd=a8({sparseReshape_:function(e,t,n){let r=a4(e,"inputIndices","sparseReshape","int32"),a=a4(t,"inputShape","sparseReshape","int32"),s=a4(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(1!==a.rank)throw Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i=aX.runKernel(rI,{inputIndices:r,inputShape:a,newShape:s});return{outputIndices:i[0],outputShape:i[1]}}}),dh=a8({sparseSegmentMean_:function(e,t,n){let r=a4(e,"data","sparseSegmentMean"),a=a4(t,"indices","sparseSegmentMean","int32"),s=a4(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(1!==s.rank)throw Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);return aX.runKernel(rS,{data:r,indices:a,segmentIds:s})}}),dc=a8({sparseSegmentSum_:function(e,t,n){let r=a4(e,"data","sparseSegmentSum"),a=a4(t,"indices","sparseSegmentSum","int32"),s=a4(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(1!==s.rank)throw Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);return aX.runKernel(rN,{data:r,indices:a,segmentIds:s})}}),dm=a8({stringNGrams_:function(e,t,n,r,a,s,i,o){let l=a4(e,"data","stringNGrams","string");if("string"!==l.dtype)throw Error("Data must be of datatype string");if(1!==l.shape.length)throw Error(`Data must be a vector, saw: ${l.shape}`);let u=a4(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw Error("Data splits must be of datatype int32");let p=aX.runKernel(rA,{data:l,dataSplits:u},{separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o});return{nGrams:p[0],nGramsSplits:p[1]}}}),df=a8({stringSplit_:function(e,t,n=!0){let r=a4(e,"input","stringSplit","string"),a=a4(t,"delimiter","stringSplit","string");if(1!==r.rank)throw Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s=aX.runKernel(rF,{input:r,delimiter:a},{skipEmpty:n});return{indices:s[0],values:s[1],shape:s[2]}}}),dg=a8({stringToHashBucketFast_:function(e,t){let n=a4(e,"input","stringToHashBucketFast","string");if(t<=0)throw Error("Number of buckets must be at least 1");return aX.runKernel(rR,{input:n},{numBuckets:t})}}),dy=a8({staticRegexReplace_:function(e,t,n,r=!0){let a=a4(e,"input","staticRegexReplace","string");return aX.runKernel(rE,{x:a},{pattern:t,rewrite:n,replaceGlobal:r})}}),db={fft:uH,ifft:uj,rfft:uX,irfft:uq},dx={hammingWindow:pR,hannWindow:pD,frame:pM,stft:pO},dv={flipLeftRight:pz,grayscaleToRGB:pP,resizeNearestNeighbor:p2,resizeBilinear:p1,rgbToGrayscale:pB,rotateWithOffset:pW,cropAndResize:pL,nonMaxSuppression:pU,nonMaxSuppressionAsync:pY,nonMaxSuppressionWithScore:pZ,nonMaxSuppressionWithScoreAsync:pJ,nonMaxSuppressionPadded:pQ,nonMaxSuppressionPaddedAsync:p0,threshold:p3,transform:p4},dw={bandPart:p6,gramSchmidt:p5,qr:p9},dk={absoluteDifference:dt,computeWeightedLoss:de,cosineDistance:dn,hingeLoss:dr,huberLoss:da,logLoss:ds,meanSquaredError:di,sigmoidCrossEntropy:dl,softmaxCrossEntropy:du},dI={sparseFillEmptyRows:dp,sparseReshape:dd,sparseSegmentMean:dh,sparseSegmentSum:dc},dS={stringNGrams:dm,stringSplit:df,stringToHashBucketFast:dg,staticRegexReplace:dy},dN={};L(dN,{Serializable:()=>dC,SerializationMap:()=>dE,getRegisteredName:()=>dA,registerClass:()=>d$});var dT=new Map,d_=new Map,dC=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},dE=class e{constructor(){this.classNameMap={}}static getMap(){return null==e.instance&&(e.instance=new e),e.instance}static register(t){e.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function d$(e,t,n){eb(null!=e.className,()=>"Class being registered does not have the static className property defined."),eb("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),eb(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);let r=t+">"+n;return dE.register(e),dT.set(r,e),d_.set(e,r),e}function dA(e){return d_.has(e)?d_.get(e):e.className}var dF=class extends dC{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let e=n.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return sh(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return lb(e,t)}dispose(){null!=this.iterations_&&sh(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:oJ(this.iterations_,"int32")}}async getWeights(){throw Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(dF,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var dR=class extends dF{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=aX.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=aX.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:sd(()=>oD(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:sd(()=>oD(r).variable(!1))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;sd(()=>{let e=ix(ik(s,this.rho),ik(o0(a),1-this.rho)),t=ik(iw(oQ(ix(i,this.epsilon)),oQ(ix(s,this.epsilon))),a),n=ix(ik(i,this.rho),ik(o0(t),1-this.rho));s.assign(e),i.assign(n);let o=ix(ik(t,-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(sh(this.accumulatedGrads.map(e=>e.variable)),sh(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},dD=class extends dF{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=aX.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:sd(()=>oi(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;sd(()=>{let e=ix(s,o0(a));s.assign(e);let t=ix(ik(iw(a,oQ(ix(e,aX.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&sh(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},dM=class extends dF{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],sd(()=>{this.accBeta1=oJ(t).variable(),this.accBeta2=oJ(n).variable()}),null==r&&(this.epsilon=aX.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);sd(()=>{let n=lS(1,this.accBeta1),r=lS(1,this.accBeta2);t.forEach((t,a)=>{let s=aX.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:sd(()=>oD(s).variable(!1))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:sd(()=>oD(s).variable(!1))});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,u=ix(ik(o,this.beta1),ik(i,1-this.beta1)),p=ix(ik(l,this.beta2),ik(o0(i),1-this.beta2)),d=iw(u,n),h=iw(p,r);o.assign(u),l.assign(p);let c=ix(ik(iw(d,ix(oQ(h),this.epsilon)),-this.learningRate),s);s.assign(c)}),this.accBeta1.assign(ik(this.accBeta1,this.beta1)),this.accBeta2.assign(ik(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&sh(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&sh(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),sd(()=>{this.accBeta1.assign(oZ(this.beta1,this.iterations_+1)),this.accBeta2.assign(oZ(this.beta2,this.iterations_+1))});let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},dO=class extends dF{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],sd(()=>{this.iteration=oJ(0).variable(),this.accBeta1=oJ(t).variable()}),null==r&&(this.epsilon=aX.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);sd(()=>{let n=lS(1,this.accBeta1),r=iw(-this.learningRate,ix(ik(this.iteration,this.decay),1));t.forEach((t,a)=>{let s=aX.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:oD(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:oD(s).variable(!1)});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,u=ix(ik(o,this.beta1),ik(i,1-this.beta1)),p=lO(ik(l,this.beta2),iI(i));o.assign(u),l.assign(p);let d=ix(ik(iw(r,n),iw(u,ix(p,this.epsilon))),s);s.assign(d)}),this.iteration.assign(ix(this.iteration,1)),this.accBeta1.assign(ik(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&sh(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&sh(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},dL=class extends dF{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=aX.registeredVariables[t];sd(()=>{let e=ix(ik(this.c,r),a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=sc(oJ(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},dz=class extends dL{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=oJ(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=aX.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:sd(()=>oD(r).variable(!1))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&sd(()=>{let e,t=ix(ik(this.m,a),s);e=this.useNesterov?ix(ik(this.c,ix(s,ik(t,this.m))),r):ix(ik(this.c,t),r),a.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&sh(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},dP=class extends dF{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=aX.backend.epsilon()),null==e)throw Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=aX.registeredVariables[t];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:sd(()=>oD(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:sd(()=>oD(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:sd(()=>oD(r).variable(!1))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;sd(()=>{let e=ix(ik(s,this.decay),ik(o0(a),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,o=ix(ik(t,this.decay),ik(a,1-this.decay)),l=iw(ik(a,this.learningRate),oQ(lS(e,ix(o0(o),this.epsilon)))),u=ix(ik(i,this.momentum),l);s.assign(e),t.assign(o),i.assign(u);let p=lS(r,u);r.assign(p)}else{let e=ix(ik(s,this.decay),ik(o0(a),1-this.decay)),t=ix(ik(i,this.momentum),iw(ik(a,this.learningRate),oQ(ix(e,this.epsilon))));s.assign(e),i.assign(t);let n=lS(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&sh(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&sh(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&sh(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},dB=[dR,dD,dM,dO,dz,dP,dL],dW={};function dV(e){return new Promise(e=>setTimeout(e)).then(e)}L(dW,{CompositeArrayBuffer:()=>sn,browserFiles:()=>dH,browserHTTPRequest:()=>d0,concatenateArrayBuffers:()=>sF,copyModel:()=>ie,decodeWeights:()=>sN,decodeWeightsStream:()=>sE,encodeWeights:()=>sS,fromMemory:()=>d4,fromMemorySync:()=>d6,getLoadHandlers:()=>sU,getModelArtifactsForJSON:()=>sO,getModelArtifactsForJSONSync:()=>sM,getModelArtifactsInfoForJSON:()=>sL,getSaveHandlers:()=>sV,getWeightSpecs:()=>sz,http:()=>dQ,isHTTPScheme:()=>dZ,listModels:()=>s7,loadWeights:()=>dK,moveModel:()=>it,registerLoadRouter:()=>sW,registerSaveRouter:()=>sB,removeModel:()=>s9,weightsLoaderFactory:()=>dX,withSaveHandler:()=>d5,withSaveHandlerSync:()=>d8});var dU=class e{constructor(t){if(!e8.getBool("IS_BROWSER"))throw Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(e.URL_SCHEME)&&(t=t.slice(e.URL_SCHEME.length)),(null==t||0===t.length)&&(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(e){if("undefined"==typeof document)throw Error("Browser downloads are not supported in this environment since `document` is not present");let t=sn.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=sD(e,t),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await dV(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await dV(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:sL(e)}}}};dU.URL_SCHEME="downloads://";var dG=class{constructor(e){if(null==e||e.length<1)throw Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=n=>{let r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a){t(Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(null==r.weightsManifest){t(Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(0===this.weightsFiles.length){e({modelTopology:a});return}e(sO(r,e=>this.loadWeights(e)))},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let r of e)t.push(...r.weights),n.push(...r.paths);let r=this.checkManifestAndWeightFiles(e);return Promise.all(n.map(e=>this.loadWeightsFile(e,r[e]))).then(e=>[t,e])}loadWeightsFile(e,t){return new Promise((n,r)=>{let a=new FileReader;a.onload=e=>{n(e.target.result)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(e=>sR(e.name)),r={};for(let a of e)a.paths.forEach(e=>{let a=sR(e);if(-1!==t.indexOf(a))throw Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}};function dH(e){return new dG(e)}function dj(e,t,n,r){var a,s;eb(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array"),a=n=null==n?0:n,s=r=null==r?1:r,eb(a>=0&&a<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${a}`),eb(s>=0&&s<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${s}`),eb(s>=a,()=>`startFraction must be no more than endFraction, but got startFraction ${a} and endFraction ${s}`);let i=0;return Promise.all(e.map(a=>(a.then(a=>(t(n+ ++i/e.length*(r-n)),a)),a)))}async function dq(e,t){null==t&&(t={});let n=null==t.fetchFunc?e8.platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(r):await dj(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await dj(a,t.onProgress,.5,1)}async function dK(e,t="",n,r){return dX(e=>dq(e,{requestInit:r}))(e,t,n)}function dX(e){return async(t,n="",r)=>{let a=t.map(()=>!1),s={},i=null!=r?r.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{let l=st["quantization"in e?e.quantization.dtype:e.dtype]*ew(e.shape),u=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach((t,n)=>{t===e.name&&(u(),i[n]=!0)}):u(),o.push(e.name),n+=l})}),!i.every(e=>e)){let e=r.filter((e,t)=>!i[t]);throw Error(`Could not find weights in manifest with names: ${e.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce((e,t,n)=>(t&&e.push(n),e),[]),u=[];l.forEach(e=>{t[e].paths.forEach(e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)})});let p=await e(u),d={},h=0;return l.forEach(e=>{let n=t[e].paths.length,r=new sn(p.slice(h,h+n));s[e].forEach(e=>{let t=sN(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)d[e]=t[e]}),h+=n}),d}}sP.registerSaveRouter(e=>e8.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(dU.URL_SCHEME)?function(e="model"){return new dU(e)}(e.slice(dU.URL_SCHEME.length)):null);var dY=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(eb("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=e8.platform.fetch,eb(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&eb(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=sD(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData){let n=sn.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:sL(e),responses:[a]};throw Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",Error(e)}let n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){return this.loadOptions.streamWeights?this.loadStream():sO(await this.loadModelJSON(),e=>this.loadWeights(e))}async loadStream(){let e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=sz(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>{var e,n;let r,a,s;return r=null==(e=this.loadOptions).fetchFunc?e8.platform.fetch:e.fetchFunc,a=0,null===(n=e.onProgress)||void 0===n||n.call(e,0),new ReadableStream({pull:async n=>{for(var i;a<t.length;){s||(s=(await r(t[a],e.requestInit,{isBinary:!0})).body.getReader());let{done:o,value:l}=await s.read();if(o){a++,s=void 0,null===(i=e.onProgress)||void 0===i||i.call(e,a/t.length);continue}n.enqueue(l);return}n.close()}})}})}async getWeightUrls(e){var t;let n,r;let[a,s]=(n=(t=Array.isArray(this.path)?this.path[1]:this.path).lastIndexOf("/"),r=t.lastIndexOf("?"),[t.substring(0,n)+"/",r>n?t.substring(r):""]),i=this.weightPathPrefix||a,o=[],l=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?l.push(this.weightUrlConverter(e)):o.push(i+e+s);return this.weightUrlConverter&&o.push(...await Promise.all(l)),o}async loadWeights(e){let t=await this.getWeightUrls(e);return[sz(e),await dq(t,this.loadOptions)]}};function dZ(e){return null!=e.match(dY.URL_SCHEME_REGEX)}dY.URL_SCHEME_REGEX=/^https?:\/\//;var dJ=(e,t)=>"undefined"==typeof fetch&&(null==t||null==t.fetchFunc)?null:(Array.isArray(e)?e.every(e=>dZ(e)):dZ(e))?dQ(e,t):null;function dQ(e,t){return new dY(e,t)}function d0(e,t){return dQ(e,t)}sP.registerSaveRouter(dJ),sP.registerLoadRouter(dJ);var d1=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},d2=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},d3=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function d4(e,t,n,r){let a=arguments;return new d3(d6(...a))}function d6(e,t,n,r){return 1==arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new d1(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new d1({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new d1({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function d5(e){return new d2(e)}function d8(e){return new d2(e)}var d7={};L(d7,{confusionMatrix:()=>d9});var d9=a8({confusionMatrix_:function(e,t,n){let r=a4(e,"labels","confusionMatrix"),a=a4(t,"predictions","confusionMatrix");eb(null==n||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),eb(1===r.rank,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),eb(1===a.rank,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),eb(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),eb(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let s=lK(ig(r,"int32"),n),i=lK(ig(a,"int32"),n);return ig(i1(pc(s),i),"int32")}}),he={};L(he,{draw:()=>ho,fromPixels:()=>hl,fromPixelsAsync:()=>ha,toPixels:()=>hi});var ht,hn=!1;function hr(e,t=3){let n;if(t>4)throw Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw Error("pixels passed to tf.browser.fromPixels() can not be null");let r=!1,a=!1,s=!1,i=!1,o=!1,l=!1;if(e.data instanceof Uint8Array)r=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)i=!0;else if(null!=e.getContext)o=!0;else if("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap)l=!0;else throw Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(null!=r2(rq,aX.backendName))return aX.runKernel(rq,{pixels:e},{numChannels:t});let[u,p]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;if(o)d=e.getContext("2d").getImageData(0,0,u,p).data;else if(a||r)d=e.data;else if(i||s||l){if(null==ht){if("undefined"==typeof document){if("undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof OffscreenCanvasRenderingContext2D)ht=new OffscreenCanvas(1,1).getContext("2d");else throw Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.")}else ht=document.createElement("canvas").getContext("2d",{willReadFrequently:!0})}ht.canvas.width=u,ht.canvas.height=p,ht.drawImage(e,0,0,u,p),d=ht.getImageData(0,0,u,p).data}if(4===t)n=new Int32Array(d);else{let e=u*p;n=new Int32Array(e*t);for(let r=0;r<e;r++)for(let e=0;e<t;++e)n[r*t+e]=d[4*r+e]}return u4(n,[p,u,t],"int32")}async function ha(e,t=3){var n;let r=null;if(e8.getBool("WRAP_TO_IMAGEBITMAP")&&"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&null!=(n=e)&&0!==n.width&&0!==n.height&&!(null!=e&&e.data instanceof Uint8Array)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}r=null!=t&&t.width===e.width&&t.height===e.height?t:e}else r=e;return hr(r,t)}function hs(e){if(2!==e.rank&&3!==e.rank)throw Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function hi(e,t){let n=a4(e,"img","toPixels");if(!(e instanceof aF)){let e=n;n=ig(e,"int32"),e.dispose()}hs(n);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){let t=[0,0,0,255];for(let r=0;r<s;r++){let a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}let r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){hn||null!=r2(tY,aX.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),hn=!0),t.width=a,t.height=r;let e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function ho(e,t,n){let r=a4(e,"img","draw");if(!(e instanceof aF)){let e=r;r=ig(e,"int32"),e.dispose()}hs(r),function(e){let t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==n?void 0:n.imageOptions);let a={image:r};aX.runKernel(tY,a,{canvas:t,options:n})}var hl=a8({fromPixels_:hr}),hu={};function hp(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===ew(e.shape))throw Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let e=0;e<a.length-1;++e)i*=a[e];let o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);let p=[...eq(e.shape).map(e=>e/u),1].slice(0,s);return[l,i,u,p]}L(hu,{prepareAndValidate:()=>hp});var hd={};function hh(e,t,n){let r=e.shape.length;eb(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),eb(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)eb(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function hc(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function hm(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function hf(e,t,n,r){let a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function hg(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function hy(e,t,n,r,a,s,i,o,l){let u=e.length,p=Array(u),d=Array(u),h=Array(u);if(t.length&&n>0){let l=t[0],u=n+1;p=hb(i,l,u,r,e),d=hx(o,l,u,a,e),h=hf(s,l,u,e)}else for(let t=0;t<u;t++)p[t]=hw(i,r,s,e,t,l),d[t]=hk(o,a,s,e,t,l),h[t]=hv(s,t,l);return{begin:p,end:d,strides:h}}function hb(e,t,n,r,a){let s=[...a],i=hg(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{var o;let i=(o=a)<=t?o:o-(n-1),l=r[i];e&1<<i&&(l=0),s[a]=l}return s}function hx(e,t,n,r,a){let s=[...a],i=hg(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{var o;let i=(o=a)<=t?o:o-(n-1),l=r[i];e&1<<i&&(l=Number.MAX_SAFE_INTEGER),s[a]=l}for(let e=0;e<s.length;e++){let t=a[e];s[e]<0&&(s[e]+=t),s[e]=eh(0,s[e],a[e])}return s}function hv(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function hw(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=eh(0,i,l-1)}function hk(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?eh(0,i,l):eh(-1,i,l-1)}function hI(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function hS(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function hN(e,t,n){let r,a,s=e.shape.length;return(a="number"==typeof t?[t,...Array(s-1).fill(0)]:t.length<s?t.concat(Array(s-t.length).fill(0)):t.slice()).forEach(e=>{eb(-1!==e,()=>"slice() does not support negative begin indexing.")}),r=(r=null==n?Array(s).fill(-1):"number"==typeof n?[n,...Array(s-1).fill(-1)]:n.length<s?n.concat(Array(s-n.length).fill(-1)):n).map((t,n)=>t>=0?t:(eb(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-a[n])),[a,r]}function hT(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=Array(t.length)).fill(1):u=r,null!=i&&i&i-1)throw Error("Multiple ellipses in slice is not allowed.");let p=!1,d={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<d.dims;e++)p&&1<<e&o&&d.numAddAxisAfterEllipsis++,1<<e&i&&(p=!0);p||(d.ellipsisMask|=1<<d.dims,d.dims++);let h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};(function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=Array(t.dims),t.end=Array(t.dims),t.strides=Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}})(d,h);let c=!0,m=!0,f=!0,g=[],y=[];for(let t=0;t<e.length;++t){if(0===h.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(h.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}let a=[h.beginMask&1<<t,h.endMask&1<<t],s=[h.strides[t]>0?0:-1,h.strides[t]>0?r:r-1];if(n&&h.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");f=f&&1===h.strides[t];let i=!!(h.beginMask&1<<t&&h.endMask&1<<t);if(h.beginValid&&h.endValid){if(n){let e=h.begin[t]<0?r+h.begin[t]:h.begin[t];if(h.begin[t]=e,h.end[t]=h.begin[t]+1,e<0||e>=r)throw Error(`slice index ${h.begin[t]} of dimension ${t} out of bounds.`)}else h.begin[t]=h_(h.begin[t],0,h.strides[t],r,a,s),h.end[t]=h_(h.end[t],1,h.strides[t],r,a,s);let e=1===h.strides[t]&&0===h.begin[t]&&h.end[t]===r;c=c&&e,m=m&&(0===t&&1===h.strides[t]||e)}else c=c&&1===h.strides[t]&&i,m=m&&(0===t&&1===h.strides[t]||i);let o,l=!1;if(h.beginValid&&h.endValid?(o=h.end[t]-h.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=h.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=h.strides[t]<0?0:Math.trunc(o/h.strides[t])+(o%h.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<h.finalShapeGatherIndices.length;++e){let t=h.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter((e,t)=>-2!==h.finalShapeGatherIndices[t]),finalShape:y,isIdentity:c,sliceDim0:m,isSimpleSlice:f,begin:h.begin,end:h.end,strides:h.strides}}function h_(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}L(hd,{assertParamsValid:()=>hh,computeFlatOffset:()=>hS,computeOutShape:()=>hm,getNormalizedAxes:()=>hy,isSliceContinous:()=>hI,maskToAxes:()=>hc,parseSliceParams:()=>hN,sliceInfo:()=>hT,startForAxis:()=>hw,startIndicesWithElidedDims:()=>hb,stopForAxis:()=>hk,stopIndicesWithElidedDims:()=>hx,stridesForAxis:()=>hv,stridesWithElidedDims:()=>hf});var hC="4.22.0",hE=class{static sgd(e){return new dL(e)}static momentum(e,t,n=!1){return new dz(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new dP(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new dM(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new dR(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new dO(e,t,n,r,a)}static adagrad(e,t=.1){return new dD(e,t)}},h$=hE,hA="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function hF(){return new Promise(e=>hA(()=>e()))}var hR={};function hD(e,t){let n=e[0].length;e.forEach((e,t)=>{eb(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),eb(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let r=e[0];e.forEach((e,a)=>{for(let s=0;s<n;s++)eb(s===t||e[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function hM(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function hO(e,t,n){let r=[];if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){let s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0){if(o>=0){if(o!==s)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}}return r}function hL(e){let t={FIRST_DIM_SIZE:ki.FIRST_DIM_SIZE,VALUE_ROWIDS:ki.VALUE_ROWIDS,ROW_LENGTHS:ki.ROW_LENGTHS,ROW_SPLITS:ki.ROW_SPLITS,ROW_LIMITS:ki.ROW_LIMITS,ROW_STARTS:ki.ROW_STARTS},n=[];for(let r of e)if(r in t)n.push(t[r]);else break;return n}function hz(e){return 0===e.length?0:e[0]===ki.FIRST_DIM_SIZE?e.length-1:e.length}function hP(e,t){if(null==e||null==t)return;let n=e.length,r=t.length;if(n>=r)throw Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){let n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${r}`)}}L(hR,{ERF_A1:()=>hZ,ERF_A2:()=>hJ,ERF_A3:()=>hQ,ERF_A4:()=>h0,ERF_A5:()=>h1,ERF_P:()=>hY,PARALLELIZE_THRESHOLD:()=>hB,RowPartitionType:()=>ki,SELU_SCALE:()=>hX,SELU_SCALEALPHA:()=>hK,applyActivation:()=>pT,assertAndGetBroadcastShape:()=>oA,assertAxesAreInnerMostDims:()=>oH,assertParamsConsistent:()=>hD,assignToTypedArray:()=>h8,axesAreInnerMostDims:()=>oW,calculateShapes:()=>pt,checkEinsumDimSizes:()=>cr,checkPadOnDimRoundingMode:()=>iY,combineLocations:()=>oV,combineRaggedTensorToTensorShapes:()=>hO,complexWithEvenIndex:()=>h4,complexWithOddIndex:()=>h6,computeConv2DInfo:()=>iP,computeConv3DInfo:()=>iB,computeDefaultPad:()=>iW,computeDilation2DInfo:()=>iO,computeOptimalWindowSize:()=>hW,computeOutAndReduceShapes:()=>oU,computeOutShape:()=>hM,computePool2DInfo:()=>iL,computePool3DInfo:()=>iz,convertConv2DDataFormat:()=>iX,decodeEinsumEquation:()=>ct,eitherStridesOrDilationsAreOne:()=>iq,expandShapeToKeepDim:()=>oG,exponent:()=>h9,exponents:()=>h7,fromStringArrayToUint8:()=>cS,fromUint8ToStringArray:()=>cI,getAxesPermutation:()=>oj,getBroadcastDims:()=>oE,getComplexWithIndex:()=>h5,getEinsumComputePath:()=>ca,getEinsumPermutation:()=>cn,getFusedBiasGradient:()=>pN,getFusedDyActivation:()=>pS,getImageCenter:()=>hV,getInnerMostAxes:()=>oK,getPermuted:()=>hG,getRaggedRank:()=>hz,getReductionAxes:()=>o$,getReshaped:()=>hU,getReshapedPermuted:()=>hH,getRowPartitionTypesHelper:()=>hL,getSliceBeginCoords:()=>hj,getSliceSize:()=>hq,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>co,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>cl,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>cu,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>ch,getSparseReshapeInputOutputMismatchErrorMessage:()=>cm,getSparseReshapeInputOutputMultipleErrorMessage:()=>cc,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>cp,getSparseReshapeNegativeOutputDimErrorMessage:()=>cd,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>cb,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>cf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>cg,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>cy,getUndoAxesPermutation:()=>oq,isIdentityPermutation:()=>cs,log:()=>rQ,mergeRealAndImagArrays:()=>h2,prepareAndValidate:()=>hp,prepareSplitSize:()=>ci,segment_util:()=>cx,shouldFuse:()=>p_,slice_util:()=>hd,splitRealAndImagArrays:()=>h3,stridesOrDilationsArePositive:()=>iK,tupleValuesAreOne:()=>ij,upcastType:()=>aL,validateDefaultValueShape:()=>hP,validateInput:()=>pe,validateUpdateShape:()=>u9,warn:()=>rJ}),function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(ki||(ki={}));var hB=30;function hW(e){return e<=hB?e:ej(e,Math.floor(Math.sqrt(e)))}function hV(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function hU(e,t,n,r=!0){let a=[];if(r)(a=a.concat(t.slice(0))).push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function hG(e,t,n=!0){let r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function hH(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function hj(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function hq(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var hK=1.7580993408473768,hX=1.0507009873554805,hY=.3275911,hZ=.254829592,hJ=-.284496736,hQ=1.421413741,h0=-1.453152027,h1=1.061405429;function h2(e,t){if(e.length!==t.length)throw Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function h3(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function h4(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function h6(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function h5(e,t){return{real:e[2*t],imag:e[2*t+1]}}function h8(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function h7(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function h9(e,t,n){let r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var ce=/->/g;function ct(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace(ce,"").length)/2;if(n<1)throw Error("Equations without an arrow are not supported.");if(n>1)throw Error('Equation must contain exactly one arrow ("->").');let[r,a]=e.split("->");eb(-1===r.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');let s=r.split(","),i=s.length;if(t!==i)throw Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<a.length;++e){let t=a[e];if(!s.some(e=>-1!==e.indexOf(t)))throw Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){let t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}let l=Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<s[e].length;++t)l[e].push(o.indexOf(s[e][t]))}let u=o.length,p=a.length,d=[];for(let e=p;e<u;++e)d.push(e);return{allDims:o,summedDims:d,idDims:l}}function cn(e,t){let n=Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;let r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return{permutationIndices:n=n.filter(e=>-1!==e),expandDims:r}}function cr(e,t,n){let r=Array(e);for(let e=0;e<n.length;++e){let a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:eb(r[t[e][n]]===a[n],()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`)}}function ca(e,t){let n=[],r=0;0===e.length&&e.push(-1),r=e.length+1;for(let e=0;e<r;++e)n.push([]);let a=[];for(let r=0;r<e.length;++r)for(let s of function(e,t){let n=[];for(let r=0;r<e.length;++r)(0===e[r].length||-1!==e[r].indexOf(t)||-1===t)&&n.push(r);return n}(t,e[r]))-1===a.indexOf(s)&&(n[r].push(s),a.push(s));return{path:e,steps:n}}function cs(e){return e.every((e,t)=>e===t)}function ci(e,t,n=0){let r=[];if("number"==typeof t)eb(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=Array(t).fill(e.shape[n]/t);else{eb(1>=t.reduce((e,t)=>(-1===t&&(e+=1),e),0),()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(-1!==a){let r=t.reduce((e,t)=>t>0?e+t:e);t[a]=e.shape[n]-r}eb(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function co(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function cl(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function cu(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function cp(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function cd(e,t){return`size ${e} must be non-negative, not ${t}`}function ch(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function cc(e,t){let n=ew(e),r=ew(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function cm(e,t){let n=ew(e),r=ew(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}function cf(){return"segment ids must be >= 0"}function cg(){return"segment ids are not increasing"}function cy(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function cb(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var cx={};function cv(e,t){let n=!1,r;for(e<=hB?(r=e,n=!0):r=ej(e,Math.floor(Math.sqrt(e)));!n;)r>t||r===e?n=!0:r=ej(e,r+1);return r}function cw(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function ck(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw Error(`batchDims (${r}) must be less than rank(x) (
    ${s}).`);if(n<r)throw Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);let i=e.shape[n],o=[],l=1,u=1,p=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),p*=e.shape[t];return{batchSize:l,sliceSize:p,outerSize:u,dimSize:i,outputShape:o}}function cI(e){try{return e.map(e=>aw(e))}catch(e){throw Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function cS(e){return e.map(e=>av(e))}L(cx,{collectGatherOpShapeInfo:()=>ck,computeOutShape:()=>cw,segOpComputeOptimalWindowSize:()=>cv});var cN={};L(cN,{nonMaxSuppressionV3Impl:()=>pH,nonMaxSuppressionV4Impl:()=>pj,nonMaxSuppressionV5Impl:()=>pq,whereImpl:()=>pp}),function(){for(let e of dB)d$(e)}();var cT={kernelName:te,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ik(e,uQ(ig(n,"float32"),-1))}}},c_=a8({avgPool3dGrad_:function(e,t,n,r,a,s){let i=a4(e,"dy","avgPool3dGrad"),o=a4(t,"input","avgPool3dGrad"),l=i,u=o,p=!1;4===o.rank&&(p=!0,l=iZ(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=iZ(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),eb(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),eb(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),iY("avgPool3dGrad",a,s);let d={dy:l,input:u},h=aX.runKernel(ty,d,{filterSize:n,strides:r,pad:a,dimRoundingMode:s});return p?iZ(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),cC=a8({avgPoolGrad_:function(e,t,n,r,a){let s=a4(e,"dy","avgPoolGrad"),i=a4(t,"input","avgPoolGrad");eb(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=iZ(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=iZ(s,[1,s.shape[0],s.shape[1],s.shape[2]])),eb(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),eb(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let p={dy:l,input:o},d=aX.runKernel(tf,p,{filterSize:n,strides:r,pad:a});return u?iZ(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),cE={kernelName:tC,inputsToSave:["x"],gradFunc:cT.gradFunc},c$=a8({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=iZ(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=iZ(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),eb(5===s.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),eb(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),eb(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),eb(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),eb(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:s,dy:i};return aX.runKernel(tD,o,{strides:r,pad:a,filterShape:n})}});function cA(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function cF(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var cR=a8({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){return aX.runKernel(nN,{x:e,y:t,dy:n},{depthRadius:r,bias:a,alpha:s,beta:i})}});function cD(e,t,n,r){return t.rank<n.rank&&(t=iZ(t,oG(t.shape,r))),e.rank<n.rank&&(e=iZ(e,oG(e.shape,r))),{x:()=>ik(e,ig(oF(n,t),e.dtype))}}var cM={kernelName:n_,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let{reductionIndices:r}=n,a=t[0],s=t[1],i=eF(r,a.shape),o=cD(e,s,a,i);return{x:()=>o.x()}}},cO=a8({maxPool3dGrad_:function(e,t,n,r,a,s,i){let o=a4(e,"dy","maxPool3dGrad"),l=a4(t,"input","maxPool3dGrad"),u=a4(n,"output","maxPool3dGrad"),p=o,d=l,h=u,c=!1;4===l.rank&&(c=!0,p=iZ(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=iZ(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=iZ(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),eb(5===p.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),eb(5===d.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),eb(5===h.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),iY("maxPool3dGrad",s,i);let m={dy:p,input:d,output:h},f=aX.runKernel(nF,m,{filterSize:r,strides:a,pad:s,dimRoundingMode:i});return c?iZ(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),cL=a8({maxPoolGrad_:function(e,t,n,r,a,s,i){let o=a4(e,"dy","maxPoolGrad"),l=a4(t,"input","maxPoolGrad"),u=a4(n,"output","maxPoolGrad");return eb(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),eb(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),eb(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),iY("maxPoolGrad",s,i),aX.runKernel(n$,{dy:o,input:l,output:u},{filterSize:r,strides:a,pad:s,dimRoundingMode:i})}}),cz={kernelName:nX,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>i3(e,s,r.shape)}}},cP={kernelName:rx,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>i5(e,r,a)}}},cB={kernelName:rv,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>i0(e,r)}}};for(let e of[cT,{kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=o0(ig(n,"float32"));return lw(iw(e,oQ(lS(oJ(1),t))))}}}},{kernelName:tn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iw(e,oQ(lS(o0(ig(n,"float32")),1)))}}},{kernelName:tr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=oA(n.shape,r.shape);return{a:()=>{let t=e,r=o$(n.shape,a);return r.length>0&&(t=o1(t,r)),iZ(t,n.shape)},b:()=>{let t=e,n=o$(r.shape,a);return n.length>0&&(t=o1(t,n)),iZ(t,r.shape)}}}},{kernelName:ta,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}},{kernelName:to,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oD(n)}}},{kernelName:tl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oD(n)}}},{kernelName:tu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iw(e,oQ(lS(oJ(1),o0(ig(n,"float32")))))}}},{kernelName:tp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iw(e,oQ(ix(oJ(1),o0(ig(n,"float32")))))}}},{kernelName:tc,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=oA(n.shape,r.shape);return{a:()=>{let t=ix(o0(n),o0(r)),s=ik(e,iw(r,t)),i=o$(n.shape,a);return i.length>0&&(s=o1(s,i)),iZ(s,n.shape)},b:()=>{let t=ix(o0(n),o0(r)),s=lw(ik(e,iw(n,t))),i=o$(r.shape,a);return i.length>0&&(s=o1(s,i)),iZ(s,r.shape)}}}},{kernelName:td,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iw(e,ix(o0(ig(n,"float32")),1))}}},{kernelName:th,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iw(e,lS(oJ(1),o0(ig(n,"float32"))))}}},{kernelName:tg,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>c_(e,r,a,s,i,o)}}},{kernelName:tm,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>cC(e,r,a,s,i)}}},{kernelName:tb,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>i1(e,a,!1,!1),b:()=>i1(e,r,!0,!1)}:s&&!i?{a:()=>i1(a,e,!1,!0),b:()=>i1(r,e,!1,!1)}:{a:()=>i1(a,e,!0,!0),b:()=>i1(e,r,!0,!0)}:{a:()=>i1(e,a,!1,!0),b:()=>i1(r,e,!0,!1)}}},{kernelName:tx,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>l2(e,r,a)}}},{kernelName:tk,gradFunc:(e,t,n)=>{let r=n.inputShape,a=n.shape,s=Array.from(a);for(let e=r.length-1;e>=0;e--)if(r[e]===a[e])s[e]=1;else if(1!==r[e])throw Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let i=[];for(let e=0;e<s.length;e++)s[e]>1&&i.push(e);return{x:()=>o1(e,i,!0)}}},{kernelName:tS,gradFunc:e=>({x:()=>e.clone()})},{kernelName:tN,gradFunc:e=>({x:()=>oD(e)})},{kernelName:tT,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>oR(l_(ln(r,a),lu(r,s)),e,oD(e))}}},cE,{kernelName:tE,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map(e=>e.shape),{axis:a}=n,s=eF(a,t[0].shape)[0];return uK(e,r.map(e=>e[s]),s).map(e=>()=>e)}},{kernelName:tF,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>oh(e,a,s,i,o,1,l),filter:()=>pI(e,r,a.shape,s,i,o,l)}}},{kernelName:t$,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return eb(ij(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>om(r.shape,e,a,i,o,l),filter:()=>pI(r,e,a.shape,i,o,l)}}},{kernelName:tR,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;eb(ij(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[i,o]=t;return{x:()=>oy(i.shape,e,o,a,s),filter:()=>c$(i,e,o.shape,a,s)}}},{kernelName:tO,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ik(lw(uz(ig(n,"float32"))),e)}}},{kernelName:tL,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ik(uP(ig(n,"float32")),e)}}},{kernelName:tP,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let t=oj([a],r.rank),n=ok(e,a,s,!i);return null!=t&&(n=pc(n,t)),n}}}},{kernelName:tU,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;eb(ij(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,u]=t;return eb(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),eb(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),eb(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),eb(iq(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),iY("depthwiseConv2d",s,i),{x:()=>p$(l.shape,e,u,a,s,o,i),filter:()=>pE(l,e,u.shape,a,s,o,i)}}},{kernelName:tq,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>aX.runKernel(tK,s,n),filter:()=>aX.runKernel(tX,i,n)}}},{kernelName:tZ,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=oA(n.shape,r.shape);return{a:()=>{let t=iw(e,ig(r,"float32")),s=o$(n.shape,a);return s.length>0?iZ(o1(t,s),n.shape):t},b:()=>{let t=ik(e,ig(n,"float32")),s=o$(r.shape,a);return s.length>0&&(t=iZ(o1(t,s),r.shape)),lw(iw(t,ig(o0(r),"float32")))}}}},{kernelName:tQ,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>aX.runKernel(t0,r)}}},{kernelName:t1,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=ik(o4(lw(o0(n))),2/Math.sqrt(Math.PI));return{x:()=>ik(e,r)}}},{kernelName:t3,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ik(e,n)}}},{kernelName:t4,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>iZ(e,n.shape)}}},{kernelName:t6,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ik(e,o4(n))}}},{kernelName:ne,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=oA(n.shape,r.shape);return{a:()=>{let t=iw(e,ig(r,"float32")),s=o$(n.shape,a);return s.length>0?iZ(o1(t,s),n.shape):t},b:()=>{let t=ik(e,ig(n,"float32")),s=o$(r.shape,a);return s.length>0&&(t=iZ(o1(t,s),r.shape)),lw(iw(t,ig(o0(r),"float32")))}}}},{kernelName:t9,gradFunc:e=>({x:()=>oD(e)})},{kernelName:nt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?oJ(1):o,u=o$(s.shape,a.shape),p=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)p.push(a.shape[e]);p.push(1)}let d=lS(a,s),h=ik(e,l),c=uR(ix(i,oJ(r))),m=ik(ik(ik(c,c),c),oJ(-.5));return{x:()=>1===s.rank?iZ(ik(ik(e,o8(iZ(c,[1,1,1,s.shape[0]]),p)),l),a.shape):iZ(ik(ik(e,c),l),a.shape),mean:()=>{let e=ik(ik(c,oJ(-1)),h);return 1===s.rank&&(e=o1(e,u)),iZ(e,s.shape)},variance:()=>{let e=ik(ik(m,d),h);return 1===s.rank&&(e=o1(e,u)),iZ(e,s.shape)},scale:()=>{let t=ik(d,c),n=ik(e,t);return 1===s.rank&&(n=o1(n,u)),iZ(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=o1(t,u)),iZ(t,s.shape)}}}},{kernelName:nn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s,batchDims:i}=n,o=eF(s,r.shape)[0],l=(e,t,n)=>()=>{let r=e.shape,a=t.size,i=r.slice(0,o),l=i.length,u=r.slice(s,r.length).slice(1),p=u.length,d=cA(0,l),h=cA(l+1,l+1+p),c=iZ(n,cF([i,[a],u])),m=iZ(t,[a]),f=cF([[l],d,h]),g=pi(pc(c,f),m,e.shape[o]);return pc(g,oq(f))};if(1!==i)return{x:l(r,a,e),indices:()=>a};{let t=r.shape[0],n=r.split(t,0);return{x:()=>uJ(n.map((t,n)=>l(t,a.slice(n,1),e.slice(n,1))())).reshape(r.shape),indices:()=>a}}}},{kernelName:ns,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>oD(n),b:()=>oD(r)}}},{kernelName:ni,gradFunc:e=>({x:()=>ig(e,"float32")})},{kernelName:nu,gradFunc:e=>({x:()=>oD(e)})},{kernelName:np,gradFunc:e=>({x:()=>oD(e)})},{kernelName:nd,gradFunc:e=>({x:()=>oD(e)})},{kernelName:nh,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=lt(r,0);return{x:()=>oR(s,e,ik(e,a))}}},{kernelName:ny,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iw(e,ix(n,1))}}},{kernelName:ng,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iw(e,ig(n,"float32"))}}},{kernelName:nk,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let t=o4(r);return lS(e,ik(o1(e,a,!0),t))}}}},{kernelName:nS,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>cR(r,a,e,s,i,o,l)}}},cM,cM,{kernelName:nC,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>ik(e,ig(ln(n,r),"float32")),b:()=>ik(e,ig(ll(n,r),"float32"))}}},{kernelName:nA,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>cO(e,r,a,s,i,o,l)}}},{kernelName:nE,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>cL(e,r,a,s,i,o)}}},{kernelName:nD,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=eF(a,r.shape),i=ew(oU(r.shape,s)[1]);return{x:()=>{let t=r.shape.slice();return s.forEach(e=>{t[e]=1}),iw(ik(iZ(e,t),lP(r.shape,"float32")),i)}}}},{kernelName:nM,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let{axis:r}=n,[a,s]=t,i=eF(r,a.shape),o=cD(e,s,a,i);return{x:()=>o.x()}}},{kernelName:nO,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>ik(e,ig(lu(n,r),"float32")),b:()=>ik(e,ig(lt(n,r),"float32"))}}},{kernelName:nL,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>i3(e,s,r.shape)}}},{kernelName:nz,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=oA(n.shape,r.shape);return{a:()=>{let t=o$(n.shape,a);return t.length>0?iZ(o1(e,t),n.shape):e},b:()=>{let t=ik(e,lw(o9(iw(n,r)))),s=o$(r.shape,a);return s.length>0?iZ(o1(t,s),r.shape):t}}}},{kernelName:nB,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=oA(n.shape,r.shape);return{a:()=>{let t=ik(e,ig(r,"float32")),s=o$(n.shape,a);return s.length>0?iZ(o1(t,s),n.shape):t},b:()=>{let t=ik(e,ig(n,"float32")),s=o$(r.shape,a);return s.length>0?iZ(o1(t,s),r.shape):t}}}},{kernelName:nW,gradFunc:e=>({x:()=>lw(e)})},{kernelName:nq,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>lz(n.shape,"float32")}}},{kernelName:nj,gradFunc:e=>({x:()=>oD(e)})},{kernelName:nK,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return po(e,r).map(e=>()=>e)}},cz,cz,{kernelName:nZ,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=oA(n.shape,r.shape);return{a:()=>{let t=ig(r,"float32"),a=ik(e,ik(t,oZ(n,lS(t,oJ(1))))),i=o$(n.shape,s);return i.length>0&&(a=o1(a,i)),iZ(a,n.shape)},b:()=>{let t=ik(e,ik(a,oR(lt(n,0),lh(n),oD(n)))),i=o$(r.shape,s);return i.length>0&&(t=o1(t,i)),iZ(t,r.shape)}}}},{kernelName:nJ,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=lt(n,0);return{x:()=>oR(a,e,ik(e,r)),alpha:()=>{let t=oR(a,oD(e),ik(e,n)),s=o$(r.shape,e.shape);return s.length>0&&(t=o1(t,s)),iZ(t,r.shape)}}}},{kernelName:nQ,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return s=null==a?r.shape.map((e,t)=>t):"number"==typeof a?[a]:a,{x:()=>(function(e,t,n){var r;let a,s,i,o=e.shape.length,l=o-n.length,u=hR.getAxesPermutation(n,o),p=e;null!=u&&(p=pc(e,u));let d=p.shape.slice(),h=d.splice(o-n.length,n.length).reduce((e,t)=>e*t,1);d.push(h);let c=((a=(r=p.reshape(d)).shape.slice())[l]=1,s=iZ(t,a),i=ik(ow(r,l,!0,!1),ow(r,l,!0,!0)),ik(s,i));return c=c.reshape(p.shape),null!=u&&(c=pc(c,hR.getUndoAxesPermutation(u))),c})(r,e,s)}}},{kernelName:n6,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iw(e,lw(o0(n)))}}},{kernelName:rn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=ik(lu(n,6),uQ(n));return{x:()=>ik(e,ig(r,"float32"))}}},{kernelName:n5,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ik(e,ig(uQ(n),"float32"))}}},{kernelName:n8,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iZ(e,n.shape)}}},{kernelName:re,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>aX.runKernel(rt,a,n)}}},{kernelName:n7,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>aX.runKernel(n9,a,n)}}},{kernelName:rr,gradFunc:(e,t,n)=>{let{dims:r}=n,a=eF(r,e.shape);return{x:()=>u_(e,a)}}},{kernelName:ra,gradFunc:e=>({x:()=>oD(e)})},{kernelName:rs,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>lw(iw(e,ik(oZ(n,1.5),2)))}}},{kernelName:ru,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>ig(oD(n),"float32"),t:()=>ik(e,ig(n,e.dtype)),e:()=>ik(e,ig(lC(n),e.dtype))}}},{kernelName:rp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=lt(n,oJ(0)),r=oJ(hK);return oR(t,ik(e,oJ(hX)),ik(ik(e,r),o4(ig(n,"float32"))))}}}},{kernelName:rf,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ik(e,ik(n,lS(oJ(1),n)))}}},{kernelName:rm,gradFunc:e=>({x:()=>oD(e)})},{kernelName:rh,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ik(ox(ig(n,"float32")),e)}}},{kernelName:rc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ik(ov(ig(n,"float32")),e)}}},{kernelName:rd,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=hN(r,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>lZ(e,u)}}},{kernelName:rw,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=ik(e,r);return{logits:()=>lS(s,ik(o1(s,[a],!0),r))}}},{kernelName:rg,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ik(e,i2(n))}}},cP,cP,cB,cB,{kernelName:ry,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iw(e,ik(oQ(ig(n,"float32")),2))}}},{kernelName:r_,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=oJ(2);return{a:()=>ik(e,ik(a,lS(n,r))),b:()=>ik(e,ik(a,lS(r,n)))}}},{kernelName:rC,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ik(e,ik(ig(n,"float32"),2))}}},{kernelName:rj,gradFunc:e=>({x:()=>oD(e)})},{kernelName:rD,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=oA(n.shape,r.shape);return{a:()=>{let t=e,r=o$(n.shape,a);return r.length>0&&(t=o1(t,r)),iZ(t,n.shape)},b:()=>{let t=e,n=o$(r.shape,a);return n.length>0&&(t=o1(t,n)),iZ(lw(t),r.shape)}}}},{kernelName:rb,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;eF(s,r.shape).forEach(e=>{a[e]=1});let i=ik(iZ(e,a),lP(r.shape,"float32"));return{x:()=>i}}},{kernelName:rM,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iw(e,o0(ox(n)))}}},{kernelName:rO,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ik(lS(oJ(1),o0(n)),e)}}},{kernelName:rL,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let t=oD(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=ix(t,i3(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=ix(t,i3(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=ix(t,i3(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(4===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=ix(t,i3(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return t}}}},{kernelName:rB,gradFunc:(e,t,n)=>{let{perm:r}=n,a=oq(r);return{x:()=>pc(e,a)}}},{kernelName:rV,gradFunc:(e,t,n)=>{let{axis:r}=n;return{value:()=>uJ(e,r)}}},{kernelName:rU,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>(function(e,t){let n=le(e,lO(t,oD(t))),r=ln(t,oJ(0,"int32")),a=n.rank-r.rank;for(let e=0;e<a;++e)r=o6(r,e+1);r=l_(r,lP(n.shape,"bool"));let s=oD(n);return oR(r,n,s)})(e,n)}}},{kernelName:rH,gradFunc:e=>({x:()=>oD(e)})}])r5(e);aR().prototype.abs=function(){return this.throwIfDisposed(),iI(this)},aR().prototype.acos=function(){return this.throwIfDisposed(),iS(this)},aR().prototype.acosh=function(){return this.throwIfDisposed(),iN(this)},aR().prototype.add=function(e){return this.throwIfDisposed(),ix(this,e)},aR().prototype.all=function(e,t){return this.throwIfDisposed(),i_(this,e,t)},aR().prototype.any=function(e,t){return this.throwIfDisposed(),iC(this,e,t)},aR().prototype.argMax=function(e){return this.throwIfDisposed(),iE(this,e)},aR().prototype.argMin=function(e){return this.throwIfDisposed(),i$(this,e)},aR().prototype.asScalar=function(){return this.throwIfDisposed(),eb(1===this.size,()=>"The array must have only 1 element."),iZ(this,[])},aR().prototype.asType=function(e){return this.throwIfDisposed(),ig(this,e)},aR().prototype.as1D=function(){return this.throwIfDisposed(),iZ(this,[this.size])},aR().prototype.as2D=function(e,t){return this.throwIfDisposed(),iZ(this,[e,t])},aR().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),iZ(this,[e,t,n])},aR().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),iZ(this,[e,t,n,r])},aR().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),iZ(this,[e,t,n,r,a])},aR().prototype.asin=function(){return this.throwIfDisposed(),iA(this)},aR().prototype.asinh=function(){return this.throwIfDisposed(),iF(this)},aR().prototype.atan=function(){return this.throwIfDisposed(),iR(this)},aR().prototype.atan2=function(e){return this.throwIfDisposed(),iD(this,e)},aR().prototype.atanh=function(){return this.throwIfDisposed(),iM(this)},aR().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),iJ(this,e,t,n,r)},aR().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),i5(this,e,t)},aR().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),i8(this,e,t,n,r,a)},aR().prototype.broadcastTo=function(e){return this.throwIfDisposed(),oa(this,e)},aR().prototype.cast=function(e){return this.throwIfDisposed(),ig(this,e)},aR().prototype.ceil=function(){return this.throwIfDisposed(),os(this)},aR().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),oo(this,e,t)},aR().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof aF&&(e=[e]),i0([this,...e],t)},aR().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),oc(this,e,t,n,r,a,s)},aR().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),of(this,e,t,n,r,a)},aR().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),oh(this,e,t,n,r,a,s)},aR().prototype.cos=function(){return this.throwIfDisposed(),ox(this)},aR().prototype.cosh=function(){return this.throwIfDisposed(),ov(this)},aR().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),ow(this,e,t,n)},aR().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),ok(this,e,t,n)},aR().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),oS(this,e,t)},aR().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),oN(this,e,t,n,r,a,s)},aR().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),o_(this,e,t,n,r,a)},aR().prototype.divNoNan=function(e){return this.throwIfDisposed(),oM(this,e)},aR().prototype.div=function(e){return this.throwIfDisposed(),iw(this,e)},aR().prototype.dot=function(e){return this.throwIfDisposed(),oO(this,e)},aR().prototype.elu=function(){return this.throwIfDisposed(),oz(this)},aR().prototype.equal=function(e){return this.throwIfDisposed(),oF(this,e)},aR().prototype.erf=function(){return this.throwIfDisposed(),oB(this)},aR().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),o3(this,e,t)},aR().prototype.exp=function(){return this.throwIfDisposed(),o4(this)},aR().prototype.expandDims=function(e){return this.throwIfDisposed(),o6(this,e)},aR().prototype.expm1=function(){return this.throwIfDisposed(),o5(this)},aR().prototype.fft=function(){return this.throwIfDisposed(),uH(this)},aR().prototype.flatten=function(){return this.throwIfDisposed(),iZ(this,[this.size])},aR().prototype.floor=function(){return this.throwIfDisposed(),o9(this)},aR().prototype.floorDiv=function(e){return this.throwIfDisposed(),iv(this,e)},aR().prototype.gather=function(e,t,n){return this.throwIfDisposed(),le(this,e,t,n)},aR().prototype.greaterEqual=function(e){return this.throwIfDisposed(),ln(this,e)},aR().prototype.greater=function(e){return this.throwIfDisposed(),lt(this,e)},aR().prototype.ifft=function(){return this.throwIfDisposed(),uj(this)},aR().prototype.irfft=function(){return this.throwIfDisposed(),uq(this)},aR().prototype.isFinite=function(){return this.throwIfDisposed(),la(this)},aR().prototype.isInf=function(){return this.throwIfDisposed(),ls(this)},aR().prototype.isNaN=function(){return this.throwIfDisposed(),li(this)},aR().prototype.leakyRelu=function(e){return this.throwIfDisposed(),lo(this,e)},aR().prototype.lessEqual=function(e){return this.throwIfDisposed(),lu(this,e)},aR().prototype.less=function(e){return this.throwIfDisposed(),ll(this,e)},aR().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),ld(this,e,t,n,r)},aR().prototype.logSigmoid=function(){return this.throwIfDisposed(),lI(this)},aR().prototype.logSoftmax=function(e){return this.throwIfDisposed(),lN(this,e)},aR().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),lT(this,e,t)},aR().prototype.log=function(){return this.throwIfDisposed(),lh(this)},aR().prototype.log1p=function(){return this.throwIfDisposed(),lc(this)},aR().prototype.logicalAnd=function(e){return this.throwIfDisposed(),l_(this,e)},aR().prototype.logicalNot=function(){return this.throwIfDisposed(),lC(this)},aR().prototype.logicalOr=function(e){return this.throwIfDisposed(),lE(this,e)},aR().prototype.logicalXor=function(e){return this.throwIfDisposed(),l$(this,e)},aR().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),i1(this,e,t,n)},aR().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),lR(this,e,t,n,r)},aR().prototype.max=function(e,t){return this.throwIfDisposed(),oX(this,e,t)},aR().prototype.maximum=function(e){return this.throwIfDisposed(),lO(this,e)},aR().prototype.mean=function(e,t){return this.throwIfDisposed(),lL(this,e,t)},aR().prototype.min=function(e,t){return this.throwIfDisposed(),oY(this,e,t)},aR().prototype.minimum=function(e){return this.throwIfDisposed(),lW(this,e)},aR().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),lV(this,e,t)},aR().prototype.mod=function(e){return this.throwIfDisposed(),lU(this,e)},aR().prototype.mul=function(e){return this.throwIfDisposed(),ik(this,e)},aR().prototype.neg=function(){return this.throwIfDisposed(),lw(this)},aR().prototype.norm=function(e,t,n){return this.throwIfDisposed(),o2(this,e,t,n)},aR().prototype.notEqual=function(e){return this.throwIfDisposed(),lq(this,e)},aR().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),lK(this,e,t,n)},aR().prototype.onesLike=function(){return this.throwIfDisposed(),lX(this)},aR().prototype.pad=function(e,t){return this.throwIfDisposed(),lZ(this,e,t)},aR().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),l3(this,e,t,n,r,a,s)},aR().prototype.pow=function(e){return this.throwIfDisposed(),oZ(this,e)},aR().prototype.prelu=function(e){return this.throwIfDisposed(),l4(this,e)},aR().prototype.prod=function(e,t){return this.throwIfDisposed(),l6(this,e,t)},aR().prototype.reciprocal=function(){return this.throwIfDisposed(),uS(this)},aR().prototype.relu=function(){return this.throwIfDisposed(),uN(this)},aR().prototype.relu6=function(){return this.throwIfDisposed(),uT(this)},aR().prototype.reshapeAs=function(e){return this.throwIfDisposed(),iZ(this,e.shape)},aR().prototype.reshape=function(e){return this.throwIfDisposed(),iZ(this,e)},aR().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),p1(this,e,t,n)},aR().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),p2(this,e,t,n)},aR().prototype.reverse=function(e){return this.throwIfDisposed(),u_(this,e)},aR().prototype.rfft=function(){return this.throwIfDisposed(),uX(this)},aR().prototype.round=function(){return this.throwIfDisposed(),uF(this)},aR().prototype.rsqrt=function(){return this.throwIfDisposed(),uR(this)},aR().prototype.selu=function(){return this.throwIfDisposed(),uD(this)},aR().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),uM(this,e,t,n,r,a,s)},aR().prototype.sigmoid=function(){return this.throwIfDisposed(),i2(this)},aR().prototype.sign=function(){return this.throwIfDisposed(),uL(this)},aR().prototype.sin=function(){return this.throwIfDisposed(),uz(this)},aR().prototype.sinh=function(){return this.throwIfDisposed(),uP(this)},aR().prototype.slice=function(e,t){return this.throwIfDisposed(),i3(this,e,t)},aR().prototype.softmax=function(e){return this.throwIfDisposed(),uG(this,e)},aR().prototype.softplus=function(){return this.throwIfDisposed(),lk(this)},aR().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),l2(this,e,t)},aR().prototype.split=function(e,t){return this.throwIfDisposed(),uK(this,e,t)},aR().prototype.sqrt=function(){return this.throwIfDisposed(),oQ(this)},aR().prototype.square=function(){return this.throwIfDisposed(),o0(this)},aR().prototype.squaredDifference=function(e){return this.throwIfDisposed(),uY(this,e)},aR().prototype.squeeze=function(e){return this.throwIfDisposed(),uZ(this,e)},aR().prototype.stack=function(e,t){return this.throwIfDisposed(),uJ(e instanceof aF?[this,e]:[this,...e],t)},aR().prototype.step=function(e){return this.throwIfDisposed(),uQ(this,e)},aR().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),u0(this,e,t,n,r,a,s,i,o)},aR().prototype.sub=function(e){return this.throwIfDisposed(),lS(this,e)},aR().prototype.sum=function(e,t){return this.throwIfDisposed(),o1(this,e,t)},aR().prototype.tan=function(){return this.throwIfDisposed(),u1(this)},aR().prototype.tanh=function(){return this.throwIfDisposed(),i4(this)},aR().prototype.tile=function(e){return this.throwIfDisposed(),o8(this,e)},aR().prototype.toBool=function(){return this.throwIfDisposed(),ig(this,"bool")},aR().prototype.toFloat=function(){return this.throwIfDisposed(),ig(this,"float32")},aR().prototype.toInt=function(){return this.throwIfDisposed(),ig(this,"int32")},aR().prototype.topk=function(e,t){return this.throwIfDisposed(),pr(this,e,t)},aR().prototype.transpose=function(e){return this.throwIfDisposed(),pc(this,e)},aR().prototype.unique=function(e){return this.throwIfDisposed(),ps(this,e)},aR().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),pi(this,e,t)},aR().prototype.unstack=function(e){return this.throwIfDisposed(),po(this,e)},aR().prototype.where=function(e,t){return this.throwIfDisposed(),oR(e,this,t)},aR().prototype.zerosLike=function(){return this.throwIfDisposed(),oD(this)};var cW=class e extends Error{constructor(t){super(t),Object.setPrototypeOf(this,e.prototype)}},cV=class e extends Error{constructor(t){super(t),Object.setPrototypeOf(this,e.prototype)}},cU=class e extends Error{constructor(t){super(t),Object.setPrototypeOf(this,e.prototype)}},cG=class e extends Error{constructor(t){super(t),Object.setPrototypeOf(this,e.prototype)}},cH=class e extends Error{constructor(t){super(t),Object.setPrototypeOf(this,e.prototype)}},cj=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}};function cq(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=Array(t);return n.fill(e),n}}function cK(e,t){if(!e)throw new cH(t)}function cX(e,t){let n=0;for(let r of e)r===t&&n++;return n}function cY(e){return 1===e.length?e[0]:e}function cZ(e){return Array.isArray(e)?e:[e]}function cJ(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function cQ(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var c0={};function c1(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function c2(e,t={},n={},r="object",a=!1){if("string"==typeof e){let a;if(e in n)a=n[e];else if(e in c0)a=c0[e];else if(null==(a=t[e]))throw new cU(`Unknown ${r}: ${e}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{if(null==e.className||null==e.config)throw new cU(`${r}: Improper config format: ${JSON.stringify(e)}.
'className' and 'config' must set.`);let s=e.className,i,o;if(s in n?[i,o]=n[s]:s in c0?[i,o]=c0.className:s in t&&([i,o]=t[s]),null==i)throw new cU(`Unknown ${r}: ${s}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let t={};for(let e of Object.keys(c0))t[e]=c0[e];for(let e of Object.keys(n))t[e]=n[e];e.config.customObjects=t;let r=Object.assign({},c0);for(let e of Object.keys(n))c0[e]=n[e];!function e(t){if(!(null==t||"object"!=typeof t)){if(Array.isArray(t))t.forEach(t=>e(t));else for(let n of Object.keys(t)){let r=t[n];null!=r&&"object"==typeof r&&(Array.isArray(r)||"ndarray"!==r.type||"number"!=typeof r.value?e(r):t[n]=r.value)}}}(e.config);let s=o(i,e.config,n,a);return c0=Object.assign({},r),s}{let t=Object.assign({},c0);for(let e of Object.keys(n))c0[e]=n[e];let r=new i(e.config);return c0=Object.assign({},t),r}}}function c3(e,t){return -1*(e<t?-1:e>t?1:0)}function c4(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function c6(e,t,n){if(null!=n&&0>e.indexOf(n))throw new cU(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function c5(e,t,n=0,r=1/0){return cK(n>=0),cK(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function c8(e,t){Array.isArray(e)?(at.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((e,n)=>c8(e,`element ${n+1} of ${t}`))):at.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${function e(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>e(t)).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}(e)}.`)}function c7(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}var c9=0,me={};function mt(e=""){return e in me||(me[e]=0),me[e]+=1,e+me[e].toString()}var mn=["channelsFirst","channelsLast"],mr=["nearest","bilinear"],ma=["valid","same","causal"],ms=["max","avg"],mi=["sum","mul","concat","ave"],mo=new Map;function ml(e){c6(mn,"DataFormat",e)}function mu(e){c6(ma,"PaddingMode",e)}function mp(e){c6(ms,"PoolMode",e)}var md=[];function mh(e,t){md.push(e);try{let e=t();return md.pop(),e}catch(e){throw md.pop(),e}}function mc(e){if(!mg(e))throw Error("Not a valid tensor name: '"+e+"'");return(0===md.length?"":md.join("/")+"/")+e}function mm(e){if(!mg(e))throw Error("Not a valid tensor name: '"+e+"'");mo.has(e)||mo.set(e,0);let t=mo.get(e);if(mo.set(e,mo.get(e)+1),!(t>0))return e;{let n=`${e}_${t}`;return mo.set(n,1),n}}var mf=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function mg(e){return!!e.match(mf)}function my(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function mb(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function mx(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function mv(e,t){if(t<e)throw new cU(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function mw(){return null==ko&&(ko=sk().epsilon()),ko}function mk(){return"channelsLast"}function mI(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),iZ(e,n)}function mS(e,t,n){return sd(()=>{switch(e.rank){case 1:return uB(e,t,n);case 2:return uW(e,[t,0],[n,e.shape[1]]);case 3:return uV(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return uU(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return i3(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return i3(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new cU(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function mN(e,t,n){return sd(()=>{switch(e.rank){case 1:return uB(e,t,n);case 2:return uW(e,[0,t],[e.shape[0],n]);case 3:return uV(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return uU(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new cU(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function mT(e,t,n,r){return sd(()=>{switch(e.rank){case 1:return uB(e,t,n);case 2:switch(r){case 1:return mS(e,t,n);case 2:return mN(e,t,n);default:throw new cU(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return mS(e,t,n);case 2:return uV(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return mN(e,t,n);default:throw new cU(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return mS(e,t,n);case 2:return uU(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return uU(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return mN(e,t,n);default:throw new cU(`The axis is not within the rank of the tensor ${r}`)}default:throw new cU(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function m_(e,t=-1){let n;return t<0&&(t=0!==(n=e[0].rank)?n:0),t===e[0].rank&&(t=-1),i0(e,t)}function mC(e,t){switch(e.rank){case 1:return ol([e,t]);case 2:return ou([e,t],0);case 3:return op([e,t],0);case 4:return od([e,t],0);default:throw new cU(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function mE(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new cU(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return o8(e,t)}function m$(e,t=0,n=1,r,a){return ub(e,t,n,r,a)}function mA(e,t,n,r){if(e.rank<2||t.rank<2)throw new cG(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new cG(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return pk.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?mR(e.rank,r,mk()):null,activation:n});{let a=e.shape.slice();e=iZ(e,[-1,a.pop()]);let s=t.shape.slice(),i=s.pop(),o=s.pop(),l=[...s,i],u=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=iZ(pc(t,u),[o,-1]);let p=[...a,...l];return iZ(pk.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?mR(e.rank,r,mk()):null,activation:n}),p)}}function mF(e,t,n){return sd(()=>le(e,t=Array.isArray(t)?u2(t,"int32"):ig(t,"int32"),n))}function mR(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new cU(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?iZ(t,[1,r[0],1,1,1]):iZ(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?iZ(t,[1,1,1,1,r[0]]):iZ(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?iZ(t,[1,r[0],1,1]):iZ(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?iZ(t,[1,1,1,r[0]]):iZ(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?iZ(t,[1,r[0],1]):iZ(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?iZ(t,[1,1,r[0]]):iZ(t,[1].concat(r))}else if(e<3)return t;throw new cU(`Unsupported input rank by biasAdd: ${t.rank}`)}function mD(e,t,n){return sd(()=>(null==n&&(n=mk()),ml(n),ix(e,mR(e.rank,t,n))))}function mM(e,t,n=!1){return n?e():t()}var mO=["fanIn","fanOut","fanAvg"],mL=["normal","uniform","truncatedNormal"],mz=class extends dN.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},mP=class extends mz{apply(e,t){return lz(e,t)}};mP.className="Zeros",dN.registerClass(mP);var mB=class extends mz{apply(e,t){return lP(e,t)}};mB.className="Ones",dN.registerClass(mB);var mW=class extends mz{constructor(e){if(super(),"object"!=typeof e)throw new cU(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new cU(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return sd(()=>ik(oJ(this.value),lP(e,t)))}getConfig(){return{value:this.value}}};mW.className="Constant",dN.registerClass(mW);var mV=class extends mz{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return uv(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};mV.className="RandomUniform",dN.registerClass(mV);var mU=class extends mz{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new cG(`randomNormal does not support dType ${t}.`);return m$(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};mU.className="RandomNormal",dN.registerClass(mU);var mG=class extends mz{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new cG(`truncatedNormal does not support dType ${t}.`);return pa(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};mG.className="TruncatedNormal",dN.registerClass(mG);var mH=class extends mz{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return sd(()=>{if(2!==e.length||e[0]!==e[1])throw new cU("Identity matrix initializer can only be used for 2D square matrices.");return ik(this.gain,o7(e[0]))})}getConfig(){return{gain:this.gain}}};mH.className="Identity",dN.registerClass(mH);var mj=class extends mz{constructor(e){if(super(),e.scale<0)throw new cU(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,c6(mO,"FanMode",this.mode),this.distribution=null==e.distribution?"normal":e.distribution,c6(mL,"Distribution",this.distribution),this.seed=e.seed}apply(e,t){let n=function(e,t="channelsLast"){let n,r;if(ml(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=my(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){let t=my(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{let t=my(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){let n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new cG(`${this.getClassName()} does not support dType ${t}.`);return pa(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return uv(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};mj.className="VarianceScaling",dN.registerClass(mj);var mq=class extends mj{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return mj.className}};mq.className="GlorotUniform",dN.registerClass(mq);var mK=class extends mj{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return mj.className}};mK.className="GlorotNormal",dN.registerClass(mK);var mX=class extends mj{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return mj.className}};mX.className="HeNormal",dN.registerClass(mX);var mY=class extends mj{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return mj.className}};mY.className="HeUniform",dN.registerClass(mY);var mZ=class extends mj{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return mj.className}};mZ.className="LeCunNormal",dN.registerClass(mZ);var mJ=class extends mj{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return mj.className}};mJ.className="LeCunUniform",dN.registerClass(mJ);var mQ=class extends mz{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return sd(()=>{if(e.length<2)throw new cG("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw TypeError(`Unsupported data type ${t}.`);let n=at.sizeFromShape(e.slice(0,-1)),r=e[e.length-1],a=n*r;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);let s=m$([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),i=dw.qr(s,!1),o=i[0];return o=ik(o,i[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]).sign()),n<r&&(o=o.transpose()),ik(oJ(this.gain),o.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}};mQ.className="Orthogonal",dN.registerClass(mQ);var m0={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function m1(e,t={}){return c2(e,dN.SerializationMap.getMap().classNameMap,t,"initializer")}function m2(e){if("string"!=typeof e)return e instanceof mz?e:m1(e);{let t=e in m0?m0[e]:e;if("GlorotNormal"===t)return new mK;if("GlorotUniform"===t)return new mq;if("HeNormal"===t)return new mX;if("HeUniform"===t)return new mY;if("LeCunNormal"===t)return new mZ;if("LeCunUniform"===t)return new mJ;{let e={};return e.className=t,e.config={},m1(e)}}}function m3(e){return Array.isArray(e)&&Array.isArray(e[0])}function m4(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function m6(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new cU(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function m5(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))return e;if(1===e.length)return e[0];throw new cU(`Expected exactly 1 Shape; got ${e.length}`)}function m8(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce((e,t)=>e*t);return t}var m7="Variable",m9=class{constructor(e,t="float32",n=m7,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=c9++,n=null==n?m7:n,this.originalName=mc(n),this.name=mm(this.originalName),this.trainable_=r,this.constraint=a,this.val=pu(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function fe(e){return e.map(e=>e.read())}function ft(e){e.forEach(e=>{e[0].write(e[1])})}var fn=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},fr=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=c9++,null!=s&&(this.originalName=mc(s),this.name=mm(this.originalName)),this.rank=t.length}},fa=0,fs=class{constructor(e,t){for(let n of(this.callArgs=t,this.id=fa++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes,e.inboundLayers))null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},fi=0,fo=class extends dN.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=fi++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=cJ(e)+"_"+mt(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new cV(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new cU(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return cY(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return cY(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new cW(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new cW(`Layer ${this.name} is not connected, no input to return.`);return cY(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new cW(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new cW(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return cY(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){let t=cZ(e);if(null==this.inputSpec||0===this.inputSpec.length)return;let n=cZ(this.inputSpec);if(t.length!==n.length)throw new cU(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){let r=t[e],a=n[e];if(null==a)continue;let s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new cU(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new cU(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new cU(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new cU(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let t=r.shape;for(let n in a.axes){let r=Number(n),s=a.axes[n],i=r>=0?t[r]:t[t.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new cU(`Input ${e} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${t}.`)}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){let n=a.shape[t],s=r.shape[t];if(null!=n&&null!=s&&n!==s)throw new cU(`Input ${e} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=cZ(e),r=function(e){let t=!0;for(let n of cZ(e))if(!(n instanceof fr)){t=!1;break}return t}(e),a=function(e){let t=!0;for(let n of cZ(e))if(n instanceof fr){t=!1;break}return t}(e);if(r===a)throw new cU("Arguments to apply() must be all SymbolicTensors or all Tensors");return mh(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of cZ(e))t.push(n.shape);this.build(cY(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);let a=cZ(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=cY(s),null!=this.activityRegularizer)throw new cG("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{let n=function(e){e=cZ(e);let t=[];for(let n of e)t.push(n.shape);return cY(t)}(e),r=this.computeOutputShape(n),a,s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new fr(s,n,this,cZ(e),t,this.name,r)):new fr(s,r,this,cZ(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new cG("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape){if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new cW(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new cW(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new cV(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return m8(this.weights)}build(e){this.built=!0}getWeights(e=!1){return fe(e?this.trainableWeights:this.weights)}setWeights(e){sd(()=>{let t=this.weights;if(t.length!==e.length)throw new cU(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=fe(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!at.arraysEqual(s.shape,o.shape))throw new cU(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}ft(n)})}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new cU(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():m2("zeros"));let l=r.apply(t,n),u=new m9(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss(()=>a.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=cZ(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(Array.isArray(t))t.forEach(e=>{if(null!=e)throw TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;let r=this.computeMask(e,n),a=cZ(t),s=cZ(r);if(a.length!==s.length)throw Error(`${this.name} outputs ${a.length} tensors but ${a.length} masks for those tensors`);for(let e=0;e<a.length;e++)a[e].kerasMask=s[e]}addInboundNode(e,t,n,r,a,s,i=null){let o=cZ(e);t=cZ(t),n=cZ(n),r=cZ(r),a=m4(a),s=m4(s);let l=[],u=[],p=[];for(let e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),p.push(e.tensorIndex);new fs({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:p,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}},fl=class extends fo{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:mt("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new cU("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new cU("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new cU("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new fr(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new fs({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new cU(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function fu(e){if(null==e.batchShape&&null==e.shape)throw Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new cU("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new fl({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}fl.className="InputLayer",dN.registerClass(fl);var fp=class e{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof e)for(let e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(let e of t)this.add(e.key,e.value)}}add(e,t,n){if(null==this.id2Value[e.id])this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return ig(t,e.dtype)}catch(n){throw new cU(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n);else throw new cU(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof fr){if(null==this.id2Value[e.id])throw new cU(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new cU(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof fr){if(null==this.id2Value[e.id])throw new cU(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new cU(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&sh(this.id2Mask)}},fd=new cj,fh=new cj;function fc(e,t,n,r){let a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(e=>e.name),l=[],u=t.names();for(let e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let p=o.join(",")+"|"+t.names().sort().join(","),d=fd.get(p),h;if(null==d){let e=function(e,t){at.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===e.length){let a=fm(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=fm(s,t);for(let t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(let e in i)null==r[e]&&(r[e]=new Set),i[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:function(e){let t={};for(let n in e)t[n]=e[n].size;return t}(r)}}(i,t);d=e.sorted,h=e.recipientCounts,fd.put(p,d),fh.put(p,h)}h={},a||Object.assign(h,fh.get(p));let c=new fp(t);for(let e=0;e<d.length;++e){if(null!=r){let e=su().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}let s=d[e],i=s.sourceLayer;if(i instanceof fl)continue;let u=[],p=[],m=[],f=!1;for(let e of s.inputs){let n=c.getValue(e),r=c.getMask(e);u.push(n),p.push(r),null!=r&&(f=!0),!a&&(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||m.push(n))}f&&((n=n||{}).mask=p[0]);let g=cZ(i.apply(u,n)),y=null;i.supportsMasking&&(y=i.computeMask(u,p));let b=function(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){c.hasKey(x[e])||c.add(x[e],g[e],Array.isArray(y)?y[0]:y);let t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}a||sh(m)}return c.disposeMasks(),s?l:l[0]}function fm(e,t){let n=new Set,r=[],a={};for(let e of t.names())n.add(e);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else for(let t of(i.push(s.length-1),e.inputs))null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}return{sorted:r,recipientMap:a}}e8.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function(e){null!=fd&&fd.setMaxEntries(e),null!=fh&&fh.setMaxEntries(e)});var ff={};function fg(e,t){return sd(()=>oQ(o1(ik(e,e),t,!0)))}L(ff,{maxNorm:()=>fN,minMaxNorm:()=>fC,nonNeg:()=>f_,unitNorm:()=>fT});var fy=class extends dN.Serializable{getConfig(){return{}}},fb=class extends fy{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return sd(()=>{let t=fg(e,this.axis);return ik(e,iw(oo(t,0,this.maxValue),ix(mw(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};fb.className="MaxNorm",dN.registerClass(fb);var fx=class extends fy{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return sd(()=>iw(e,ix(mw(),fg(e,this.axis))))}getConfig(){return{axis:this.axis}}};fx.className="UnitNorm",dN.registerClass(fx);var fv=class extends fy{apply(e){return uN(e)}};fv.className="NonNeg",dN.registerClass(fv);var fw=class extends fy{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return sd(()=>{let t=fg(e,this.axis),n=ix(ik(this.rate,oo(t,this.minValue,this.maxValue)),ik(1-this.rate,t));return ik(e,iw(n,ix(mw(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};fw.className="MinMaxNorm",dN.registerClass(fw);var fk={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function fI(e,t={}){return c2(e,dN.SerializationMap.getMap().classNameMap,t,"constraint")}function fS(e){return null==e?null:"string"==typeof e?fI({className:e in fk?fk[e]:e,config:{}}):e instanceof fy?e:fI(e)}function fN(e){return new fb(e)}function fT(e){return new fx(e)}function f_(){return new fv}function fC(e){return new fw(e)}var fE={};function f$(){return new mP}function fA(){return new mB}function fF(e){return new mW(e)}function fR(e){return new mV(e)}function fD(e){return new mU(e)}function fM(e){return new mG(e)}function fO(e){return new mH(e)}function fL(e){return new mj(e)}function fz(e){return new mq(e)}function fP(e){return new mK(e)}function fB(e){return new mX(e)}function fW(e){return new mY(e)}function fV(e){return new mZ(e)}function fU(e){return new mJ(e)}function fG(e){return new mQ(e)}L(fE,{constant:()=>fF,glorotNormal:()=>fP,glorotUniform:()=>fz,heNormal:()=>fB,heUniform:()=>fW,identity:()=>fO,leCunNormal:()=>fV,leCunUniform:()=>fU,ones:()=>fA,orthogonal:()=>fG,randomNormal:()=>fD,randomUniform:()=>fR,truncatedNormal:()=>fM,varianceScaling:()=>fL,zeros:()=>f$});var fH={};async function fj(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];"number"!=typeof s&&(t.push(s.data()),n.push(a),r.push(s))}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];sh(r)}}function fq(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}L(fH,{Layer:()=>fo,RNN:()=>yR,RNNCell:()=>yD,activation:()=>b2,add:()=>xt,alphaDropout:()=>xH,average:()=>xn,averagePooling1d:()=>xd,averagePooling2d:()=>xm,averagePooling3d:()=>xy,avgPool1d:()=>xh,avgPool2d:()=>xf,avgPool3d:()=>xb,avgPooling1d:()=>xc,avgPooling2d:()=>xg,avgPooling3d:()=>xx,batchNormalization:()=>xl,bidirectional:()=>xL,categoryEncoding:()=>xY,centerCrop:()=>xK,concatenate:()=>xr,conv1d:()=>bq,conv2d:()=>bK,conv2dTranspose:()=>bX,conv3d:()=>bY,conv3dTranspose:()=>bZ,convLstm2d:()=>xR,convLstm2dCell:()=>xD,cropping2D:()=>bQ,dense:()=>b3,depthwiseConv2d:()=>b1,dot:()=>xo,dropout:()=>b4,elu:()=>bW,embedding:()=>xe,flatten:()=>b5,gaussianDropout:()=>xG,gaussianNoise:()=>xU,globalAveragePooling1d:()=>xv,globalAveragePooling2d:()=>xw,globalMaxPool1d:()=>xP,globalMaxPool2d:()=>xB,globalMaxPooling1d:()=>xk,globalMaxPooling2d:()=>xI,gru:()=>x_,gruCell:()=>xC,input:()=>gU,inputLayer:()=>bB,layerNormalization:()=>xu,leakyReLU:()=>bU,lstm:()=>xE,lstmCell:()=>x$,masking:()=>xj,maxPool1d:()=>xW,maxPool2d:()=>xV,maxPooling1d:()=>xS,maxPooling2d:()=>xN,maxPooling3d:()=>xT,maximum:()=>xa,minimum:()=>xs,multiply:()=>xi,permute:()=>b9,prelu:()=>bG,randomWidth:()=>xZ,reLU:()=>bV,repeatVector:()=>b8,rescaling:()=>xq,reshape:()=>b7,resizing:()=>xX,rnn:()=>xM,separableConv2d:()=>bJ,simpleRNN:()=>xA,simpleRNNCell:()=>xF,softmax:()=>bH,spatialDropout1d:()=>b6,stackedRNNCells:()=>xO,thresholdedReLU:()=>bj,timeDistributed:()=>xz,upSampling2d:()=>b0,zeroPadding2d:()=>xp}),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(kl||(kl={}));var fK=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},fX=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){for(let n of(null==t&&(t={}),this.callbacks))await n.onEpochBegin(e,t)}async onEpochEnd(e,t){for(let n of(null==t&&(t={}),this.callbacks))await n.onEpochEnd(e,t)}async onBatchBegin(e,t){for(let n of(null==t&&(t={}),this.callbacks))await n.onBatchBegin(e,t)}async onBatchEnd(e,t){for(let n of(null==t&&(t={}),this.callbacks))await n.onBatchEnd(e,t)}async onTrainBegin(e){for(let t of(null==e&&(e={}),this.callbacks))await t.onTrainBegin(e)}async onTrainEnd(e){for(let t of(null==e&&(e={}),this.callbacks))await t.onTrainEnd(e)}},fY=class extends fK{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;for(let e in this.seen+=n,t){let r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let a=sd(()=>ix(this.totals[e],ik(r,n)));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:sd(()=>{let n=ik(iw(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),sc(t[e])}))}},fZ=class extends fK{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){for(let n in null==t&&(t={}),this.epoch.push(e),t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){let i=a[s];e.push(i.data()),t.push(r),n.push(s)}}let r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}},fJ=class extends fK{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||hF,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");at.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r=null!=n?n():at.now(),a;return(...s)=>{let i=null!=n?n():at.now();return i-r<t||(r=i,a=e(...s)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];null!=this.yield&&(await fj(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await fj(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await fj(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await fj(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await fj(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):at.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await fj(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await fj(e),await this.trainEnd(e))}};function fQ(e,t){return null==e&&(e={}),e instanceof fK?[e]:Array.isArray(e)&&e[0]instanceof fK?e:cZ(e).map(e=>new fJ(e,t))}var f0=class e{constructor(){}static registerCallbackConstructor(t,n){at.assert(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),e.checkForDuplicate(n),null==e.constructors[t]&&(e.constructors[t]=[]),e.constructors[t].push(n)}static checkForDuplicate(t){for(let n in e.constructors)e.constructors[+n].forEach(e=>{if(e===t)throw new cU("Duplicate callback constructor.")})}static clear(){e.constructors={}}static createCallbacks(t){let n=[];for(let r in e.constructors){let a=+r;t>=a&&n.push(...e.constructors[a])}return n.map(e=>new e)}};function f1(e,t,n,r,a,s,i,o,l){let u=new fZ,p=[new fY,...f0.createCallbacks(t)];null!=e&&p.push(...e),p.push(u);let d=new fX(p);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:d,history:u}}function f2(e,t={},n=!1){return c2(e,dN.SerializationMap.getMap().classNameMap,t,"layer",n)}function f3(e,t){return sd(()=>{var n;"float32"!==e.dtype&&(e=ig(e,"float32"));let r=o1(ik(n=e,n),t,!0),a=oi(r.shape,mw()),s=oQ(lO(r,a));return iw(e,s)})}function f4(e,t){return sd(()=>{var n;return lL(ik(n=lS(t,e),n),-1)})}function f6(e,t){return sd(()=>lL(iI(lS(t,e)),-1))}function f5(e,t){return sd(()=>{let n=lS(e,t),r=oo(iI(e),mw(),Number.MAX_VALUE);return ik(100,lL(iI(iw(n,r)),-1))})}function f8(e,t,n=!1){return sd(()=>{if(n)t=uG(t);else{let e=o1(t,t.shape.length-1,!0);t=iw(t,e)}return t=oo(t,mw(),1-mw()),lw(o1(ik(ig(e,"float32"),lh(t)),t.shape.length-1))})}function f7(e,t,n=!1){return sd(()=>{let r;let a=ig(o9((r=[my(e.shape)],iZ(e,r))),"int32"),s=(t=oo(t,mw(),1-mw())).shape;return f8(iZ(lK(a,s[s.length-1]),s),t,n)})}function f9(e,t){return sd(()=>{let n;return lL(function(e,t){if(!at.arraysEqual(e.shape,t.shape))throw new cU(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return sd(()=>{let n=uN(t),r=lw(iI(t));return ix(lS(n,ik(t,e)),lc(o4(r)))})}(e,n=lh(iw(n=oo(t,mw(),1-mw()),lS(1,n)))),-1)})}function ge(e,t){return sd(()=>lw(o1(ik(f3(e,-1),f3(t,-1)),-1)))}f0.constructors={};var gt={meanSquaredError:f4,meanAbsoluteError:f6,meanAbsolutePercentageError:f5,meanSquaredLogarithmicError:function(e,t){return sd(()=>{var n;return lL(ik(n=lS(lh(ix(1,oo(t,mw(),Number.MAX_VALUE))),lh(ix(1,oo(e,mw(),Number.MAX_VALUE)))),n),-1)})},squaredHinge:function(e,t){return sd(()=>{let n=lO(0,lS(1,ik(e,t)));return lL(ik(n,n),-1)})},hinge:function(e,t){return sd(()=>lL(lO(0,lS(1,ik(e,t))),-1))},categoricalHinge:function(e,t){return sd(()=>{let n=o1(ik(e,t),-1),r=oX(ik(lS(1,e),t),-1);return lO(0,ix(1,lS(r,n)))})},logcosh:function(e,t){return sd(()=>{let n=Math.log(2),r=lS(t,e);return lL(lS(ix(r,lk(ik(-2,r))),n),-1)})},categoricalCrossentropy:f8,sparseCategoricalCrossentropy:f7,binaryCrossentropy:f9,kullbackLeiblerDivergence:function(e,t){return sd(()=>{let n=oo(e,mw(),1);return o1(ik(e,lh(iw(n,oo(t,mw(),1)))),-1)})},poisson:function(e,t){return sd(()=>{let n=lh(ix(mw(),t));return lL(lS(t,ik(e,n)),-1)})},cosineProximity:ge};function gn(e){if("string"!=typeof e)return e;{if(e in gt)return gt[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new cU(t)}}function gr(e,t){return sd(()=>{let n=ik(.5,lX(t)),r=ig(lt(t,n),e.dtype);return lL(oF(e,r),-1)})}function ga(e,t){return sd(()=>ig(oF(iE(e,-1),iE(t,-1)),"float32"))}function gs(e,t){return sd(()=>ig(o1(l_(oF(e,1),oF(t,1))),"float32"))}function gi(e,t){return sd(()=>{let n=gs(e,t),r=ix(n,sd(()=>ig(o1(l_(oF(e,0),oF(t,1))),"float32")));return ig(oR(lt(r,0),iw(n,r),0),"float32")})}function go(e,t){return f9(e,t)}function gl(e,t){return e.rank===t.rank&&(e=uZ(e,[e.rank-1])),(t=iE(t,-1)).dtype!==e.dtype&&(t=ig(t,e.dtype)),ig(oF(e,t),"float32")}var gu={binaryAccuracy:gr,categoricalAccuracy:ga,precision:gi,categoricalCrossentropy:f8,sparseCategoricalCrossentropy:f7,mse:f4,MSE:f4,mae:f6,MAE:f6,mape:f5,MAPE:f5,cosine:ge};function gp(e){if(cK(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys(gt))if(gt[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(gu))if(gu[n]===e){t=n;break}return void 0!==t?t:e.name}}function gd(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!function e(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){for(let n of Object.keys(t))if("string"!=typeof n||!e(t[n]))return!1;return!0}if(!Array.isArray(t))return!1;for(let n of t)if(!e(n))return!1;return!0}{let e=typeof t;return"string"===e||"number"===e||"boolean"===e}}(e))throw Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function gh(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function gc(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function gm(e,t){if(null===e)return null;if("string"==typeof e)return cQ(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];gc(t,a,r)?n.push(r):n.push(gm(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{let e=cQ(n);t[e]=gm(r,e)}}return t}}var gf="4.22.0",gg=e=>{let t=Object.keys(e);if(0===t.length)return!1;let n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))},gy=class e extends fo{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=mt(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],c4(this.inputs).length!==this.inputs.length)throw new cU(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(e=>e.name)}`);for(let e of(c4(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(e=>e.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[],this.outputs)){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(let e of this.inputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;cK(0===n,"input layer has >1 nodes"),cK(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){let n=this.inputLayers[e];if(!(n instanceof fl))throw TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);let n={},r={},a={},s={},i={},o=[],l=(t,n,r,a,s,u)=>{(null==a||null==s||null==u)&&(a=t.sourceLayer,s=t.nodeIndex,u=t.tensorIndex);let p=a.inboundNodes[s];if(-1!==r.indexOf(p))throw new cV(`The tensor ${t.name} at layer "${a.name}" is part of a cycle.`);if(-1!==n.indexOf(p))return;this.containerNodes.add(e.nodeKey(a,s)),a.id in i||(i[a.id]=Object.keys(i).length),-1===r.indexOf(p)&&r.push(p);let d=p.inboundLayers.length;for(let e=0;e<d;e++)l(p.inputTensors[e],n,r,p.inboundLayers[e],p.nodeIndices[e],p.tensorIndices[e]);for(n.push(p);r.indexOf(p)>=0;)r.splice(r.indexOf(p),1);o.push(p)},u=[],p=[];for(let e of this.outputs)l(e,u,p);for(let e of o.slice().reverse()){r[e.id]=e,e.id in n||(n[e.id]=0);let t=n[e.id];t=Math.max(t,null==a[e.outboundLayer.id]?0:a[e.outboundLayer.id]),a[e.outboundLayer.id]=t,s[e.outboundLayer.id]=e.outboundLayer,n[e.id]=t;for(let a=0;a<e.inboundLayers.length;a++){let s=e.inboundLayers[a],i=e.nodeIndices[a],o=s.inboundNodes[i],l=null==n[o.id]?0:n[o.id];n[o.id]=Math.max(t+1,l),r[o.id]=o}}let d={};for(let e in n){let t=n[e];t in d||(d[t]=[]),d[t].push(r[e])}let h={};for(let e in a){let t=a[e];t in h||(h[t]=[]),h[t].push(s[e])}let c=Object.keys(h).map(e=>parseInt(e,10)).sort(c3);for(let t of(this.layers=[],c)){let n=h[t];for(let t of(n.sort((e,t)=>{let n=i[e.id],r=i[t.id];return n<r?-1:n>r?1:0}),n))t instanceof e&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=h,c=Object.keys(d).map(e=>parseInt(e,10)).sort(c3);let m=this.inputs.slice(),f=[];for(let e of c)for(let t of d[e]){let e=t.outboundLayer;if(null!=e){for(let n of t.inputTensors)if(-1===m.indexOf(n))throw new cV(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${f}`);for(let e of t.outputTensors)m.push(e);f.push(e.name)}}this.nodesByDepth=d;let g=this.layers.map(e=>e.name);for(let e of g){let t=g.filter(t=>t===e).length;if(1!==t)throw new cV(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new fs({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new cU("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0,a=gg(e);for(let t of(a&&this.parseWeights(e),this.layers))for(let[e,s]of t.weights.entries()){let t=a?`${s.name.split("/").slice(0,-1).join("/")+"/"}${e}`:s.originalName;if(null!=n[t])throw new cU(`Duplicate weight name: ${t}`);n[t]=s,r++}let s=[];for(let r in e){let a=r;if(null==n[r]){let e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[r]]);else if(t)throw new cU(`Provided weight data has no target variable: ${r}`);delete n[a]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new cU(`${e.length} of ${r} weights are not set: ${e}`)}ft(s)}parseWeights(e){for(let t in Object.keys(e)){let n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],a=n.map(e=>e.startsWith("_")?e.slice(1):e).filter(e=>!r.includes(e)).join("/");a!==t&&(e[a]=e[t],delete e[t])}}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${gf}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=function e(t,n){if(null==t)return null;if("string"==typeof t)return cJ(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){let r=[],a=t.length;for(let s=0;s<a;++s){let a=t[s];gc(n,s,a)?r.push(a):r.push(e(a,n))}return r}{let n={};for(let r of Object.keys(t)){let a=t[r],s=cJ(r);("name"===r||"className"===r)&&"string"==typeof a?n[s]=a:n[s]=e(a,r)}return n}}(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return sd(()=>{e=cZ(e);let n=new fp;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return fc(this.outputs,n,t)})}computeMask(e,t){return sd(()=>{let n;return e=cZ(e),n=null==t?cq(null,e.length):cZ(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=m4(e);if(t.length!==this.inputLayers.length)throw new cU(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let e=0;e<t.length;e++){let r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}let r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(c3);if(r.length>1)for(let e of r)for(let t of this.nodesByDepth[e]){let e=t.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(e.id))continue;let r=[];for(let e=0;e<t.inboundLayers.length;e++){let a=t.inboundLayers[e],s=t.nodeIndices[e],i=t.tensorIndices[e],o=n[`${a.name}_${s}_${i}`];r.push(o)}let a=m4(e.computeOutputShape(cY(r))),s=e.inboundNodes.indexOf(t);for(let t=0;t<a.length;t++)n[`${e.name}_${s}_${t}`]=a[t]}let a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){let t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){let t=s[e];cK(t in n),a.push(n[t])}return cY(a)}runInternalGraph(e,t){null==t&&(t=cq(null,e.length));let n={};for(let r=0;r<this.inputs.length;++r){let a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}for(let e of Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(c3))for(let t of this.nodesByDepth[e]){let e=t.outboundLayer,r=t.inputTensors,a=t.outputTensors,s=[];for(let e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r={},i,o,l,u;if(null!=t.callArgs&&(r=t.callArgs),1===s.length){let[t,n]=s[0];null==r.mask&&(r.mask=n),l=cZ(e.call(t,r)),u=cZ(e.computeMask(t,n)),i=[t],o=[n]}else i=s.map(e=>e[0]),o=s.map(e=>e[1]),null==r.mask&&(r.mask=o),l=cZ(e.call(i,r)),u=cZ(e.computeMask(i,o));if(e.activityRegularizer)throw new cG("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){let t=a[e],r=l[e],s=u[e];n[t.id]=[r,s]}}}let r=[],a=[],s=[];for(let e of this.outputs){cK(e.id in n,`Could not compute output ${e.name} : ${e.id}`);let[t,i]=n[e.id];s.push(t.shape),r.push(t),a.push(i)}return[r,a,s]}buildNodeConversionMap(t){let n={},r;for(let t of this.layers){r=t instanceof e?1:0;for(let a=0;a<t.inboundNodes.length;a++){let s=e.nodeKey(t,a);this.containerNodes.has(s)&&(n[s]=r,r+=1)}}return n}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new cU("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(let t of this.layers)if(t.name===e)return t;throw new cU(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new cU(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return sd(()=>{let t=[];for(let n of this.layers)for(let r=0;r<n.inboundNodes.length;++r){let a=e.nodeKey(n,r);this.containerNodes.has(a)&&t.push(...n.calculateLosses())}return t})}getConfig(){let t={name:this.name},n=this.buildNodeConversionMap(this.layers),r=[];for(let t of this.layers){let a=t.getClassName(),s=t.getConfig(),i=[];for(let r=0;r<t.inboundNodes.length;r++){let a=t.inboundNodes[r],s=e.nodeKey(t,r),o={};if(this.containerNodes.has(s)){if(a.callArgs)try{JSON.stringify(a.callArgs),o=a.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${a.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(a.inboundLayers.length>0){let t=[];for(let r=0;r<a.inboundLayers.length;r++){let s=a.inboundLayers[r],i=a.nodeIndices[r],l=a.tensorIndices[r],u=n[e.nodeKey(s,i)];null==u&&(u=0),t.push([s.name,u,l,o])}i.push(t)}}}let o={};o.name=t.name,o.className=a,o.config=s,o.inboundNodes=i,r.push(o)}t.layers=r;let a=[];for(let t=0;t<this.inputLayers.length;t++){let r=this.inputLayers[t],s=this.inputLayersNodeIndices[t],i=e.nodeKey(r,s);if(!this.containerNodes.has(i))continue;let o=n[i];null==o&&(o=0);let l=this.inputLayersTensorIndices[t];a.push([r.name,o,l])}t.inputLayers=a;let s=[];for(let t=0;t<this.outputLayers.length;t++){let r=this.outputLayers[t],a=this.outputLayersNodeIndices[t],i=e.nodeKey(r,a);if(!this.containerNodes.has(i))continue;let o=n[i];null==o&&(o=0);let l=this.outputLayersTensorIndices[t];s.push([r.name,o,l])}return t.outputLayers=s,t}static fromConfig(e,t,n={},r=!1){let a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}let o=t.name,l=t.layers;for(let e of l)!function(e){let n=e.name,s=f2(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new cU(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)})}(e);for(;!function(e){if(null==e)throw new cU(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}(s);)for(let e of l){let t=a[e.name];if(t.name in s){let e=s[t.name];for(let n of(delete s[t.name],e))!function(e,t){let n=[],r;for(let s of t){let o=s[0],l=s[1],u=s[2];if(r=null==s[3]?{}:s[3],!(o in a)){i(e,t);return}let p=a[o];if(p.inboundNodes.length<=l){i(e,t);return}let d=p.inboundNodes[l];n.push(d.outputTensors[u])}n.length>0&&e.apply(cY(n),r)}(t,n)}}let u=[],p=[];for(let e of t.inputLayers){let t=e[0],n=e[1],r=e[2];cK(t in a);let s=a[t].inboundNodes[n].outputTensors;u.push(s[r])}for(let e of t.outputLayers){let t=e[0],n=e[1],r=e[2];cK(t in a);let s=a[t].inboundNodes[n].outputTensors;p.push(s[r])}return new e({inputs:u,outputs:p,name:o})}get stateful(){if(this._stateful)throw new cU("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){sd(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function gb(e,t){return function(e,t,n){let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach(t=>{t in e?n.push(e[t]):n.push(null)}),n}throw Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function gx(e,t,n,r){if(null!=t||null!=r)throw Error("Support sampleWeight is not implemented yet");if(null==n)return null;{let t=sd(()=>{if(1===e.shape.length)return iy(e);if(2===e.shape.length){if(e.shape[1]>1)return iE(e,1);if(1===e.shape[1])return iZ(e,[e.shape[0]]);throw Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await t.data());sh(t);let a=[];return r.forEach(e=>{if(null==n[e])throw Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])}),u2(a,"float32")}}function gv(e,t){let n,r;n=t.xs,r=t.ys,at.assert(null!=n&&null!=r,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=gw("input",e.inputNames,n),s=gw("output",e.outputNames,r),i=a[0].shape[0];at.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),at.assert(s.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${s.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let t=0;t<a.length;t++)at.assert(a[t].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let t=0;t<s.length;t++)at.assert(s[t].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[t]} has ${s[t].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:s}}function gw(e,t,n){if(n instanceof aF)return[n];if(Array.isArray(n))return at.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let r=[];for(let a of t){if(null==n[a])throw new cU(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function gk(e,t,n){let r=null!=n.batchesPerEpoch;if(at.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),at.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),at.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),at.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),at.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a,s=null!=n.validationData,i,o;if(s){if(gI(n.validationData))at.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let e=function(e){if(3===e.length)throw new cG("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,o=e.ys}}let l=e.makeTrainFunction(),u=e.getDedupedMetricsNames(),p;p=s?u.slice().concat(u.map(e=>"val_"+e)):u.slice();let d=fQ(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:c,history:m}=f1(d,h,n.epochs,null,null,(a=null,null!=n.batchesPerEpoch?a=n.batchesPerEpoch:Number.isFinite(t.size)&&(a=t.size),a),null,s,p);c.setModel(e),e.history=m,await c.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;f<n.epochs;){let a={};await c.onEpochBegin(f);let p=0,d=0;for(r||(g=await t.iterator());!r||p<n.batchesPerEpoch;){let t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${p} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:r,ys:a}=gv(e,t.value),s={};s.batch=d,s.size=r[0].shape[0],await c.onBatchBegin(d,s);let i=[];if(null!=n.classWeight){let t=gb(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await gx(a[e],null,t[e]))}let o=r.concat(a).concat(i),h=l(o);sh(o);for(let e=0;e<u.length;++e){let t=u[e],n=h[e];s[t]=n,sc(n)}await c.onBatchEnd(d,s),fq(s),d++,p++}if(r?p>=n.batchesPerEpoch:t.done){if(s){let t;t=gI(n.validationData)?cZ(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):cZ(e.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)a[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await c.onEpochEnd(f,a),f++,e.stopTraining_)break}return await c.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function gI(e){return"function"==typeof e.iterator}async function gS(e,t,n){let r=null!=(n=n||{}).batches,a=e.testFunction,s=[];if(n.verbose>0)throw new cG("Verbose mode is not implemented yet.");at.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let i="function"==typeof t.next?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let t=await i.next();if(s=sd(()=>{if(t.value){let{xs:n,ys:r}=gv(e,t.value),i=n.concat(r),u=sd(()=>a(i));if(sh(i),0===l)for(let e=0;e<u.length;++e)s.push(oJ(0));let p=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=sd(()=>ix(s[e],ik(p,t))),l>0&&sh(n)}sh(u),o+=p,++l}return s}),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){let t=s[e];s[e]=iw(s[e],o),sh(t)}return cY(s)}function gN(e){at.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function gT(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>mS(e,t,n-t)):mS(e,t,n-t)}function g_(e,t){return sd(()=>null==e?null:Array.isArray(e)?e.map(e=>g_(e,t)):mF(e,"int32"===t.dtype?t:ig(t,"int32")))}function gC(e,t){let n=[],r=0,a=null;for(;r<e;)(a=r+t)>=e&&(a=e),n.push([r,a]),r=a;return n}function gE(e){let t=[];e instanceof aF&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(mI(r,1));else{if(0===r.rank)throw Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function g$(e,t){if(null==e)return;let n=[];if(t instanceof aF)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(let e in t){let r=t[e];n.push(r.id)}let r=[];if(e instanceof aF)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(let t in e){let a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach(e=>{e.isDisposed||e.dispose()})}function gA(e){return Array.isArray(e)}function gF(e){return!(e instanceof aF)&&!gA(e)}function gR(e,t,n,r=!0,a=""){let s;if(null==t||0===t.length){if(null!=e){let t=!1;if(gA(e)&&e.length>0)t=!0;else if(gF(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new cU(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(e=>null);if(gF(e))for(let n of(s=[],t)){if(null==e[n])throw new cU(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}else if(gA(e)){if(e.length!==t.length)throw new cU(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new cU(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=gE(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new cU(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;let s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new cU(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function gD(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new cU(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new cU(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new cU(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;let o=i.shape[s],l=n[e][s];if(null!=l&&l!==o)throw new cU(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}var gM=class extends gy{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new cU("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){let a,s=function(e){let t=!0,n=[],r=[];for(let t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(let e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(let n of e.layers){let e=!1;for(let a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!s)for(let t in i.push("Receives inputs"),a=[],e.nodesByDepth)a.push(...e.nodesByDepth[t]);r("_".repeat(t)),gh(i,n,r),r("=".repeat(t));let o=e.layers;for(let e=0;e<o.length;++e)s?function(e,t,n){let r,a;try{a=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}let s=e.name,i=e.getClassName();gh([`${s} (${i})`,a,r,e.countParams().toString()],t,n)}(o[e],n,r):function(e,t,n,r){let a,s;try{s=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}let i=[];for(let t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){let n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];i.push(`${n}[${r}][${a}]`)}let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];gh([`${o} (${l})`,s,a,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)gh(["","","","",i[e]],t,r)}(o[e],n,a,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=null!=e.collectedTrainableWeights?m8(e.collectedTrainableWeights):m8(e.trainableWeights),u=m8(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){let t={Adagrad:()=>h$.adagrad(.01),Adadelta:()=>h$.adadelta(1,.95,mw()),Adam:()=>h$.adam(.001,.9,.999,mw()),Adamax:()=>h$.adamax(.002,.9,.999,mw(),0),RMSProp:()=>h$.rmsprop(.001,.9,0,mw()),SGD:()=>h$.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new cU(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof dF))throw new cU("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss){if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new cU(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(e=>gn(e))}else{let n=gn(e.loss);this.outputs.forEach(e=>{t.push(n)})}}else{for(let t in e.loss=e.loss,e.loss)if(-1===this.outputNames.indexOf(t))throw new cU(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(gn(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){let t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],mh("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});let r=function(e,t){let n;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);if("string"==typeof e||"function"==typeof e)n=[e];else if(Array.isArray(e)||"object"==typeof e)n=e;else throw TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(e=>n);{let e=[];for(let r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};mh("metric",()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(let i of t){let t;if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){let t,a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===f9?-1!==["accuracy","acc"].indexOf(i)?r=gr:-1!==["crossentropy","ce"].indexOf(i)&&(r=go):this.lossFunctions[e]===f7?-1!==["accuracy","acc"].indexOf(i)?r=gl:-1!==["crossentropy","ce"].indexOf(i)&&(r=f7):-1!==["accuracy","acc"].indexOf(i)?r=ga:-1!==["crossentropy","ce"].indexOf(i)&&(r=f8),-1!==["accuracy","acc"].indexOf(i)?t="acc":-1!==["crossentropy","ce"].indexOf(i)&&(t="ce"),s=r,n=""+t}else s=function(e){if("string"==typeof e&&e in gu)return gu[e];if("string"!=typeof e&&null!=e)return e;throw new cU(`Unknown metric ${e}`)}(i),n=""+gp(i);mh(n,()=>{t=s}),a(e,n,t)}})(r[e])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=null==n.batchSize?32:n.batchSize;gN(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let e=a[0].concat(a[1]);this.makeTestFunction();let t=this.testFunction,s=this.testLoop(t,e,r,n.verbose,n.steps);return cY(s)}finally{g$(a[0],e),g$(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),gS(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new cU(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(null!=e)a=Array.isArray(e)?e[0].shape[0]:e.shape[0];else throw new cU(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new cU("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new fp;if(e instanceof aF&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new cU(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let t of this.inputs){let n=e[t.name];if(null==n)throw new cU(`No value is provided for the model's input ${t.name}`);s.add(t,n)}let i=fc(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=cq(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map(e=>e.name);for(let r=0;r<e.length;++r){let i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new cU(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return sd(()=>{let r=this.checkNumSamples(e);if(n)throw new cG("Verbose predictLoop() is not implemented yet.");let a=gC(r,t),s=this.outputs.map(e=>[]);for(let t=0;t<a.length;++t)sd(()=>{let n=gT(e,a[t][0],a[t][1]),r=[];if(Array.isArray(n))for(let e=0;e<n.length;++e)r.push({key:this.inputs[e],value:n[e]});else r.push({key:this.inputs[0],value:n});let s=new fp(r);return fc(this.outputs,s)}).forEach((e,t)=>s[t].push(e));return cY(s.map(e=>i0(e,0)))})}predict(e,t={}){let n=gE(e);gD(n,this.inputNames,this.feedInputShapes,!1);try{let e=null==t.batchSize?32:t.batchSize;return gN(e),this.predictLoop(n,e)}finally{g$(n,e)}}predictOnBatch(e){gD(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new cV("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let e=0;e<this.feedOutputShapes.length;++e){let t=this.feedOutputShapes[e];this.feedLossFns[e]===f7?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(e=gR(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=gR(t,this.feedOutputNames,a,!1,"target"),function(e,t,n){let r=c4(e.map(e=>e.shape[0]));r.sort();let a=c4(t.map(e=>e.shape[0]));if(a.sort(),r.length>1)throw new cU(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(e=>e.shape))}`);if(a.length>1)throw new cU(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(e=>e.shape))}`);if(r.length>0&&a.length>0&&!at.arraysEqual(r,a))throw new cU(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e,t,0),function(e,t,n){let r=[f4,f9,f8];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===f8&&1===s.shape[s.shape.length-1])throw new cU(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let r=e[n],a=t[n];if(null!=a&&r!==a)throw new cU(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new cU(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw Error("sample weight is not supported yet.");let l=null;if(null!=r){let e=gb(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await gx(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return sd(()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new cG("Verbose mode is not implemented yet.");if(null!=a)throw new cG("steps mode in testLoop() is not implemented yet");{let r=gC(s,n),a=u2(mv(0,s));for(let n=0;n<r.length;++n){let s=r[n][0],o=r[n][1],l=e(g_(t,mS(a,s,o-s)));if(0===n)for(let e=0;e<l.length;++e)i.push(oJ(0));for(let e=0;e<l.length;++e){let t=l[e];i[e]=ix(i[e],ik(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=iw(i[e],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;if(cX(e,r)>1){let t=cX(e.slice(0,n),r);a+=`_${t}`}t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{let e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});let i=new fp(e),o=fc(this.outputs,i,{training:!0}),l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=ik(n,a[e]));let s=lL(n);t.push(s),l=0===e?n:ix(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{let t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=lL(t(r[a],o[a]))}sc(n),s.push(n)}return l=lL(l),this.calculateLosses().forEach(e=>{l=ix(l,e)}),l},!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>sd(()=>{let t=[],n,r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});let i=new fp(s),o=fc(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let r=lL((0,this.lossFunctions[e])(a[e],o[e]));n=0===e?r:ix(n,r),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){let n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=lL(n(a[r],o[r]));t.push(s)}return t})}async fit(e,t,n={}){let r,a,s,i,o,l,u,p,d;if(this.isTraining)throw Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{let h=null==n.batchSize?32:n.batchSize;gN(h);let c=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,!1,h);r=c[0],a=c[1],d=c[2];let m=!1,f;if(null!=n.validationData&&n.validationData.length>0){if(m=!0,2===n.validationData.length)o=n.validationData[0],l=n.validationData[1];else throw 3===n.validationData.length?new cG("validationData including sample weights is not supported yet."):new cU(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let e=await this.standardizeUserData(o,l,null,null,!0,h);u=e[0],p=e[1],f=u.concat(p)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){m=!0;let e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];u=gT(r,e,t),s=r,r=gT(r,0,e),p=gT(a,e,t),i=a,a=gT(a,0,e),f=u.concat(p)}else null!=n.validationSteps&&(m=!0);let g=r.concat(a).concat(d);this.checkTrainableWeightsConsistency();let y=this.makeTrainFunction(),b=this.getDedupedMetricsNames(),x,v;m?(this.makeTestFunction(),x=this.testFunction,v=b.slice().concat(b.map(e=>"val_"+e))):(x=null,f=[],v=b.slice());let w=fQ(n.callbacks,n.yieldEvery);return await this.fitLoop(y,g,b,h,n.epochs,n.verbose,w,x,f,n.shuffle,v,n.initialEpoch,null,null)}finally{this.isTraining=!1,g$(r,e),g$(a,t),g$(s,e),g$(i,t),g$(u,o),g$(p,l),null!=d&&sh(d)}}async fitLoop(e,t,n,r,a,s,i,o,l,u,p,d,h,c){null==r&&(r=32),null==a&&(a=1),null==u&&(u=!0),null==d&&(d=0);let m=!1;if(null!=o&&null!=l&&(m=!0),null!=c&&(m=!0,null==h))throw new cU("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let f=this.checkNumSamples(t,r,h,"steps_per_epoch"),g;null!=f&&(g=mv(0,f)),null==s&&(s=1);let{callbackList:y,history:b}=f1(i,s,a,d,f,h,r,m,p);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let s=d;s<a;++s){await y.onEpochBegin(s);let a={};if(null!=h)throw new cG("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new cG("batch shuffling is not implemneted yet");u&&at.shuffle(g);let s=u2(g),i=gC(f,r);for(let u=0;u<i.length;++u){let p={};if(await y.onBatchBegin(u,p),sd(()=>{let d=i[u][0],h=i[u][1],c=mS(s,d,h-d);p.batch=u,p.size=h-d;let f=e(g_(t,c));for(let e=0;e<n.length;++e){let t=n[e],r=f[e];p[t]=r,sc(r)}if(u===i.length-1&&m){let e=this.testLoop(o,l,r);for(let t=0;t<n.length;++t){let r=n[t],s=e[t];sc(s),a["val_"+r]=s}}}),await y.onBatchEnd(u,p),fq(p),this.stopTraining_)break}s.dispose()}if(await y.onEpochEnd(s,a),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return gk(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let e of s){let t=await e.data();i.push(t[0])}return sh(s),g$(n[0],e),g$(n[1],t),cY(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=su().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-su().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=cJ(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>cJ(e))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t)if("string"==typeof n[r])e[r]=cJ(n[r]);else throw Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[cJ(gp(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>cJ(gp(e)));{let e={};for(let t in this.metrics)e[t]=cJ(gp(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){let t;if(null!=e.weighted_metrics)throw Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw Error("Loading sample_weight_mode is not supported yet.");let n=f2(gm(e.optimizer_config)),r;if("string"==typeof e.loss)r=cQ(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(e=>cQ(e));else if(null!=e.loss)for(let t in r={},e.loss)r[t]=cQ(e.loss[t]);if(Array.isArray(e.metrics))t=e.metrics.map(e=>cQ(e));else if(null!=e.metrics)for(let n in t={},e.metrics)t[n]=cQ(e.metrics[n]);this.compile({loss:r,metrics:t,optimizer:n})}async save(e,t){if("string"==typeof e){let t=dW.getSaveHandlers(e);if(0===t.length)throw new cU(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new cU(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new cU("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await dW.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${gf}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();let{data:e,specs:t}=await dW.encodeWeights(await this.optimizer.getWeights(),"optimizer");n.specs.push(...t),n.data=dW.concatenateArrayBuffers([n.data,e])}return null!=this.userDefinedMetadata&&(gd(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){gd(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};gM.className="Model",dN.registerClass(gM);var gO=class extends gM{};async function gL(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);let r=f2(gm(n),t);if(null!=e.weightsManifest){let t=await dW.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(e=>e.originalName)),n={};for(let e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),sh(t)}return r}async function gz(e,t){if(null==t&&(t={}),"string"==typeof e){let n=dW.getLoadHandlers(e,t);if(0===n.length)n.push(dW.browserHTTPRequest(e,t));else if(n.length>1)throw new cU(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return gP(e,void 0,t)}async function gP(e,t,n){if(null==n&&(n={}),null==e.load)throw new cU("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=f2(gm(a),t,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){var u,p;let e,t,n;if(null==r.weightSpecs)throw new cU("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:a,optimizerWeights:i}=(u=r.weightData,p=r.weightSpecs,e=dW.decodeWeights(u,p),t={},n=[],p.forEach(r=>{"optimizer"===r.group?n.push({name:r.name,tensor:e[r.name]}):t[r.name]=e[r.name]}),{modelWeights:t,optimizerWeights:n});o.loadWeights(a,s),null!=o.optimizer&&i.length>0&&await o.optimizer.setWeights(i),sh(a),sh(i.map(e=>e.tensor))}return o}gO.className="Functional",dN.registerClass(gO);var gB=class e extends gM{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:mt("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new cU(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(t){let n=t instanceof e||t instanceof gM,r;if(n){if(1!==(r=t).outputs.length)throw new cU("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==r.inputs.length)throw new cU("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new cU("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let e=fu({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(n)this.outputs=r.outputs,this.inputs=r.inputs;else{if(1!==t.inboundNodes.length)throw new cU(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new cU("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=function e(t,n,r){if((null==n||null!=r&&r>0)&&(n=t.sourceLayer,r=t.nodeIndex),0===n.inboundNodes.length)return[t];{let t=n.inboundNodes[r];if(0===t.inboundLayers.length)return t.inputTensors;{let n=[];for(let r=0;r<t.inboundLayers.length;r++)for(let a of e(t.inputTensors[r],t.inboundLayers[r],t.nodeIndices[r]))-1===n.indexOf(a)&&n.push(a);return n}}}(this.outputs[0])}this.inboundNodes=[],new fs({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:cq(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{let e=t.apply(this.outputs[0]);if(Array.isArray(e))throw TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(m5(e),0===this.inputs.length||0===this.outputs.length)throw TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new gM({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new cV("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new cV("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new cV("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new cV("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(t,n,r={},a=!1){let s,i={};if(n instanceof Array){if(null==n[0].className||"Merge"===n[0].className)throw new cU("Legacy serialization format not supported yet.");s=n}else at.assert(null!=n.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=n.layers,delete n.layers,i=n;let o=new t(i);if(!(o instanceof e))throw new cG(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let e of s){let t=f2(e,void 0,a);a&&t.setFastWeightInitDuringBuild(!0),o.add(t)}return o}set stopTraining(e){if(null==this.model)throw new cU("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new cU("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function gW(e){return new gM(e)}function gV(e){return new gB(e)}function gU(e){return fu(e)}function gG(e,t){f0.registerCallbackConstructor(e,t)}gB.className="Sequential",dN.registerClass(gB);var gH=class extends dN.Serializable{getConfig(){return{}}},gj=class extends gH{apply(e,t=1){return function(e,t=1){if(1!==t)throw new cG(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return oz(e)}(e,t)}};gj.className="elu",dN.registerClass(gj);var gq=class extends gH{apply(e){return uD(e)}};gq.className="selu",dN.registerClass(gq);var gK=class extends gH{apply(e){return uN(e)}};gK.className="relu",dN.registerClass(gK);var gX=class extends gH{apply(e){return sd(()=>lW(6,uN(e)))}};gX.className="relu6",dN.registerClass(gX);var gY=class extends gH{apply(e){return e}};gY.className="linear",dN.registerClass(gY);var gZ=class extends gH{apply(e){return i2(e)}};gZ.className="sigmoid",dN.registerClass(gZ);var gJ=class extends gH{apply(e){return sd(()=>oo(ix(.5,ik(.2,e)),0,1))}};gJ.className="hardSigmoid",dN.registerClass(gJ);var gQ=class extends gH{apply(e){return lk(e)}};gQ.className="softplus",dN.registerClass(gQ);var g0=class extends gH{apply(e){return sd(()=>iw(e,ix(iI(e),1)))}};g0.className="softsign",dN.registerClass(g0);var g1=class extends gH{apply(e){return i4(e)}};g1.className="tanh",dN.registerClass(g1);var g2=class extends gH{apply(e,t=-1){return uG(e,t)}};g2.className="softmax",dN.registerClass(g2);var g3=class extends gH{apply(e,t=-1){return lN(e,t)}};g3.className="logSoftmax",dN.registerClass(g3);var g4=class extends gH{apply(e){return sd(()=>sd(()=>{let t=ik(.5,ix(1,oB(iw(e,Math.sqrt(2)))));return ik(e,t)}))}};g4.className="gelu",dN.registerClass(g4);var g6=class extends gH{apply(e){return sd(()=>ik(.5,ik(e,ix(1,i4(ik(oQ(iw(2,Math.PI)),ix(e,ik(.044715,oZ(e,3)))))))))}};g6.className="gelu_new",dN.registerClass(g6);var g5=class extends gH{apply(e){return sd(()=>ik(e,i4(lk(e))))}};g5.className="mish",dN.registerClass(g5);var g8=class extends gH{apply(e,t=1){return sd(()=>ik(i2(ik(e,t)),e))}};function g7(e){return e.getClassName()}function g9(e,t={}){return c2(e,dN.SerializationMap.getMap().classNameMap,t,"activation")}function ye(e){if(null==e){let e={};return e.className="linear",e.config={},g9(e)}if("string"!=typeof e)return e instanceof gH?e:g9(e);{let t={};return t.className=e,t.config={},g9(t)}}function yt(e){if(null!=e&&"object"!=typeof e)throw Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}g8.className="swish",dN.registerClass(g8);var yn=class extends dN.Serializable{},yr=class extends yn{constructor(e){super(),yt(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return sd(()=>{let t=lz([1]);return this.hasL1&&(t=ix(t,o1(ik(this.l1,iI(e))))),this.hasL2&&(t=ix(t,o1(ik(this.l2,ik(e,e))))),iZ(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};yr.className="L1L2",dN.registerClass(yr);var ya={l1l2:"L1L2"};function ys(e,t={}){return c2(e,dN.SerializationMap.getMap().classNameMap,t,"regularizer")}function yi(e){return null==e?null:"string"==typeof e?ys({className:e in ya?ya[e]:e,config:{}}):e instanceof yn?e:ys(e)}var yo=class extends fo{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){let n=uN(e=m6(e));return null!=this.maxValue&&(n=oo(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue};return Object.assign(e,super.getConfig()),e}};yo.className="ReLU",dN.registerClass(yo);var yl=class extends fo{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){return lo(m6(e),this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha};return Object.assign(e,super.getConfig()),e}};yl.className="LeakyReLU",dN.registerClass(yl);var yu=class extends fo{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=m2(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=yi(e.alphaRegularizer),this.alphaConstraint=fS(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if("number"==typeof e.sharedAxes)this.sharedAxes=[e.sharedAxes];else throw new cU(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){let t=(e=m5(e)).slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new fn({ndim:e.length,axes:n})],this.built=!0}call(e,t){return l4(e=m6(e),this.alpha.read())}getConfig(){let e={alphaInitializer:c1(this.alphaInitializer),alphaRegularizer:c1(this.alphaRegularizer),alphaConstraint:c1(this.alphaConstraint),sharedAxes:this.sharedAxes};return Object.assign(e,super.getConfig()),e}};yu.className="PReLU",dN.registerClass(yu);var yp=class extends fo{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new cG(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){return oz(m6(e))}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha};return Object.assign(e,super.getConfig()),e}};yp.className="ELU",dN.registerClass(yp);var yd=class extends fo{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=m6(e);return ik(n,ig(lt(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta};return Object.assign(e,super.getConfig()),e}};yd.className="ThresholdedReLU",dN.registerClass(yd);var yh=class extends fo{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=new g2().apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return sd(()=>{let n=m6(e),r=t.mask;if(null!=r){let e=ik(lS(lP(n.shape),ig(r,n.dtype)),oJ(-1e9));n=ix(n,e)}return this.axis instanceof Array?this.axis.length>1?o4(lS(n,lT(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)})}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis};return Object.assign(e,super.getConfig()),e}};function yc(e,t,n){if("number"==typeof e)return cq(e,t);if(e.length!==t)throw new cU(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(a!==parseInt(a.toString(),10))throw new cU(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function ym(e,t,n,r,a=1){return null==e?e:Math.floor((("same"===n?e:e-(t+(t-1)*(a-1))+1)+r-1)/r)}function yf(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+mx([n-t,0]);else if("same"===r)e*=t;else throw new cU(`Unsupport padding mode: ${r}.`);return e}function yg(e,t){return sd(()=>(ml(t),"channelsFirst"===t?pc(e,[0,2,3,1]):e))}function yy(e,t){return sd(()=>(ml(t),"channelsFirst"===t?pc(e,[0,2,3,4,1]):e))}function yb(e,t,n,r=[1,1],a="valid",s,i,o=null){return sd(()=>{if(null==s&&(s=mk()),ml(s),3!==e.rank&&4!==e.rank)throw new cU(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new cU(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=yg(e,s);if("causal"===a)throw new cG("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=pk.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=pc(l,[0,3,1,2])),l})}yh.className="Softmax",dN.registerClass(yh);var yx=class e extends fo{constructor(t,n){if(super(n),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.verifyArgs(n),this.rank=t,c8(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new cG(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=yc(n.kernelSize,t,"kernelSize"),this.strides=yc(null==n.strides?1:n.strides,t,"strides"),this.padding=null==n.padding?"valid":n.padding,mu(this.padding),this.dataFormat=null==n.dataFormat?"channelsLast":n.dataFormat,ml(this.dataFormat),this.activation=ye(n.activation),this.useBias=null==n.useBias||n.useBias,this.biasInitializer=m2(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=fS(n.biasConstraint),this.biasRegularizer=yi(n.biasRegularizer),this.activityRegularizer=yi(n.activityRegularizer),this.dilationRate=yc(null==n.dilationRate?1:n.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new cU(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new cU(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new cU(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(cK("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!c5(e.kernelSize,"number",1,3))throw new cU(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:g7(this.activation),useBias:this.useBias,biasInitializer:c1(this.biasInitializer),biasRegularizer:c1(this.biasRegularizer),activityRegularizer:c1(this.activityRegularizer),biasConstraint:c1(this.biasConstraint)};return Object.assign(e,super.getConfig()),e}},yv=class e extends yx{constructor(t,n){super(t,n),this.kernel=null,e.verifyArgs(n),this.filters=n.filters,c8(this.filters,"filters"),this.kernelInitializer=m2(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=fS(n.kernelConstraint),this.kernelRegularizer=yi(n.kernelRegularizer)}build(e){e=m5(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new cU(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return sd(()=>{e=m6(e);let t,n=null==this.bias?null:this.bias.read(),r=c7(this.activation.getClassName());if(null!=r&&2===this.rank)t=yb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return sd(()=>{if(null==s&&(s=mk()),ml(s),3!==e.shape.length)throw new cU(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new cU(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new cU(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===s&&(e=pc(e,[0,2,1])),"causal"===a)throw new cG("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=oc(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=mD(o,n)),o})}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=yb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(3===this.rank)t=function(e,t,n,r=[1,1,1],a="valid",s,i){return sd(()=>{if(null==s&&(s=mk()),ml(s),4!==e.rank&&5!==e.rank)throw new cU(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new cU(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=yy(e,s);if("causal"===a)throw new cG("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=og(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=mD(o,n)),"channelsFirst"===s&&(o=pc(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new cG("convolutions greater than 3D are not implemented yet.");null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=m5(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){let r=ym(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t)).push(this.filters):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:c1(this.kernelInitializer),kernelRegularizer:c1(this.kernelRegularizer),kernelConstraint:c1(this.kernelConstraint)};return Object.assign(e,super.getConfig()),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new cU(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},yw=class e extends yv{constructor(t){super(2,t),e.verifyArgs(t)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!c5(e.kernelSize,"number",1,2))throw new cU(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};yw.className="Conv2D",dN.registerClass(yw);var yk=class e extends yv{constructor(t){super(3,t),e.verifyArgs(t)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!(Array.isArray(e.kernelSize)&&(1===e.kernelSize.length||3===e.kernelSize.length)))throw new cU(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};yk.className="Conv3D",dN.registerClass(yk);var yI=class extends yw{constructor(e){if(super(e),this.inputSpec=[new fn({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new cU(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=m5(e)).length)throw new cU("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new cU("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new fn({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return sd(()=>{let t=m6(e);if(4!==t.shape.length)throw new cU(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n=t.shape,r=n[0],a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);let i=n[a],o=n[s],l=this.kernelSize[0],u=this.kernelSize[1],p=this.strides[0],d=this.strides[1],h=[r,yf(i,p,l,this.padding),yf(o,d,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=pc(t,[0,2,3,1]));let c=of(t,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(c=pc(c,[0,3,1,2])),null!=this.bias&&(c=mD(c,this.bias.read(),this.dataFormat)),null!=this.activation&&(c=this.activation.apply(c)),c})}computeOutputShape(e){let t=(e=m5(e)).slice(),n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=yf(t[r],o,s,this.padding),t[a]=yf(t[a],l,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};yI.className="Conv2DTranspose",dN.registerClass(yI);var yS=class extends yk{constructor(e){if(super(e),this.inputSpec=[new fn({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new cU(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=m5(e)).length)throw new cU("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new cU("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new fn({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return sd(()=>{let t=m6(e);if(5!==t.shape.length)throw new cU(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n=t.shape,r=n[0],a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);let o=n[i],l=n[a],u=n[s],p=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],c=this.strides[0],m=this.strides[1],f=this.strides[2],g=[r,yf(o,c,p,this.padding),yf(l,m,d,this.padding),yf(u,f,h,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=pc(t,[0,2,3,4,1]));let y=ob(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=pc(y,[0,4,1,2,3])),null!==this.bias&&(y=mD(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y})}computeOutputShape(e){let t=(e=m5(e)).slice(),n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],p=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=yf(t[r],u,i,this.padding),t[a]=yf(t[a],p,o,this.padding),t[s]=yf(t[s],d,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};yS.className="Conv3DTranspose",dN.registerClass(yS);var yN=class extends yv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new cU("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new cU("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new cU(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=m2(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=yi(t.depthwiseRegularizer),this.depthwiseConstraint=fS(t.depthwiseConstraint),this.pointwiseInitializer=m2(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=yi(t.pointwiseRegularizer),this.pointwiseConstraint=fS(t.pointwiseConstraint)}build(e){if((e=m5(e)).length<this.rank+2)throw new cU(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new cU(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters),this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new fn({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return sd(()=>{let t;if(e=m6(e),1===this.rank)throw new cG("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=pc(e,[0,2,3,1])),t=uM(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=mD(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=pc(t,[0,3,1,2])),t})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=c1(this.depthwiseInitializer),e.pointwiseInitializer=c1(this.pointwiseInitializer),e.depthwiseRegularizer=c1(this.depthwiseRegularizer),e.pointwiseRegularizer=c1(this.pointwiseRegularizer),e.depthwiseConstraint=c1(this.depthwiseConstraint),e.pointwiseConstraint=c1(this.pointwiseConstraint),e}};yN.className="SeparableConv";var yT=class extends yN{constructor(e){super(2,e)}};yT.className="SeparableConv2D",dN.registerClass(yT);var y_=class e extends yv{constructor(t){super(1,t),e.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!c5(e.kernelSize,"number",1,1))throw new cU(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};y_.className="Conv1D",dN.registerClass(y_);var yC=class extends fo{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return sd(()=>{if(e=m6(e),"channelsLast"===this.dataFormat){let t=mT(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return mT(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=mT(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return mT(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}};yC.className="Cropping2D",dN.registerClass(yC);var yE=class extends fo{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ml(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,c6(mr,"InterpolationFormat",this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return sd(()=>{let t=m6(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=pc(t,[0,2,3,1]);let e=this.size[0]*n[2],r=this.size[1]*n[3];return pc("nearest"===this.interpolation?dv.resizeNearestNeighbor(t,[e,r]):dv.resizeBilinear(t,[e,r]),[0,3,1,2])}{let e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?dv.resizeNearestNeighbor(t,[e,r]):dv.resizeBilinear(t,[e,r])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation};return Object.assign(e,super.getConfig()),e}};yE.className="UpSampling2D",dN.registerClass(yE);var y$=class extends yx{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=m2(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=fS(e.depthwiseConstraint),this.depthwiseRegularizer=yi(e.depthwiseRegularizer)}build(e){if((e=m5(e)).length<4)throw new cU(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new cU(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return sd(()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return sd(()=>{null==a&&(a=mk()),ml(a);let s=yg(e,a);if(4!==e.rank)throw new cU(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new cU(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return s=oN(s,t,n,"same"===r?"same":"valid","NHWC",null),"channelsFirst"===a&&(s=pc(s,[0,3,1,2])),s})}(e=m6(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,0);return this.useBias&&(t=mD(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=m5(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=ym(t,this.kernelSize[0],this.padding,this.strides[0]),s=ym(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=c1(this.depthwiseInitializer),e.depthwiseRegularizer=c1(this.depthwiseRegularizer),e.depthwiseConstraint=c1(this.depthwiseRegularizer),e}};function yA(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new cU("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function yF(e,t,n,r=!1,a,s,i=!1,o=!1){return sd(()=>{let l,u=t.shape.length;if(u<3)throw new cU(`Input should be at least 3D, but is ${u}D.`);let p=[1,0].concat(mv(2,u));if(t=pc(t,p),null!=s)throw new cG("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=ig(ig(a,"bool"),"float32")).rank===u-1&&(a=o6(a,-1)),a=pc(a,p)),r&&(t=u_(t,0),null!=a&&(a=u_(a,0)));let d=[],h,c=n,m=t.shape[0],f=po(t),g;null!=a&&(g=po(a));for(let t=0;t<m;++t){let n=f[t],r=sd(()=>e(n,c));if(null==a)h=r[0],c=r[1];else{let e=sd(()=>{let e=g[t],n=lS(lX(e),e);return{output:ix(ik(r[0],e),ik(c[0],n)),newStates:c.map((t,a)=>ix(ik(r[1][a],e),ik(t,n)))}});h=e.output,c=e.newStates}o&&d.push(h)}return o&&(l=uJ(d,1)),[h,l,c]})}y$.className="DepthwiseConv2D",dN.registerClass(y$);var yR=class e extends fo{constructor(e){let t;if(super(e),null==e.cell)throw new cU("cell property is missing for the constructor of RNN.");if(null==(t=Array.isArray(e.cell)?new yW({cells:e.cell}):e.cell).stateSize)throw new cU("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new fn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?mv(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){m3(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],!this.returnState)return r;{let n=[];for(let r of t)n.push([e[0],r]);return[r].concat(n)}}computeMask(e,t){return sd(()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;return this.returnState?[e].concat(this.states.map(e=>null)):e})}get states(){if(null!=this.states_)return this.states_;{let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}}set states(e){this.states_=e}build(e){let t;if(null!=this.numConstants)throw new cG("Constants support is not implemented in RNN yet.");m3(e)&&(e=e[0]);let n=this.stateful?e[0]:null,r=e.slice(2);this.inputSpec[0]=new fn({shape:[n,null,...r]});let a=[e[0]].concat(e.slice(2));if(this.cell.build(a),t=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!at.arraysEqual(this.stateSpec.map(e=>e.shape[e.shape.length-1]),t))throw new cU(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=t.map(e=>new fn({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){sd(()=>{if(!this.stateful)throw new cW("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new cU("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>lz([n,e])):this.states_=[lz([n,this.cell.stateSize])];else if(null==e)sh(this.states_),null!=this.keptStates&&(sh(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>lz([n,e])):this.states_[0]=lz([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new cU(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):sh(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t],a=[n,Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize];if(!at.arraysEqual(r.shape,a))throw new cU(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map(e=>sc(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=yA(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){for(let e of(t.initialState=n,s=s.concat(n),this.stateSpec=[],n))this.stateSpec.push(new fn({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),!(s[0]instanceof fr))return super.apply(e,t);{let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}}call(e,t){return sd(()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=m6(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new cU(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=yF((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]},e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],p=o[2];this.stateful&&this.resetStates(p,r);let d=this.returnSequences?u:l;return this.returnState?[d].concat(p):d})}getInitialState(e){return sd(()=>{let t=lz(e.shape);return t=mI(t=o1(t,[1,2])),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?mE(t,[1,e]):t):this.cell.stateSize>1?[mE(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let t=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(n.numConstants=this.numConstants);let r=this.cell.getConfig();return this.getClassName()===e.className&&(n.cell={className:this.cell.getClassName(),config:r}),Object.assign(Object.assign(Object.assign({},r),t),n)}static fromConfig(e,t,n={}){let r=f2(t.cell,n);return new e(Object.assign(t,{cell:r}))}};yR.className="RNN",dN.registerClass(yR);var yD=class extends fo{},yM=class extends yD{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,c8(this.units,"units"),this.activation=ye(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=m2(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=m2(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=m2(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=yi(e.kernelRegularizer),this.recurrentRegularizer=yi(e.recurrentRegularizer),this.biasRegularizer=yi(e.biasRegularizer),this.kernelConstraint=fS(e.kernelConstraint),this.recurrentConstraint=fS(e.recurrentConstraint),this.biasConstraint=fS(e.biasConstraint),this.dropout=mb([1,mx([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=mb([1,mx([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=m5(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return sd(()=>{if(2!==e.length)throw new cU(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yV({ones:()=>lX(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yV({ones:()=>lX(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;a=null!=s?mA(ik(e,s),this.kernel.read()):mA(e,this.kernel.read()),null!=this.bias&&(a=mD(a,this.bias.read())),null!=i&&(n=ik(n,i));let o=ix(a,mA(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:g7(this.activation),useBias:this.useBias,kernelInitializer:c1(this.kernelInitializer),recurrentInitializer:c1(this.recurrentInitializer),biasInitializer:c1(this.biasInitializer),kernelRegularizer:c1(this.kernelRegularizer),recurrentRegularizer:c1(this.recurrentRegularizer),biasRegularizer:c1(this.biasRegularizer),activityRegularizer:c1(this.activityRegularizer),kernelConstraint:c1(this.kernelConstraint),recurrentConstraint:c1(this.recurrentConstraint),biasConstraint:c1(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};yM.className="SimpleRNNCell",dN.registerClass(yM);var yO=class extends yR{constructor(e){e.cell=new yM(e),super(e)}call(e,t){return sd(()=>{null!=this.cell.dropoutMask&&(sh(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(sh(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return new e(t)}};yO.className="SimpleRNN",dN.registerClass(yO);var yL=class extends yD{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new cU("GRUCell does not support reset_after parameter set to true.");this.units=e.units,c8(this.units,"units"),this.activation=ye(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ye(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=m2(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=m2(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=m2(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=yi(e.kernelRegularizer),this.recurrentRegularizer=yi(e.recurrentRegularizer),this.biasRegularizer=yi(e.biasRegularizer),this.kernelConstraint=fS(e.kernelConstraint),this.recurrentConstraint=fS(e.recurrentConstraint),this.biasConstraint=fS(e.biasConstraint),this.dropout=mb([1,mx([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=mb([1,mx([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){let t=(e=m5(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return sd(()=>{if(2!==e.length)throw new cU(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yV({ones:()=>lX(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yV({ones:()=>lX(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,s=this.recurrentDropoutMask,i,o;0<this.dropout&&this.dropout<1&&(e=ik(e,a[0]));let l=mA(e,this.kernel.read());this.useBias&&(l=mD(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ik(r,s[0]));let u=this.recurrentKernel.read(),[p,d]=uK(u,[2*this.units,this.units],u.rank-1),h=mA(r,p),[c,m,f]=uK(l,3,l.rank-1),[g,y]=uK(h,2,h.rank-1);i=this.recurrentActivation.apply(ix(c,g));let b=mA(ik(this.recurrentActivation.apply(ix(m,y)),r),d);o=this.activation.apply(ix(f,b));let x=ix(ik(i,r),ik(ix(1,lw(i)),o));return[x,x]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:g7(this.activation),recurrentActivation:g7(this.recurrentActivation),useBias:this.useBias,kernelInitializer:c1(this.kernelInitializer),recurrentInitializer:c1(this.recurrentInitializer),biasInitializer:c1(this.biasInitializer),kernelRegularizer:c1(this.kernelRegularizer),recurrentRegularizer:c1(this.recurrentRegularizer),biasRegularizer:c1(this.biasRegularizer),activityRegularizer:c1(this.activityRegularizer),kernelConstraint:c1(this.kernelConstraint),recurrentConstraint:c1(this.recurrentConstraint),biasConstraint:c1(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}};yL.className="GRUCell",dN.registerClass(yL);var yz=class extends yR{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new yL(e),super(e)}call(e,t){return sd(()=>{null!=this.cell.dropoutMask&&(sh(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(sh(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};yz.className="GRU",dN.registerClass(yz);var yP=class extends yD{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,c8(this.units,"units"),this.activation=ye(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ye(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=m2(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=m2(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=m2(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=yi(e.kernelRegularizer),this.recurrentRegularizer=yi(e.recurrentRegularizer),this.biasRegularizer=yi(e.biasRegularizer),this.kernelConstraint=fS(e.kernelConstraint),this.recurrentConstraint=fS(e.recurrentConstraint),this.biasConstraint=fS(e.biasConstraint),this.dropout=mb([1,mx([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=mb([1,mx([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n;let r=(e=m5(e))[e.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,r=this.units;n=new((t=class extends mz{apply(t,n){let a=e.apply([r]),s=new mB().apply([r]),i=e.apply([2*r]);return mC(mC(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return sd(()=>{let n=null!=t.training&&t.training;if(3!==e.length)throw new cU(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yV({ones:()=>lX(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yV({ones:()=>lX(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,o,l;0<this.dropout&&this.dropout<1&&(e=ik(e,s[0]));let u=mA(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ik(r,i[0])),u=ix(u,mA(r,this.recurrentKernel.read())),this.useBias&&(u=mD(u,this.bias.read()));let[p,d,h,c]=uK(u,4,u.rank-1);o=this.recurrentActivation.apply(p),l=ix(ik(this.recurrentActivation.apply(d),a),ik(o,this.activation.apply(h)));let m=ik(this.recurrentActivation.apply(c),this.activation.apply(l));return[m,m,l]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:g7(this.activation),recurrentActivation:g7(this.recurrentActivation),useBias:this.useBias,kernelInitializer:c1(this.kernelInitializer),recurrentInitializer:c1(this.recurrentInitializer),biasInitializer:c1(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:c1(this.kernelRegularizer),recurrentRegularizer:c1(this.recurrentRegularizer),biasRegularizer:c1(this.biasRegularizer),activityRegularizer:c1(this.activityRegularizer),kernelConstraint:c1(this.kernelConstraint),recurrentConstraint:c1(this.recurrentConstraint),biasConstraint:c1(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}};yP.className="LSTMCell",dN.registerClass(yP);var yB=class extends yR{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new yP(e),super(e)}call(e,t){return sd(()=>{null!=this.cell.dropoutMask&&(sh(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(sh(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};yB.className="LSTM",dN.registerClass(yB);var yW=class extends yD{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return sd(()=>{let n=e.slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a=[],s;for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}for(let e of(n=[],a.slice().reverse()))n.push(...e);return[s[0]].concat(n)})}build(e){let t;m3(e)&&(e=e[0]),this.cells.forEach((n,r)=>{mh(`RNNCell_${r}`,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t={cells:this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){let r=[];for(let e of t.cells)r.push(f2(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return fe(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}ft(t)}};function yV(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>{var e;return null!=s?s(t(),n):(e=t(),sd(()=>pb(e,n,void 0,void 0)))},o=()=>mM(i,t,r);return!a||a<=1?sc(o().clone()):Array(a).fill(void 0).map(o).map(e=>sc(e.clone()))}yW.className="StackedRNNCells",dN.registerClass(yW);var yU=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&0>t.indexOf(r)&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var a=0,r=Object.getOwnPropertySymbols(e);a<r.length;a++)0>t.indexOf(r[a])&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]]);return n},yG=class extends yR{constructor(e){if(e.unroll)throw new cG("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new cG("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new fn({ndim:5})]}call(e,t){return sd(()=>{if(null!=this.cell.dropoutMask&&(sh(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(sh(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new cU("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...[,,].fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return sd(()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=lz([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){sd(()=>{if(!this.stateful)throw new cW("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new cU("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>lz(a)):this.states_=[lz(a)];else if(null==e)sh(this.states_),null!=this.keptStates&&(sh(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>lz(a)):this.states_[0]=lz(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new cU(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):sh(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t];if(!at.arraysEqual(n.shape,a))throw new cU(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>sc(e.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],p=ym(l,r[0],a,s[0],i[0]),d=ym(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,p,d]:[p,d,n]]}};yG.className="ConvRNN2D";var yH=class extends yP{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,c8(this.filters,"filters"),this.kernelSize=yc(n,2,"kernelSize"),this.kernelSize.forEach(e=>c8(e,"kernelSize")),this.strides=yc(r||1,2,"strides"),this.strides.forEach(e=>c8(e,"strides")),this.padding=a||"valid",mu(this.padding),this.dataFormat=s||"channelsLast",ml(this.dataFormat),this.dilationRate=yc(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>c8(e,"dilationRate"))}build(e){var t;e=m5(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new cU(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,r=this.filters;e=new((t=class extends mz{apply(e,t){return m_([n.apply([r]),lP([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return sd(()=>{if(3!==e.length)throw new cU(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yV({ones:()=>lX(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?ik(t[n],e):e,l=o(r,i,0),u=o(r,i,1),p=o(r,i,2),d=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yV({ones:()=>lX(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,c=o(a,h,0),m=o(a,h,1),f=o(a,h,2),g=o(a,h,3),[y,b,x,v]=uK(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?uK(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),p=this.inputConv(p,x,I,this.padding),d=this.inputConv(d,v,S,this.padding);let[N,T,_,C]=uK(this.recurrentKernel.read(),4,3);c=this.recurrentConv(c,N),m=this.recurrentConv(m,T),f=this.recurrentConv(f,_),g=this.recurrentConv(g,C);let E=this.recurrentActivation.apply(ix(l,c)),$=this.recurrentActivation.apply(ix(u,m)),A=ix(ik($,s),ik(E,this.activation.apply(ix(p,f)))),F=ik(this.recurrentActivation.apply(ix(d,g)),this.activation.apply(A));return[F,F,A]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=yU(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){let a=oh(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?mD(a,n,this.dataFormat):a}recurrentConv(e,t){return oh(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};yH.className="ConvLSTM2DCell",dN.registerClass(yH);var yj=class extends yG{constructor(e){super(Object.assign(Object.assign({},e),{cell:new yH(e)}))}static fromConfig(e,t){return new e(t)}};yj.className="ConvLSTM2D",dN.registerClass(yj);var yq=class extends fo{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return sd(()=>{this.invokeCallHook(e,t);let n=m6(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,r=this.getNoiseShape(n);return mM(()=>{var e,t;return e=this.rate,t=this.seed,sd(()=>pb(n,e,r,t))},()=>n,e)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed};return Object.assign(e,super.getConfig()),e}dispose(){return super.dispose()}};yq.className="Dropout",dN.registerClass(yq);var yK=class extends yq{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};yK.className="SpatialDropout1D",dN.registerClass(yK);var yX=class extends fo{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,c8(this.units,"units"),this.activation=ye(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=m2(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=m2(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=fS(e.kernelConstraint),this.biasConstraint=fS(e.biasConstraint),this.kernelRegularizer=yi(e.kernelRegularizer),this.biasRegularizer=yi(e.biasRegularizer),this.activityRegularizer=yi(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=m5(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=m5(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return sd(()=>{this.invokeCallHook(e,t);let n=m6(e),r=c7(this.activation.getClassName()),a;return null!=r?a=mA(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=mA(n,this.kernel.read()),null!=this.bias&&(a=mD(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){let e={units:this.units,activation:g7(this.activation),useBias:this.useBias,kernelInitializer:c1(this.kernelInitializer),biasInitializer:c1(this.biasInitializer),kernelRegularizer:c1(this.kernelRegularizer),biasRegularizer:c1(this.biasRegularizer),activityRegularizer:c1(this.activityRegularizer),kernelConstraint:c1(this.kernelConstraint),biasConstraint:c1(this.biasConstraint)};return Object.assign(e,super.getConfig()),e}};yX.className="Dense",dN.registerClass(yX);var yY=class extends fo{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){for(let t of(e=m5(e)).slice(1))if(null==t)throw new cU(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],my(e,1)]}call(e,t){return sd(()=>{this.invokeCallHook(e,t);let n=m6(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=pc(n,e)}return function(e){if(e.rank<=1)throw new cU(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],my(e.shape,1)];return iZ(e,t)}(n)})}getConfig(){let e={};return null!=this.dataFormat&&(e.dataFormat=this.dataFormat),Object.assign(e,super.getConfig()),e}};yY.className="Flatten",dN.registerClass(yY);var yZ=class extends fo{constructor(e){super(e),this.supportsMasking=!0,this.activation=ye(e.activation)}call(e,t){return sd(()=>{this.invokeCallHook(e,t);let n=m6(e);return this.activation.apply(n)})}getConfig(){let e={activation:g7(this.activation)};return Object.assign(e,super.getConfig()),e}};yZ.className="Activation",dN.registerClass(yZ);var yJ=class extends fo{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return sd(()=>{var t,n;return t=e=m6(e),n=this.n,sd(()=>{if(2!==t.shape.length)throw new cU(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return mE(mI(t,1),[1,n,1])})})}getConfig(){let e={n:this.n};return Object.assign(e,super.getConfig()),e}};yJ.className="RepeatVector",dN.registerClass(yJ);var yQ=class extends fo{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let e=0;e<r.length;++e){let t=r[e];if(this.isUnknown(t)){if(null===s)s=e;else throw new cU("Can only specifiy one unknown dimension.")}else a*=t}let i=my(e);if(null!==s){if(0===a||i%a!=0)throw new cU(n);r[s]=i/a}else if(i!==a)throw new cU(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return sd(()=>{this.invokeCallHook(e,t);let n=m6(e),r=n.shape;return iZ(n,r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape)))})}getConfig(){let e={targetShape:this.targetShape};return Object.assign(e,super.getConfig()),e}};yQ.className="Reshape",dN.registerClass(yQ);var y0=class extends fo{constructor(e){if(super(e),null==e.dims)throw Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=mv(1,e.dims.length+1);if(!at.arraysEqual(e.dims.slice().sort(),t))throw Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new fn({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=m5(e)).slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return pc(m6(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims};return Object.assign(e,super.getConfig()),e}};y0.className="Permute",dN.registerClass(y0);var y1=class extends fo{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e?this.maskValue=null==e.maskValue?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){return iC(lq(m6(e),this.maskValue),-1)}call(e,t){return sd(()=>{this.invokeCallHook(e,t);let n=m6(e),r=iC(lq(n,this.maskValue),-1,!0);return ik(n,ig(r,n.dtype))})}};y1.className="Masking",dN.registerClass(y1);var y2=class extends fo{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(cZ(e.inputLength))}this.inputDim=e.inputDim,c8(this.inputDim,"inputDim"),this.outputDim=e.outputDim,c8(this.outputDim,"outputDim"),this.embeddingsInitializer=m2(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=yi(e.embeddingsRegularizer),this.activityRegularizer=yi(e.activityRegularizer),this.embeddingsConstraint=fS(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return sd(()=>this.maskZero?lq(e=m6(e),oD(e)):null)}computeOutputShape(e){if(e=m5(e),null==this.inputLength)return[...e,this.outputDim];let t=cZ(this.inputLength);if(t.length!==e.length-1)throw new cU(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new cU(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return sd(()=>{this.invokeCallHook(e,t);let n=m6(e);"int32"!==n.dtype&&(n=ig(n,"int32"));let r=mF(this.embeddings.read(),iZ(n,[n.size]));return iZ(r,m5(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:c1(this.embeddingsInitializer),embeddingsRegularizer:c1(this.embeddingsRegularizer),activityRegularizer:c1(this.activityRegularizer),embeddingsConstraint:c1(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength};return Object.assign(e,super.getConfig()),e}};y2.className="Embedding",dN.registerClass(y2);var y3=class extends fo{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new cG}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new cU("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[m5(e)]),e.length<2)throw new cU(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let n of e)null!=n&&null!==n[0]&&t.push(n[0]);if((t=c4(t)).length>1)throw new cU(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}let r=e.map(e=>e.length);-1===e.indexOf(null)&&1===c4(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return sd(()=>{if(!this.reshapeRequired)return this.mergeFunction(e);{let t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){let r=mx(n);for(let n of e){let e=n.rank;for(let t=0;t<r-e;++t)n=mI(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let r of e){let e=r.rank;if(null==e){let e=r.shape,a=e[0],s=e.slice(1).concat([a]),i=iZ(r,[a].concat(my(e.slice(1))));i=iZ(i=pc(i,[1,0]),s),t.push(i),n=!0}else if(e>1){let a=mv(1,e).concat([0]);t.push(pc(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t),a=r.rank;if(n){if(null==a){let e=r.shape,t=e.length,n=e[t-1],a=[n].concat(e.slice(0,e.length-1));r=iZ(pc(iZ(r,[-1,n]),[1,0]),a)}else a>1&&(r=pc(r,[a-1].concat(mv(0,a-1))))}return r}}})}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){let r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let t of e)null!=t&&null!==t[0]&&n.push(t[0]);return 1===(n=c4(n)).length?n.concat(t):[null].concat(t)}computeMask(e,t){return sd(()=>{if(null==t)return null;if(!Array.isArray(t))throw new cU("`mask` should be an Array");if(!Array.isArray(e))throw new cU("`inputs` should be an Array");if(t.length!==e.length)throw new cU(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:o6(e,0)))[0];for(let e=1;e<t.length-1;++e)n=l_(n,t[e]);return n})}},y4=class extends y3{constructor(e){super(e)}mergeFunction(e){return sd(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ix(t,e[n]);return t})}};y4.className="Add",dN.registerClass(y4);var y6=class extends y3{constructor(e){super(e)}mergeFunction(e){return sd(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ik(t,e[n]);return t})}};y6.className="Multiply",dN.registerClass(y6);var y5=class extends y3{constructor(e){super(e)}mergeFunction(e){return sd(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ix(t,e[n]);return ik(1/e.length,t)})}};y5.className="Average",dN.registerClass(y5);var y8=class extends y3{constructor(e){super(e)}mergeFunction(e){return sd(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=lO(t,e[n]);return t})}};y8.className="Maximum",dN.registerClass(y8);var y7=class extends y3{constructor(e){super(e)}mergeFunction(e){return sd(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=lW(t,e[n]);return t})}};y7.className="Minimum",dN.registerClass(y7);var y9=class extends y3{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||1===e.length)throw new cU("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let n of e)if(null!=n){t=!1;break}if(t)return;let n=[];for(let t=0;t<e.length;++t){let r=e[t].slice();r.splice(this.axis,1);let a=!1;for(let e of n)if(at.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new cU("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return sd(()=>m_(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new cU("A `Concatenate` layer should be called on a list of inputs.");let t=e[0].slice(),n=this.axis<0?t.length+this.axis:this.axis;for(let r of e.slice(1)){if(null==t[n]||null==r[n]){t[n]=null;break}t[n]+=r[n]}return t}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new cU("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new cU("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new cU(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return sd(()=>{let n=!0;if(t.forEach(e=>{if(null!=e){n=!1;return}}),n)return null;let r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(ig(lX(e[n]),"bool")):t[n].rank<e[n].rank?r.push(o6(t[n],-1)):r.push(t[n]);return i_(i0(r,this.axis),-1,!1)})}getConfig(){let e={axis:this.axis};return Object.assign(e,super.getConfig()),e}};function be(e,t){for(;e<0;)e+=t;return e}y9.className="Concatenate",dN.registerClass(y9);var bt=class extends y3{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){at.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new cG("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new cU(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new cU(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],r;return r=Array.isArray(this.axes)?this.axes.map((t,n)=>be(t,e[n].shape.length)):[be(this.axes,t.shape.length),be(this.axes,n.shape.length)],this.normalize&&(t=f3(t,r[0]),n=f3(n,r[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new cG("batchDot is not implemented for tensors of 4D or higher rank yet");if(at.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),at.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new cG("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);let s=n;return sd(()=>{let n,i;if(r>a){n=r-a;let e=[];for(let t=0;t<n;++t)e.push(1);t=iZ(t,t.shape.concat(e))}else if(a>r){n=a-r;let t=[];for(let e=0;e<n;++e)t.push(1);e=iZ(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?o1(ik(e,t),s[0]):o1(ik(pc(e,[1,0]),t),s[1]);else{let n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=i1(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;let t=[];for(let r=e;r<e+n;++r)t.push(r);i=uZ(i,t)}return 1===i.shape.length&&(i=o6(i,1)),i})}(t,n,r)}interpretAxes(e,t){return Array.isArray(this.axes)?this.axes:[be(this.axes,e.length),be(this.axes,t.length)]}computeOutputShape(e){at.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new cG("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize};return Object.assign(e,super.getConfig()),e}};bt.className="Dot",dN.registerClass(bt);var bn=class extends fo{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return sd(()=>{this.invokeCallHook(e,t);let n=m6(e);return mM(()=>ix(m$(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};bn.className="GaussianNoise",dN.registerClass(bn);var br=class extends fo{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return sd(()=>{this.invokeCallHook(e,t);let n=m6(e);return this.rate>0&&this.rate<1?mM(()=>{let e=Math.sqrt(this.rate/(1-this.rate));return ik(n,m$(n.shape,1,e))},()=>n,t.training||!1):n})}};br.className="GaussianDropout",dN.registerClass(br);var ba=class extends fo{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||m6(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return sd(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return mM(()=>{let t=m6(e),r=ln(uv(n),this.rate);r=ig(r,"float32");let a=((1-this.rate)*(1+3.09091329228798*this.rate))**-.5,s=-(-1.7580993408473766*a)*this.rate,i=ix(ik(t,r),ik(ix(r,-1),-1.7580993408473766));return ix(ik(i,a),s)},()=>m6(e),t.training||!1)}return e})}};function bs(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=i7(e,t,n,r,a,s);else if(3===e.rank)i=i9(e,t,n,r,a,s);else if(4===e.rank)i=oe(e,t,n,r,a,s);else throw new cG(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}ba.className="AlphaDropout",dN.registerClass(ba);var bi=class extends fo{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=m2(e.betaInitializer||"zeros"),this.gammaInitializer=m2(e.gammaInitializer||"ones"),this.movingMeanInitializer=m2(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=m2(e.movingVarianceInitializer||"ones"),this.betaConstraint=fS(e.betaConstraint),this.gammaConstraint=fS(e.gammaConstraint),this.betaRegularizer=yi(e.betaRegularizer),this.gammaRegularizer=yi(e.gammaRegularizer)}build(e){e=m5(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new cU(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new fn({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return sd(()=>{let n=null!=t.training&&t.training,r=m6(e),a=r.shape,s=a.length,i=mv(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=cq(1,s);l[o]=a[o];let u=i.slice();u.sort();let p=!at.arraysEqual(u,mv(0,s).slice(0,s-1));if(!n)return p?bs(r,iZ(this.movingMean.read(),l),iZ(this.movingVariance.read(),l),this.center?iZ(this.beta.read(),l):null,this.scale?iZ(this.gamma.read(),l):null,this.epsilon):bs(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon);let[d,h,c]=function(e,t,n,r,a=.001){return at.arraysEqual(r.slice().sort(),mv(0,e.rank-1))?function(e,t,n,r,a=.001){return sd(()=>{let s=lG(e,r),i=s.mean,o=s.variance;return[bs(e,i,o,n,t,a),i,o]})}(e,t,n,r,a):function(e,t,n,r,a=.001){return sd(()=>{let s=lG(e,r),i=s.mean,o=s.variance,l=[];for(let t of mv(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=iZ(i,l),p=iZ(o,l),d=null==t?null:iZ(t,l);return[bs(e,u,p,null==n?null:iZ(n,l),d,a),i,o]})}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(e,t,n)=>{sd(()=>{let r=e.read(),a=ik(lS(r,t),1-n);e.write(lS(r,a))})};return m(this.movingMean,h,this.momentum),m(this.movingVariance,c,this.momentum),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:c1(this.betaInitializer),gammaInitializer:c1(this.gammaInitializer),movingMeanInitializer:c1(this.movingMeanInitializer),movingVarianceInitializer:c1(this.movingVarianceInitializer),betaRegularizer:c1(this.betaRegularizer),gammaRegularizer:c1(this.gammaRegularizer),betaConstraint:c1(this.betaConstraint),gammaConstraint:c1(this.gammaConstraint)};return Object.assign(e,super.getConfig()),e}};bi.className="BatchNormalization",dN.registerClass(bi);var bo=class extends fo{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let e of this.axis)if(!Number.isInteger(e))throw Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=m2(e.betaInitializer||"zeros"),this.gammaInitializer=m2(e.gammaInitializer||"ones"),this.betaRegularizer=yi(e.betaRegularizer),this.gammaRegularizer=yi(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=m5(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(let e of this.axis)if(e<0||e>=t)throw Error(`Invalid axis: ${e}`);if(this.axis.length!==c4(this.axis).length)throw Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(t=>e[t]);this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){let n=m6(e),r=n.shape,a=r.length;return sd(()=>{let{mean:e,variance:t}=lG(n,this.axis,!0),s=cq(1,a);for(let e of this.axis)s[e]=r[e];let i=e=>null!=e&&e.shape.length!==a?iZ(e,s):e,o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null,u=[],p=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),p.push(1)):(u.push(1),p.push(r[e]));return e=o8(e,u),t=o8(t,u),null!=o&&(o=o8(o,p)),null!=l&&(l=o8(l,p)),bs(n,e,t,l,o,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:c1(this.betaInitializer),gammaInitializer:c1(this.gammaInitializer),betaRegularizer:c1(this.betaRegularizer),gammaRegularizer:c1(this.gammaRegularizer)};return Object.assign(e,super.getConfig()),e}};bo.className="LayerNormalization",dN.registerClass(bo);var bl=class extends fo{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?mk():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{let t,n;if(e.padding=e.padding,2!==e.padding.length)throw new cU(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new cU(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new cU(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new fn({ndim:4})]}computeOutputShape(e){let t,n;return e=m5(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return sd(()=>{var t,n,r;return t=m6(e),n=this.padding,r=this.dataFormat,sd(()=>{if(4!==t.rank)throw new cU(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new cU("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r=mk()),"channelsLast"!==r&&"channelsFirst"!==r)throw new cU(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);return lZ(t,"channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]])})})}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}};function bu(e,t,n,r,a,s){return sd(()=>{ml(a),mp(s),mu(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a=mk()),null==s&&(s="max"),e=yg(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?lR(e,t,n,o):iJ(e,t,n,o),"channelsFirst"===a&&(i=pc(i,[0,3,1,2])),i})}function bp(e,t,n,r,a,s){return sd(()=>{ml(a),mp(s),mu(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a=mk()),null==s&&(s="max"),e=yy(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?lD(e,t,n,o):iQ(e,t,n,o),"channelsFirst"===a&&(i=pc(i,[0,4,1,2,3])),i})}bl.className="ZeroPadding2D",dN.registerClass(bl);var bd=class extends fo{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&1===e.poolSize.length&&"number"==typeof e.poolSize[0])this.poolSize=e.poolSize;else throw new cU(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(c8(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else if(Array.isArray(e.strides)&&1===e.strides.length&&"number"==typeof e.strides[0])this.strides=e.strides;else throw new cU(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);c8(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,mu(this.padding),this.inputSpec=[new fn({ndim:3})]}computeOutputShape(e){let t=ym((e=m5(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return sd(()=>(this.invokeCallHook(e,t),e=mI(m6(e),2),uZ(this.poolingFunction(m6(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast"),[2])))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides};return Object.assign(e,super.getConfig()),e}},bh=class extends bd{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ml(a),mu(r),bu(e,t,n,r,a,"max")}};bh.className="MaxPooling1D",dN.registerClass(bh);var bc=class extends bd{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ml(a),mu(r),bu(e,t,n,r,a,"avg")}};bc.className="AveragePooling1D",dN.registerClass(bc);var bm=class extends fo{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new cU(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];c8(this.poolSize,"poolSize"),c8(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ml(this.dataFormat),mu(this.padding),this.inputSpec=[new fn({ndim:4})]}computeOutputShape(e){e=m5(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=ym(t,this.poolSize[0],this.padding,this.strides[0]),n=ym(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return sd(()=>(this.invokeCallHook(e,t),this.poolingFunction(m6(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}},bf=class extends bm{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ml(a),mu(r),bu(e,t,n,r,a,"max")}};bf.className="MaxPooling2D",dN.registerClass(bf);var bg=class extends bm{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ml(a),mu(r),bu(e,t,n,r,a,"avg")}};bg.className="AveragePooling2D",dN.registerClass(bg);var by=class extends fo{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new cU(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];c8(this.poolSize,"poolSize"),c8(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ml(this.dataFormat),mu(this.padding),this.inputSpec=[new fn({ndim:5})]}computeOutputShape(e){e=m5(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=ym(t,this.poolSize[0],this.padding,this.strides[0]),n=ym(n,this.poolSize[1],this.padding,this.strides[1]),r=ym(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return sd(()=>(this.invokeCallHook(e,t),this.poolingFunction(m6(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}},bb=class extends by{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ml(a),mu(r),bp(e,t,n,r,a,"max")}};bb.className="MaxPooling3D",dN.registerClass(bb);var bx=class extends by{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ml(a),mu(r),bp(e,t,n,r,a,"avg")}};bx.className="AveragePooling3D",dN.registerClass(bx);var bv=class extends fo{constructor(e){super(e),this.inputSpec=[new fn({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new cG}},bw=class extends bv{constructor(e){super(e||{})}call(e,t){return sd(()=>lL(m6(e),1))}};bw.className="GlobalAveragePooling1D",dN.registerClass(bw);var bk=class extends bv{constructor(e){super(e||{})}call(e,t){return sd(()=>oX(m6(e),1))}};bk.className="GlobalMaxPooling1D",dN.registerClass(bk);var bI=class extends fo{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ml(this.dataFormat),this.inputSpec=[new fn({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new cG}getConfig(){let e={dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}},bS=class extends bI{call(e,t){return sd(()=>{let t=m6(e);return"channelsLast"===this.dataFormat?lL(t,[1,2]):lL(t,[2,3])})}};bS.className="GlobalAveragePooling2D",dN.registerClass(bS);var bN=class extends bI{call(e,t){return sd(()=>{let t=m6(e);return"channelsLast"===this.dataFormat?oX(t,[1,2]):oX(t,[2,3])})}};bN.className="GlobalMaxPooling2D",dN.registerClass(bN);var bT=class extends fo{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}};return Object.assign(e,super.getConfig()),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=f2(t.layer,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},b_=class extends bT{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=m5(e)).length<3)throw new cU(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=m5(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return sd(()=>yF((e,n)=>[m6(this.layer.call(e,t)),[]],e=m6(e),[],!1,null,null,!1,!0)[1])}};b_.className="TimeDistributed",dN.registerClass(b_);var bC=class extends bT{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=f2(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=f2(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,c6(mi,"BidirectionalMergeMode",this.mergeMode),e.weights)throw new cG("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,t)),this.backwardLayer.setWeights(e.slice(t))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(r=a.slice(1)),t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):cY(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=yA(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new cU("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let r=n.map(e=>new fn({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new cG("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof fr;for(let e of s)if(e instanceof fr!==o)throw new cU("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(!o)return super.apply(e,t);{let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}}call(e,t){return sd(()=>{let n,r,a=t.initialState,s,i;if(null==a)s=this.forwardLayer.call(e,t),i=this.backwardLayer.call(e,t);else{let n=a.slice(0,a.length/2),r=a.slice(a.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:n})),i=this.backwardLayer.call(e,Object.assign(t,{initialState:r}))}return this.returnState&&(Array.isArray(s)&&(n=s.slice(1).concat(i.slice(1))),s=s[0],i=i[0]),this.returnSequences&&(i=u_(i,1)),"concat"===this.mergeMode?r=m_([s,i]):"sum"===this.mergeMode?r=ix(s,i):"ave"===this.mergeMode?r=ik(.5,ix(s,i)):"mul"===this.mergeMode?r=ik(s,i):null==this.mergeMode&&(r=[s,i]),this.returnState?null==this.mergeMode?r.concat(n):[r].concat(n):r})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){mh(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),mh(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,!this.returnState)return n;{let e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode};return Object.assign(e,super.getConfig()),e}static fromConfig(e,t){let n=f2(t.layer);if(delete t.layer,null!=t.numConstants)throw new cG("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");return t.layer=n,new e(t)}};bC.className="Bidirectional",dN.registerClass(bC);var bE=class extends fo{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset};return Object.assign(e,super.getConfig()),e}call(e,t){return sd(()=>("float32"!==(e=m6(e)).dtype&&(e=ig(e,"float32")),ix(ik(e,this.scale),this.offset)))}};bE.className="Rescaling",dN.registerClass(bE);var{resizeBilinear:b$,cropAndResize:bA}=dv,bF=class extends fo{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,s,i,o){return sd(()=>{let l,u=!1,p=(r+t)/s,d=(a+n)/i,h=[t/s,n/i,p,d],c=[];3===e.rank?(u=!0,l=uJ([e])):l=e;for(let e=0;e<l.shape[0];e++)c.push(h);let m=bA(l,se(c,[c.length,4]),uk(0,c.length,1,"int32"),[r,a],"nearest");return ig(u?m6(po(m)):m,o)})}upsize(e,t,n,r){return sd(()=>ig(b$(e,[t,n]),r))}call(e,t){return sd(()=>{let t=m6(e),n=t.dtype,r=t.shape,a=r[r.length-3],s=r[r.length-2],i=0;a!==this.height&&(i=Math.floor((a-this.height)/2));let o=0;return s!==this.width&&0===(o=Math.floor((s-this.width)/2))&&(o=1),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,a,s,n):this.upsize(e,this.height,this.width,n)})}getConfig(){let e={height:this.height,width:this.width};return Object.assign(e,super.getConfig()),e}computeOutputShape(e){let t=(e=m5(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}};bF.className="CenterCrop",dN.registerClass(bF);var bR=class extends fo{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode};return Object.assign(e,super.getConfig()),e}computeOutputShape(e){return null==(e=m5(e))?[this.numTokens]:("oneHot"===this.outputMode&&1!==e[e.length-1]?e.push(this.numTokens):e[e.length-1]=this.numTokens,e)}call(e,t){return sd(()=>{let n;if("int32"!==(e=m6(e)).dtype&&(e=ig(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new cU(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);n=m6(t.countWeights)}let r=oX(e),a=oY(e),s=lt(this.numTokens,r).bufferSync().get(0),i=ln(a,0).bufferSync().get(0);if(!(s&&i))throw new cU(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let a=m6(e);if("int32"!==a.dtype&&(a=ig(a,"int32")),"int"===t)return a;let s=a.shape;if(0===a.rank&&(a=o6(a,-1)),"oneHot"===t&&1!==a.shape[a.shape.length-1]&&(a=o6(a,-1)),a.rank>2)throw new cU(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${a.rank}.`);let i=["multiHot","oneHot"].includes(t),o=a,l;if(l=void 0!==r&&"count"===t?oI(o,r,n,i):oI(o,[],n,i),"tfIdf"!==t)return l;if(r)return ik(l,r);throw new cU("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)})}};bR.className="CategoryEncoding",dN.registerClass(bR);var bD=new Set(["bilinear","nearest"]),bM=class extends fo{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(bD.has(e.interpolation))this.interpolation=e.interpolation;else throw new cU(`Invalid interpolation parameter: ${e.interpolation} is not implemented`)}else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){let t=(e=m5(e))[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio};return Object.assign(e,super.getConfig()),e}call(e,t){return sd(()=>{let t=[this.height,this.width];if("bilinear"===this.interpolation)return dv.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return dv.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw Error(`Interpolation is ${this.interpolation} but only ${[...bD]} are supported`)})}};bM.className="Resizing",dN.registerClass(bM);var bO=class{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}};bO.className="RandomSeed";var bL=class extends fo{constructor(e){super(e),this.randomGenerator=new bO(e.seed)}getConfig(){let e={seed:this.randomGenerator.seed};return Object.assign(e,super.getConfig()),e}};bL.className="BaseRandomLayer";var bz=new Set(["bilinear","nearest"]),bP=class extends bL{constructor(e){super(e);let{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new cU(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new cU(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new cU(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(n){if(bz.has(n))this.interpolation=n;else throw new cU(`Invalid interpolation parameter: ${n} is not implemented`)}}getConfig(){let e={factor:this.factor,interpolation:this.interpolation};return Object.assign(e,super.getConfig()),e}computeOutputShape(e){let t=(e=m5(e))[2];return[this.imgHeight,-1,t]}call(e,t){return sd(()=>{let t=m6(e);this.imgHeight=t.shape[t.shape.length-3];let n=t.shape[t.shape.length-2];this.widthFactor=uv([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);let a=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return dv.resizeBilinear(e,a);case"nearest":return dv.resizeNearestNeighbor(e,a);default:throw Error(`Interpolation is ${this.interpolation}
          but only ${[...bz]} are supported`)}})}};function bB(e){return new fl(e)}function bW(e){return new yp(e)}function bV(e){return new yo(e)}function bU(e){return new yl(e)}function bG(e){return new yu(e)}function bH(e){return new yh(e)}function bj(e){return new yd(e)}function bq(e){return new y_(e)}function bK(e){return new yw(e)}function bX(e){return new yI(e)}function bY(e){return new yk(e)}function bZ(e){return new yS(e)}function bJ(e){return new yT(e)}function bQ(e){return new yC(e)}function b0(e){return new yE(e)}function b1(e){return new y$(e)}function b2(e){return new yZ(e)}function b3(e){return new yX(e)}function b4(e){return new yq(e)}function b6(e){return new yK(e)}function b5(e){return new yY(e)}function b8(e){return new yJ(e)}function b7(e){return new yQ(e)}function b9(e){return new y0(e)}function xe(e){return new y2(e)}function xt(e){return new y4(e)}function xn(e){return new y5(e)}function xr(e){return new y9(e)}function xa(e){return new y8(e)}function xs(e){return new y7(e)}function xi(e){return new y6(e)}function xo(e){return new bt(e)}function xl(e){return new bi(e)}function xu(e){return new bo(e)}function xp(e){return new bl(e)}function xd(e){return new bc(e)}function xh(e){return xd(e)}function xc(e){return xd(e)}function xm(e){return new bg(e)}function xf(e){return xm(e)}function xg(e){return xm(e)}function xy(e){return new bx(e)}function xb(e){return xy(e)}function xx(e){return xy(e)}function xv(e){return new bw(e)}function xw(e){return new bS(e)}function xk(e){return new bk(e)}function xI(e){return new bN(e)}function xS(e){return new bh(e)}function xN(e){return new bf(e)}function xT(e){return new bb(e)}function x_(e){return new yz(e)}function xC(e){return new yL(e)}function xE(e){return new yB(e)}function x$(e){return new yP(e)}function xA(e){return new yO(e)}function xF(e){return new yM(e)}function xR(e){return new yj(e)}function xD(e){return new yH(e)}function xM(e){return new yR(e)}function xO(e){return new yW(e)}function xL(e){return new bC(e)}function xz(e){return new b_(e)}bP.className="RandomWidth",dN.registerClass(bP);var xP=xk,xB=xI,xW=xS,xV=xN;function xU(e){return new bn(e)}function xG(e){return new br(e)}function xH(e){return new ba(e)}function xj(e){return new y1(e)}function xq(e){return new bE(e)}function xK(e){return new bF(e)}function xX(e){return new bM(e)}function xY(e){return new bR(e)}function xZ(e){return new bP(e)}var xJ={};function xQ(e,t){return gr(e,t)}function x0(e,t){return f9(e,t)}function x1(e,t){return gl(e,t)}function x2(e,t){return ga(e,t)}function x3(e,t){return f8(e,t)}function x4(e,t){return gi(e,t)}function x6(e,t){return sd(()=>{let n=gs(e,t),r=ix(n,sd(()=>ig(o1(l_(oF(e,1),oF(t,0))),"float32")));return ig(oR(lt(r,0),iw(n,r),0),"float32")})}function x5(e,t){return ge(e,t)}function x8(e,t){return f6(e,t)}function x7(e,t){return f5(e,t)}function x9(e,t){return f5(e,t)}function ve(e,t){return f5(e,t)}function vt(e,t){return f4(e,t)}function vn(e,t){return f4(e,t)}function vr(e,t){return f4(e,t)}function va(e,t){return sd(()=>{let n=e.sub(t).square().sum(),r=e.sub(e.mean()).square().sum();return oJ(1).sub(n.div(r))})}L(xJ,{MAPE:()=>x9,MSE:()=>vn,binaryAccuracy:()=>xQ,binaryCrossentropy:()=>x0,categoricalAccuracy:()=>x2,categoricalCrossentropy:()=>x3,cosineProximity:()=>x5,mape:()=>ve,meanAbsoluteError:()=>x8,meanAbsolutePercentageError:()=>x7,meanSquaredError:()=>vt,mse:()=>vr,precision:()=>x4,r2Score:()=>va,recall:()=>x6,sparseCategoricalAccuracy:()=>x1});var vs={};L(vs,{modelFromJSON:()=>gL});var vi={};function vo(e){return new yr(e)}function vl(e){return yt(e),new yr({l1:null!=e?e.l1:null,l2:0})}function vu(e){return yt(e),new yr({l2:null!=e?e.l2:null,l1:0})}L(vi,{l1:()=>vl,l1l2:()=>vo,l2:()=>vu});var vp=class extends fK{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof gM))throw Error("model must be a LayersModel, not some other Container");this.model=e}};function vd(e,t){return e<t}function vh(e,t){return e>t}var vc=class extends vp{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new cG("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=vd:"max"===this.mode?this.monitorFunc=vh:-1!==this.monitor.indexOf("acc")?this.monitorFunc=vh:this.monitorFunc=vd,this.monitorFunc===vd&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===vd?1/0:-1/0}async onEpochEnd(e,t){await fj(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}},vm={earlyStopping:function(e){return new vc(e)}};e8.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(ku||(ku={})),function(e){var t;(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(kp||(kp={}));var vf={};function vg(e,t){vf[e]={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t}}function vy(e){delete vf[e]}function vb(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return vx(t.inputNames[o],n,r,a);if("tensors"===s.type){let s=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter((e,t)=>{var n;return(null===(n=s[t])||void 0===n?void 0:n.op)!=="NoOp"}).map(e=>vx(e,n,r,a))}let l=vx(t.inputNames[o],n,r,a),u=l.dataSync();return"number"===s.type?u[0]:at.toNestedArray(l.shape,u)}let i=t.attrParams[e];return i&&i.value}function vx(e,t,n,r){let[a,s]=vI(e,n);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let i=n.currentContextIds.find(e=>!!t[vk(a,e)]);return void 0!==i?t[vk(a,i)][s]:void 0}function vv(e,t,n){return t[vk(e,n.currentContextId)]}function vw(e,t){let[n,r,a]=vI(e,t);return[vk(n,t&&t.currentContextId),r,a]}function vk(e,t){return t?`${e}-${t}`:e}function vI(e,t){if(""===e)return["",0,void 0];let n=null!=t&&null!=t.parseNodeNameCache;if(n){let n=t.parseNodeNameCache.get(e);if(null!=n)return n}let r=e.split(":"),a;if(1===r.length)a=[e,0,void 0];else{let e=r[0],t=3===r.length?r[1]:void 0;a=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,a),a}function vS(e,t,n){let r=vb("pad",e,t,n);if("explicit"===r){r=vb("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function vN(e){return e.kept?e:iy(e)}var vT={};L(vT,{json:()=>v_});var v_=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],vC={};L(vC,{json:()=>vE});var vE=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],v$={};L(v$,{json:()=>vA});var vA=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],vF={};L(vF,{json:()=>vR});var vR=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],vD={};L(vD,{json:()=>vM});var vM=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],vO={};L(vO,{json:()=>vL});var vL=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],vz={};L(vz,{json:()=>vP});var vP=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],vB={};L(vB,{json:()=>vW});var vW=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],vV={};L(vV,{json:()=>vU});var vU=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],vG={};L(vG,{json:()=>vH});var vH=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],vj={};L(vj,{json:()=>vq});var vq=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],vK={};L(vK,{json:()=>vX});var vX=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],vY={};L(vY,{json:()=>vZ});var vZ=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],vJ={};L(vJ,{json:()=>vQ});var vQ=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],v0={};L(v0,{json:()=>v1});var v1=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],v2={};L(v2,{json:()=>v3});var v3=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],v4={};L(v4,{json:()=>v6});var v6=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],v5={};L(v5,{json:()=>v8});var v8=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],v7={};L(v7,{json:()=>v9});var v9=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],we=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[vT,vC,v$,vF,vD,vO,vz,vB,vV,vG,vj,vK,vY,vJ,v0,v2,v4,v5,v7].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e),{}),o=[],l=[],u={},p={};null!=t&&(u=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));let d=Object.keys(i);d.forEach(e=>{let t=i[e];t.inputNames.forEach((e,n)=>{let[r,,a]=vw(e),s=i[r];if(null!=s.outputs){let e=s.outputs.indexOf(a);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)})}),0===Object.keys(p).length?d.forEach(e=>{let t=i[e];0===t.children.length&&l.push(t)}):Object.keys(p).forEach(e=>{let[t]=vw(e),n=i[t];null!=n&&(n.signatureKey=p[e],l.push(n))}),Object.keys(u).length>0?Object.keys(u).forEach(e=>{let[t]=vw(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))}):o=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:h};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=vf[e.op]||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{let r=n.type,a;switch(n.type){case"string":void 0===(a=wn(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=wn(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":void 0===(a=wh(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=wh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":void 0===(a=wa(e.attr,n.tfName,n.defaultValue||0))&&n.tfDeprecatedName&&(a=wa(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":void 0===(a=wd(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=wd(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":void 0===(a=wr(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=wr(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":void 0===(a=wm(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=wm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":void 0===(a=wp(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=wp(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":void 0===(a=wc(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=wc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":void 0===(a=wo(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=wo(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":void 0===(a=wl(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=wl(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":void 0===(a=wi(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=wi(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t},{})),n}mapFunction(e){let t=e.nodeDef,n=[],r={};null!=t&&(r=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));let a=[],s=[];e.signature.inputArg.forEach(e=>{let[t]=vw(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ws(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n}),Object.keys(r).forEach(e=>{let t=r[e];t.inputNames.forEach((e,n)=>{let[a,,s]=vw(e),i=r[a];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)})});let i=e.ret;e.signature.outputArg.forEach(e=>{let[t,n]=vw(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))});let o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function wt(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=e8.global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function wn(e,t,n,r=!1){let a=e[t];return null!=a?wt(a.s,r):n}function wr(e,t,n){let r=e[t];return r?r.b:n}function wa(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function ws(e){switch("string"==typeof e&&(e=ku[e]),e){case ku.DT_FLOAT:case ku.DT_HALF:return"float32";case ku.DT_INT32:case ku.DT_INT64:case ku.DT_INT8:case ku.DT_UINT8:return"int32";case ku.DT_BOOL:return"bool";case ku.DT_DOUBLE:return"float32";case ku.DT_STRING:return"string";case ku.DT_COMPLEX64:case ku.DT_COMPLEX128:return"complex64";default:return null}}function wi(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function wo(e,t,n){let r=e[t];return r&&r.type?ws(r.type):n}function wl(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>ws(e)):n}function wu(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function wp(e,t,n){let r=e[t];return r&&r.shape?wu(r.shape):n}function wd(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function wh(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>wt(e,r)):n}function wc(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>wu(e)):n}function wm(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var wf=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return vx(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return vx(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return wa(this.node.rawAttrs,e,t);if(null!=n.s)return wn(this.node.rawAttrs,e,t);if(null!=n.b)return wr(this.node.rawAttrs,e,t);if(null!=n.shape)return wp(this.node.rawAttrs,e,t);if(null!=n.type)return wo(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return wd(this.node.rawAttrs,e,t);if(null!=n.list.s)return wh(this.node.rawAttrs,e,t);if(null!=n.list.shape)return wc(this.node.rawAttrs,e,t);if(null!=n.list.b)return wm(this.node.rawAttrs,e,t);if(null!=n.list.type)return wl(this.node.rawAttrs,e,t)}return t}},wg={};L(wg,{OP_SCOPE_SUFFIX:()=>a5,abs:()=>iI,acos:()=>iS,acosh:()=>iN,add:()=>ix,addN:()=>iT,all:()=>i_,any:()=>iC,argMax:()=>iE,argMin:()=>i$,asin:()=>iA,asinh:()=>iF,atan:()=>iR,atan2:()=>iD,atanh:()=>iM,avgPool:()=>iJ,avgPool3d:()=>iQ,basicLSTMCell:()=>i6,batchNorm:()=>i8,batchNorm2d:()=>i7,batchNorm3d:()=>i9,batchNorm4d:()=>oe,batchToSpaceND:()=>i5,bincount:()=>ot,bitwiseAnd:()=>on,booleanMaskAsync:()=>ph,broadcastArgs:()=>or,broadcastTo:()=>oa,buffer:()=>im,cast:()=>ig,ceil:()=>os,clipByValue:()=>oo,clone:()=>iy,complex:()=>a7,concat:()=>i0,concat1d:()=>ol,concat2d:()=>ou,concat3d:()=>op,concat4d:()=>od,conv1d:()=>oc,conv2d:()=>oh,conv2dTranspose:()=>of,conv3d:()=>og,conv3dTranspose:()=>ob,cos:()=>ox,cosh:()=>ov,cosineWindow:()=>pv,cumprod:()=>ow,cumsum:()=>ok,denseBincount:()=>oI,depthToSpace:()=>oS,depthwiseConv2d:()=>oN,diag:()=>oT,dilation2d:()=>o_,div:()=>iw,divNoNan:()=>oM,dot:()=>oO,dropout:()=>pb,einsum:()=>oL,elu:()=>oz,enclosingPowerOfTwo:()=>px,ensureShape:()=>oP,equal:()=>oF,erf:()=>oB,euclideanNorm:()=>o3,exp:()=>o4,expandDims:()=>o6,expm1:()=>o5,eye:()=>o7,fft:()=>uH,fill:()=>oi,floor:()=>o9,floorDiv:()=>iv,fused:()=>pk,gather:()=>le,gatherND:()=>py,greater:()=>lt,greaterEqual:()=>ln,ifft:()=>uj,imag:()=>lr,image:()=>dv,inTopKAsync:()=>pw,irfft:()=>uq,isFinite:()=>la,isInf:()=>ls,isNaN:()=>li,leakyRelu:()=>lo,less:()=>ll,lessEqual:()=>lu,linalg:()=>dw,linspace:()=>lp,localResponseNormalization:()=>ld,log:()=>lh,log1p:()=>lc,logSigmoid:()=>lI,logSoftmax:()=>lN,logSumExp:()=>lT,logicalAnd:()=>l_,logicalNot:()=>lC,logicalOr:()=>lE,logicalXor:()=>l$,losses:()=>dk,lowerBound:()=>lF,matMul:()=>i1,max:()=>oX,maxPool:()=>lR,maxPool3d:()=>lD,maxPoolWithArgmax:()=>lM,maximum:()=>lO,mean:()=>lL,meshgrid:()=>lB,min:()=>oY,minimum:()=>lW,mirrorPad:()=>lV,mod:()=>lU,moments:()=>lG,movingAverage:()=>pm,mul:()=>ik,multiRNNCell:()=>lH,multinomial:()=>lj,neg:()=>lw,norm:()=>o2,notEqual:()=>lq,oneHot:()=>lK,ones:()=>lP,onesLike:()=>lX,op:()=>a8,outerProduct:()=>lY,pad:()=>lZ,pad1d:()=>lJ,pad2d:()=>lQ,pad3d:()=>l0,pad4d:()=>l1,pool:()=>l3,pow:()=>oZ,prelu:()=>l4,print:()=>ib,prod:()=>l6,raggedGather:()=>l5,raggedRange:()=>l8,raggedTensorToTensor:()=>l7,rand:()=>l9,randomGamma:()=>uy,randomNormal:()=>ub,randomStandardNormal:()=>ux,randomUniform:()=>uv,randomUniformInt:()=>uw,range:()=>uk,real:()=>uI,reciprocal:()=>uS,relu:()=>uN,relu6:()=>uT,reshape:()=>iZ,reverse:()=>u_,reverse1d:()=>uC,reverse2d:()=>uE,reverse3d:()=>u$,reverse4d:()=>uA,rfft:()=>uX,round:()=>uF,rsqrt:()=>uR,scalar:()=>oJ,scatterND:()=>pf,searchSorted:()=>lA,selu:()=>uD,separableConv2d:()=>uM,setdiff1dAsync:()=>uO,sigmoid:()=>i2,sign:()=>uL,signal:()=>dx,sin:()=>uz,sinh:()=>uP,slice:()=>i3,slice1d:()=>uB,slice2d:()=>uW,slice3d:()=>uV,slice4d:()=>uU,softmax:()=>uG,softplus:()=>lk,spaceToBatchND:()=>l2,sparse:()=>dI,sparseToDense:()=>pg,spectral:()=>db,split:()=>uK,sqrt:()=>oQ,square:()=>o0,squaredDifference:()=>uY,squeeze:()=>uZ,stack:()=>uJ,step:()=>uQ,stridedSlice:()=>u0,string:()=>dS,sub:()=>lS,sum:()=>o1,tan:()=>u1,tanh:()=>i4,tensor:()=>se,tensor1d:()=>u2,tensor2d:()=>u3,tensor3d:()=>u4,tensor4d:()=>u6,tensor5d:()=>u5,tensor6d:()=>u8,tensorScatterUpdate:()=>pn,tile:()=>o8,topk:()=>pr,transpose:()=>pc,truncatedNormal:()=>pa,unique:()=>ps,unsortedSegmentSum:()=>pi,unstack:()=>po,upperBound:()=>pl,variable:()=>pu,where:()=>oR,whereAsync:()=>pd,zeros:()=>lz,zerosLike:()=>oD});var wy=(e,t,n,r=wg)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(vb("a",e,t,n),vb("b",e,t,n))];case"AddN":return[r.addN(vb("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(vb("a",e,t,n),vb("b",e,t,n))];case"Mul":return[r.mul(vb("a",e,t,n),vb("b",e,t,n))];case"RealDiv":case"Div":return[r.div(vb("a",e,t,n),vb("b",e,t,n))];case"DivNoNan":return[r.divNoNan(vb("a",e,t,n),vb("b",e,t,n))];case"FloorDiv":return[r.floorDiv(vb("a",e,t,n),vb("b",e,t,n))];case"Sub":return[r.sub(vb("a",e,t,n),vb("b",e,t,n))];case"Minimum":return[r.minimum(vb("a",e,t,n),vb("b",e,t,n))];case"Maximum":return[r.maximum(vb("a",e,t,n),vb("b",e,t,n))];case"Pow":return[r.pow(vb("a",e,t,n),vb("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(vb("a",e,t,n),vb("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},wb=(e,t,n,r=wg)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(vb("x",e,t,n))];case"Acos":return[r.acos(vb("x",e,t,n))];case"Acosh":return[r.acosh(vb("x",e,t,n))];case"Asin":return[r.asin(vb("x",e,t,n))];case"Asinh":return[r.asinh(vb("x",e,t,n))];case"Atan":return[r.atan(vb("x",e,t,n))];case"Atan2":return[r.atan2(vb("x",e,t,n),vb("y",e,t,n))];case"Atanh":return[r.atanh(vb("x",e,t,n))];case"Ceil":return[r.ceil(vb("x",e,t,n))];case"Complex":return[r.complex(vb("real",e,t,n),vb("imag",e,t,n))];case"Cos":return[r.cos(vb("x",e,t,n))];case"Cosh":return[r.cosh(vb("x",e,t,n))];case"Elu":return[r.elu(vb("x",e,t,n))];case"Erf":return[r.erf(vb("x",e,t,n))];case"Exp":return[r.exp(vb("x",e,t,n))];case"Expm1":return[r.expm1(vb("x",e,t,n))];case"Floor":return[r.floor(vb("x",e,t,n))];case"Log":return[r.log(vb("x",e,t,n))];case"Log1p":return[r.log1p(vb("x",e,t,n))];case"Imag":return[r.imag(vb("x",e,t,n))];case"Neg":return[r.neg(vb("x",e,t,n))];case"Reciprocal":return[r.reciprocal(vb("x",e,t,n))];case"Real":return[r.real(vb("x",e,t,n))];case"Relu":return[r.relu(vb("x",e,t,n))];case"Round":return[r.round(vb("x",e,t,n))];case"Selu":return[r.selu(vb("x",e,t,n))];case"Sigmoid":return[r.sigmoid(vb("x",e,t,n))];case"Sin":return[r.sin(vb("x",e,t,n))];case"Sign":return[r.sign(vb("x",e,t,n))];case"Sinh":return[r.sinh(vb("x",e,t,n))];case"Softplus":return[r.softplus(vb("x",e,t,n))];case"Sqrt":return[r.sqrt(vb("x",e,t,n))];case"Square":return[r.square(vb("x",e,t,n))];case"Tanh":return[r.tanh(vb("x",e,t,n))];case"Tan":return[r.tan(vb("x",e,t,n))];case"ClipByValue":return[r.clipByValue(vb("x",e,t,n),vb("clipValueMin",e,t,n),vb("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(vb("x",e,t,n))];case"Rsqrt":return[r.rsqrt(vx(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(vb("x",e,t,n),vb("alpha",e,t,n))];case"Prelu":return[r.prelu(vb("x",e,t,n),vb("alpha",e,t,n))];case"IsNan":return[r.isNaN(vx(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(vx(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(vx(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function wx(e,t,n=""){if(!("number"==typeof e||"number"==typeof t)){at.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let a=e[r],s=t[r];at.assert(a<0||s<0||a===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function wv(e){return!("number"==typeof e||e.some(e=>e<0))}function ww(e,t,n){let r=wk(e,n),a=!wv(r);if(a&&0===t.length)throw Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach(e=>{r=wk(e.shape,r)}),!wv(r))throw Error(`Non-fully-defined elementShape: ${r}`);return r}function wk(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var wI=class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=oJ(0),sc(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),wx(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,sc(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return se([],[0].concat(this.elementShape));let n=this.readMany(e);return wx(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),uJ(n,0)}concat(e){if(e&&e!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return se([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let n=this.readMany(t);return wx(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),i0(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,po(t,0))}split(e,t){if(t.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map(e=>n+=e);if(n!==t.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];sd(()=>{t=iZ(t,[1,n,a]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=iZ(i3(t,i,o),this.elementShape)}return s});let i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}},wS=class e{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);wx(t,e.shape,"TensorList shape mismatch: "),sc(e)}),this.idTensor=oJ(0),this.maxNumElements=r,sc(this.idTensor)}copy(){return new e([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);wx(e,this.elementShape,"TensorList shape mismatch: ");let r=ww(this.elementShape,this.tensors,e);return sd(()=>uJ(this.tensors.map(e=>iZ(e,r)),0))}popBack(e,t){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw Error("Trying to pop from an empty list.");let n=ww(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,wx(r.shape,e,"TensorList shape mismatch: "),iZ(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(wx(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw Error("Trying to push element into a full list.");sc(e),this.tensors.push(e)}resize(t){if(t<0)throw Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let n=new e([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=t;for(let e=0;e<Math.min(this.tensors.length,t);++e)n.tensors[e]=this.tensors[e];return n}getItem(e,t,n){if(n!==this.elementDtype)throw Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw Error(`element at index ${e} is null.`);wx(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=ww(this.elementShape,this.tensors,t);return iZ(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);wx(this.elementShape,t.shape,"TensorList shape mismatch: "),sc(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);wx(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=ww(this.elementShape,this.tensors,n);return 0===e.length?se([],[0].concat(r)):sd(()=>uJ(e.map(e=>iZ(this.tensors[e],r)),0))}concat(e,t){if(e&&e!==this.elementDtype)throw Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);wx(this.elementShape,t,"TensorList shape mismatch: ");let n=ww(this.elementShape,this.tensors,t);return 0===this.size()?se([],[0].concat(n)):sd(()=>i0(this.tensors.map(e=>iZ(e,n)),0))}},wN=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=vb("thenBranch",e,t,n),a=vb("elseBranch",e,t,n),s=vb("cond",e,t,n),i=vb("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=vb("body",e,t,n),a=vb("cond",e,t,n),s=vb("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(e=>e.id),l=await i[0].data();i.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()});let u=s;for(;l[0];){let e=u,t=(u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap)).map(e=>e.id);e.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});let s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return u}case"LoopCond":return[vN(vb("pred",e,t,n))];case"Switch":{let r=vb("pred",e,t,n),a=vb("data",e,t,n);return a.kept||(a=vN(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find(e=>void 0!==vx(e,t,n));if(r)return[vN(vx(r,t,n))];return}case"Enter":{let r=vb("frameName",e,t,n),a=vb("tensor",e,t,n);return n.enterFrame(r),[vN(a)]}case"Exit":{let r=vb("tensor",e,t,n);return n.exitFrame(),[vN(r)]}case"NextIteration":{let r=vb("tensor",e,t,n);return n.nextIteration(),[vN(r)]}case"TensorArrayV3":{let r=vb("size",e,t,n),a=vb("dtype",e,t,n),s=vb("elementShape",e,t,n),i=vb("dynamicSize",e,t,n),o=vb("clearAfterRead",e,t,n),l=vb("identicalElementShapes",e,t,n),u=new wI(vb("name",e,t,n),a,r,s,l,i,o);return n.addTensorArray(u),[u.idTensor,oJ(1)]}case"TensorArrayWriteV3":{let r=vb("tensorArrayId",e,t,n),a=vb("index",e,t,n),s=vb("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=vb("tensorArrayId",e,t,n),a=vb("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=vb("tensorArrayId",e,t,n),a=vb("indices",e,t,n),s=vb("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=vb("tensorArrayId",e,t,n),a=vb("indices",e,t,n),s=vb("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=vb("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=vb("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=vb("tensorArrayId",e,t,n),a=vb("tensor",e,t,n),s=vb("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=vb("tensorArrayId",e,t,n);return[oJ(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{let r=vb("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=vb("tensorListId",e,t,n),a=vb("index",e,t,n),s=vb("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=vb("tensorListId",e,t,n),a=vb("index",e,t,n),s=vb("elementShape",e,t,n),i=vb("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=vb("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new wS([],n,e.dtype,r),i=po(e,0);return t.forEach((e,t)=>{s.setItem(e,i[t])}),s}(vb("tensor",e,t,n),r,vb("elementShape",e,t,n),vb("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r=vb("elementShape",e,t,n),a=vb("elementDType",e,t,n),s=vb("TensorListReserve"===e.op?"numElements":"maxNumElements",e,t,n),i=new wS([],r,a,"TensorListReserve"===e.op?-1:s);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let r=vb("tensorListId",e,t,n),a=vb("indices",e,t,n),s=vb("elementShape",e,t,n),i=vb("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=vb("tensorListId",e,t,n),a=vb("elementShape",e,t,n),s=vb("elementDType",e,t,n),i=vb("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=function(e,t,n){let r=e.dtype;if(e.shape.length<1)throw Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);return wx(e.shape.slice(1),t,"TensorList shape mismatch: "),new wS(po(e),t,r)}(vb("tensor",e,t,n),vb("elementShape",e,t,n),vb("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=vb("tensorListId",e,t,n),a=n.getTensorList(r.id),s=vb("dtype",e,t,n),i=vb("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=vb("tensorListId",e,t,n),a=vb("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=vb("tensorListId",e,t,n),a=vb("elementShape",e,t,n),s=vb("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=vb("tensor",e,t,n),a=vb("elementShape",e,t,n),s=function(e,t,n){let r=0,a=t.map(e=>r+=e);if(r!==e.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${e.shape}`);let s=wk(e.shape.slice(1),n),i=0===r?0:e.size/r,o=sd(()=>{let n=[];e=iZ(e,[1,r,i]);for(let r=0;r<t.length;++r){let o=[0,0===r?0:a[r-1],0],l=[1,t[r],i];n[r]=iZ(i3(e,o,l),s)}return e.dispose(),n}),l=new wS([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,vb("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{let r=vb("tensorListId",e,t,n);return[oJ(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{let r=vb("tensorListId",e,t,n),a=vb("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function wT(e,t,n){let[r,a]=vb("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=vb("numArgs",e,t,n);if(s){if(i&&2!==o)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==o)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if("fusedbatchnorm"===r)throw Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let l=vb("strides",e,t,n),u=vS(e,t,n),p=vb("dataFormat",e,t,n).toUpperCase(),d=vb("dilations",e,t,n),[h,c]=vb("args",e,t,n);return s||(c=h,h=void 0),{stride:l,pad:u,dataFormat:p,dilations:d,biasArg:h,preluArg:c,activationFunc:a,leakyreluAlpha:vb("leakyreluAlpha",e,t,n)}}var w_=(e,t,n,r=wg)=>{switch(e.op){case"Conv1D":{let a=vb("stride",e,t,n),s=vb("pad",e,t,n),i=vb("dataFormat",e,t,n).toUpperCase(),o=vb("dilation",e,t,n);return[r.conv1d(vb("x",e,t,n),vb("filter",e,t,n),a,s,i,o)]}case"Conv2D":{let a=vb("strides",e,t,n),s=vS(e,t,n),i=vb("dataFormat",e,t,n).toUpperCase(),o=vb("dilations",e,t,n);return[r.conv2d(vb("x",e,t,n),vb("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:p,leakyreluAlpha:d}=wT(e,t,n);return[r.fused.conv2d({x:vb("x",e,t,n),filter:vb("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:p,preluActivationWeights:u,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:p,leakyreluAlpha:d}=wT(e,t,n);return[r.fused.depthwiseConv2d({x:vb("x",e,t,n),filter:vb("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:p,preluActivationWeights:u,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=vb("outputShape",e,t,n),s=vb("strides",e,t,n),i=vS(e,t,n);return[r.conv2dTranspose(vb("x",e,t,n),vb("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=vb("strides",e,t,n),s=vS(e,t,n),i=vb("dilations",e,t,n),o=vb("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(vb("input",e,t,n),vb("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=vb("strides",e,t,n),s=vb("pad",e,t,n),i=vb("dataFormat",e,t,n).toUpperCase(),o=vb("dilations",e,t,n);return[r.conv3d(vb("x",e,t,n),vb("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=vb("strides",e,t,n),s=vb("pad",e,t,n),i=vb("kernelSize",e,t,n);return[r.avgPool(vb("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=vb("strides",e,t,n),s=vb("pad",e,t,n),i=vb("kernelSize",e,t,n);return[r.maxPool(vb("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=vb("strides",e,t,n),s=vb("pad",e,t,n),i=vb("kernelSize",e,t,n),o=vb("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(vb("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[l,u]}case"AvgPool3D":{let a=vb("strides",e,t,n),s=vb("pad",e,t,n),i=vb("kernelSize",e,t,n);return[r.avgPool3d(vb("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=vb("strides",e,t,n),s=vb("pad",e,t,n),i=vb("kernelSize",e,t,n);return[r.maxPool3d(vb("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=vb("strides",e,t,n),s=vb("pad",e,t,n),i=vb("dilations",e,t,n),o=a[1],l=a[2],u=i[1],p=i[2];return[r.dilation2d(vb("x",e,t,n),vb("filter",e,t,n),[o,l],s,[u,p],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},wC=(e,t,n,r=wg)=>{switch(e.op){case"Fill":{let a=vb("shape",e,t,n),s=vb("dtype",e,t,n),i=vb("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{let a=vb("start",e,t,n),s=vb("stop",e,t,n),i=vb("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{let a=vb("logits",e,t,n),s=vb("numSamples",e,t,n),i=vb("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{let a=vb("indices",e,t,n),s=vb("depth",e,t,n),i=vb("onValue",e,t,n),o=vb("offValue",e,t,n),l=vb("dtype",e,t,n);return[r.oneHot(a,s,i,o,l)]}case"Ones":return[r.ones(vb("shape",e,t,n),vb("dtype",e,t,n))];case"OnesLike":return[r.onesLike(vb("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(vb("shape",e,t,n),vb("dtype",e,t,n),vb("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(vb("shape",e,t,n),vb("minval",e,t,n),vb("maxval",e,t,n),vb("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(vb("shape",e,t,n),vb("minval",e,t,n),vb("maxval",e,t,n),vb("seed",e,t,n))];case"Range":{let a=vb("start",e,t,n),s=vb("stop",e,t,n),i=vb("step",e,t,n);return[r.range(a,s,i,vb("dtype",e,t,n))]}case"TruncatedNormal":{let a=vb("shape",e,t,n),s=vb("mean",e,t,n),i=vb("stdDev",e,t,n),o=vb("seed",e,t,n);return[r.truncatedNormal(a,s,i,vb("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(vb("shape",e,t,n),vb("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(vb("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function wE(e,t,n){return{boxes:vb("boxes",e,t,n),scores:vb("scores",e,t,n),maxOutputSize:vb("maxOutputSize",e,t,n),iouThreshold:vb("iouThreshold",e,t,n),scoreThreshold:vb("scoreThreshold",e,t,n),softNmsSigma:vb("softNmsSigma",e,t,n)}}var w$=async(e,t,n,r,a=wg)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=wE(e,t,n),p=await a.image.nonMaxSuppressionWithScoreAsync(r,s,i,o,l,u);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=wE(e,t,n),u=vb("padToMaxOutputSize",e,t,n),p=await a.image.nonMaxSuppressionPaddedAsync(r,s,i,o,l,u);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=wE(e,t,n);return[await a.image.nonMaxSuppressionAsync(r,s,i,o,l)]}case"Where":{let r=a.cast(vb("condition",e,t,n),"bool"),s=[await a.whereAsync(r)];return r.dispose(),s}case"ListDiff":return a.setdiff1dAsync(vb("x",e,t,n),vb("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},wA=(e,t,n,r=wg)=>{switch(e.op){case"LowerBound":{let a=vb("sortedSequence",e,t,n),s=vb("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{let a=vb("x",e,t,n),s=vb("k",e,t,n),i=vb("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=vb("sortedSequence",e,t,n),s=vb("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{let a=vb("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=vb("x",e,t,n),s=vb("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},wF=(e,t,n,r=wg)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=vb("default",e,t,n);return[vx(e.name,t,n)||a];case"Placeholder":return[vx(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[vN(vb("x",e,t,n))];case"IdentityN":return vb("x",e,t,n).map(e=>vN(e));case"Shape":return[r.tensor1d(vb("x",e,t,n).shape,"int32")];case"ShapeN":return vb("x",e,t,n).map(e=>r.tensor1d(e.shape));case"Size":return[r.scalar(vb("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(vb("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let s=vb("x",e,t,n),i=vb("data",e,t,n),o=vb("message",e,t,n),l=vb("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}},wR=class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=oJ(0),this.tensorMap=new Map,sc(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return oJ(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),sd(()=>{let e=po(t),r=n.length,a=e.length;at.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let t=0;t<r;t++){let r=n[t],a=e[t];sc(a),this.tensorMap.set(r,a)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return sd(()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],s=this.findWithDefault(a,t);e.push(s)}return uJ(e)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},wD=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=r.getHashTableHandleByName(e.name);if(null!=a)return[a];{let a=new wR(vb("keyDType",e,t,n),vb("valueDType",e,t,n));return r.addHashTable(e.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=vb("tableHandle",e,t,n,r),s=vb("keys",e,t,n),i=vb("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=vb("tableHandle",e,t,n,r),s=vb("keys",e,t,n),i=vb("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=vb("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},wM=(e,t,n,r=wg)=>{switch(e.op){case"ResizeBilinear":{let a=vb("images",e,t,n),s=vb("size",e,t,n),i=vb("alignCorners",e,t,n),o=vb("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=vb("images",e,t,n),s=vb("size",e,t,n),i=vb("alignCorners",e,t,n),o=vb("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=vb("image",e,t,n),s=vb("boxes",e,t,n),i=vb("boxInd",e,t,n),o=vb("cropSize",e,t,n),l=vb("method",e,t,n),u=vb("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let a=vb("images",e,t,n),s=vb("transforms",e,t,n),i=vb("outputShape",e,t,n),o=vb("fillValue",e,t,n),l=vb("interpolation",e,t,n),u=vb("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},wO=(e,t,n,r=wg)=>{switch(e.op){case"Equal":return[r.equal(vb("a",e,t,n),vb("b",e,t,n))];case"NotEqual":return[r.notEqual(vb("a",e,t,n),vb("b",e,t,n))];case"Greater":return[r.greater(vb("a",e,t,n),vb("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(vb("a",e,t,n),vb("b",e,t,n))];case"Less":return[r.less(vb("a",e,t,n),vb("b",e,t,n))];case"LessEqual":return[r.lessEqual(vb("a",e,t,n),vb("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(vb("a",e,t,n),vb("b",e,t,n))];case"LogicalNot":return[r.logicalNot(vb("a",e,t,n))];case"LogicalOr":return[r.logicalOr(vb("a",e,t,n),vb("b",e,t,n))];case"Select":case"SelectV2":return[r.where(vb("condition",e,t,n),vb("a",e,t,n),vb("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(vb("a",e,t,n),vb("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},wL=(e,t,n,r=wg)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(vb("a",e,t,n),vb("b",e,t,n),vb("transposeA",e,t,n),vb("transposeB",e,t,n))];case"Einsum":return[r.einsum(vb("equation",e,t,n),...vb("tensors",e,t,n))];case"Transpose":return[r.transpose(vb("x",e,t,n),vb("perm",e,t,n))];case"_FusedMatMul":let[a,s]=vb("fusedOps",e,t,n),i="prelu"===s,o=vb("numArgs",e,t,n),l=vb("leakyreluAlpha",e,t,n);if("biasadd"===a){if(i&&2!==o)throw Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,p]=vb("args",e,t,n);return[r.fused.matMul({a:vb("a",e,t,n),b:vb("b",e,t,n),transposeA:vb("transposeA",e,t,n),transposeB:vb("transposeB",e,t,n),bias:u,activation:s,preluActivationWeights:p,leakyreluAlpha:l})];case"MatrixBandPart":return[r.linalg.bandPart(vb("a",e,t,n),vb("numLower",e,t,n),vb("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},wz=(e,t,n,r=wg)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(vb("x",e,t,n),vb("axis",e,t,n),vb("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(vb("x",e,t,n),vb("mean",e,t,n),vb("variance",e,t,n),vb("offset",e,t,n),vb("scale",e,t,n),vb("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(vb("x",e,t,n),vb("radius",e,t,n),vb("bias",e,t,n),vb("alpha",e,t,n),vb("beta",e,t,n))];case"Softmax":return[r.softmax(vb("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(vb("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},wP=(e,t,n,r=wg)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(vb("paramsNestedSplits",e,t,n),vb("paramsDenseValues",e,t,n),vb("indices",e,t,n),vb("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(vb("starts",e,t,n),vb("limits",e,t,n),vb("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(vb("shape",e,t,n),vb("values",e,t,n),vb("defaultValue",e,t,n),vb("rowPartitionTensors",e,t,n),vb("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},wB=(e,t,n,r=wg)=>{switch(e.op){case"Max":{let a=vb("axis",e,t,n),s=vb("keepDims",e,t,n);return[r.max(vb("x",e,t,n),a,s)]}case"Mean":{let a=vb("axis",e,t,n),s=vb("keepDims",e,t,n);return[r.mean(vb("x",e,t,n),a,s)]}case"Min":{let a=vb("axis",e,t,n),s=vb("keepDims",e,t,n);return[r.min(vb("x",e,t,n),a,s)]}case"Sum":{let a=vb("axis",e,t,n),s=vb("keepDims",e,t,n);return[r.sum(vb("x",e,t,n),a,s)]}case"All":{let a=vb("axis",e,t,n),s=vb("keepDims",e,t,n);return[r.all(vb("x",e,t,n),a,s)]}case"Any":{let a=vb("axis",e,t,n),s=vb("keepDims",e,t,n);return[r.any(vb("x",e,t,n),a,s)]}case"ArgMax":{let a=vb("axis",e,t,n);return[r.argMax(vb("x",e,t,n),a)]}case"ArgMin":{let a=vb("axis",e,t,n);return[r.argMin(vb("x",e,t,n),a)]}case"Prod":{let a=vb("axis",e,t,n),s=vb("keepDims",e,t,n);return[r.prod(vb("x",e,t,n),a,s)]}case"Cumprod":{let a=vb("axis",e,t,n),s=vb("exclusive",e,t,n),i=vb("reverse",e,t,n);return[r.cumprod(vb("x",e,t,n),a,s,i)]}case"Cumsum":{let a=vb("axis",e,t,n),s=vb("exclusive",e,t,n),i=vb("reverse",e,t,n);return[r.cumsum(vb("x",e,t,n),a,s,i)]}case"Bincount":let a=vb("x",e,t,n),s=vb("weights",e,t,n),i=vb("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{let a=vb("x",e,t,n),s=vb("weights",e,t,n),i=vb("size",e,t,n),o=vb("binaryOutput",e,t,n);return[r.denseBincount(a,s,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},wW=(e,t,n,r=wg)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=vb("n",e,t,n),s=vb("axis",e,t,n),i=vb("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{let a=vb("x",e,t,n),s=vb("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{let a=vb("axis",e,t,n),s=vb("batchDims",e,t,n),i=vb("x",e,t,n),o=vb("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{let a=vb("dims",e,t,n),s=[];for(let e=0;e<a.length;e++)a[e]&&s.push(e);let i=vb("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{let a=vb("axis",e,t,n),s=vb("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{let a=vb("begin",e,t,n),s=vb("size",e,t,n);return[r.slice(vb("x",e,t,n),a,s)]}case"StridedSlice":{let a=vb("begin",e,t,n),s=vb("end",e,t,n),i=vb("strides",e,t,n),o=vb("beginMask",e,t,n),l=vb("endMask",e,t,n),u=vb("ellipsisMask",e,t,n),p=vb("newAxisMask",e,t,n),d=vb("shrinkAxisMask",e,t,n),h=vb("x",e,t,n);return[r.stridedSlice(h,a,s,i,o,l,u,p,d)]}case"Pack":return sd(()=>{let a=vb("axis",e,t,n),s=vb("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,l=s.map(e=>{let t=at.arraysEqual(e.shape,i);if(!t&&!at.arraysEqual(r.squeeze(e).shape,o))throw Error("the input tensors shape does not match");return t?e:r.reshape(e,i)});return[r.stack(l,a)]});case"Unpack":{let a=vb("axis",e,t,n),s=vb("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{let a=vb("reps",e,t,n);return[r.tile(vb("x",e,t,n),a)]}case"Split":case"SplitV":{let a=vb("axis",e,t,n),s=vb("numOrSizeSplits",e,t,n),i=vb("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{let a=vb("indices",e,t,n),s=vb("values",e,t,n),i=vb("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{let a=vb("x",e,t,n),s=vb("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{let a=vb("sparseIndices",e,t,n),s=vb("outputShape",e,t,n),i=vb("sparseValues",e,t,n),o=vb("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{let a=vb("indices",e,t,n),s=vb("values",e,t,n),i=vb("tensor",e,t,n);return[r.tensorScatterUpdate(i,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},wV=(e,t,n,r=wg)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(vb("indices",e,t,n),vb("values",e,t,n),vb("denseShape",e,t,n),vb("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(vb("inputIndices",e,t,n),vb("inputShape",e,t,n),vb("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(vb("data",e,t,n),vb("indices",e,t,n),vb("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(vb("data",e,t,n),vb("indices",e,t,n),vb("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},wU=(e,t,n,r=wg)=>{switch(e.op){case"FFT":return[r.fft(vb("x",e,t,n))];case"IFFT":return[r.ifft(vb("x",e,t,n))];case"RFFT":return[r.rfft(vb("x",e,t,n))];case"IRFFT":return[r.irfft(vb("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},wG=(e,t,n,r=wg)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(vb("input",e,t,n),vb("pattern",e,t,n),vb("rewrite",e,t,n),vb("replaceGlobal",e,t,n))];case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(vb("data",e,t,n),vb("dataSplits",e,t,n),vb("separator",e,t,n),vb("nGramWidths",e,t,n),vb("leftPad",e,t,n),vb("rightPad",e,t,n),vb("padWidth",e,t,n),vb("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=r.string.stringSplit(vb("input",e,t,n),vb("delimiter",e,t,n),vb("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(vb("input",e,t,n),vb("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},wH=(e,t,n,r=wg)=>{switch(e.op){case"Cast":return[r.cast(vb("x",e,t,n),vb("dtype",e,t,n))];case"ExpandDims":{let a=vb("axis",e,t,n);return[r.expandDims(vb("x",e,t,n),a)]}case"Squeeze":{let a=vb("axis",e,t,n);return[r.squeeze(vb("x",e,t,n),a)]}case"Reshape":return[r.reshape(vb("x",e,t,n),vb("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(vb("x",e,t,n),vb("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(vb("x",e,t,n),vb("padding",e,t,n),vb("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(vb("x",e,t,n),vb("padding",e,t,n),vb("constantValue",e,t,n))];case"SpaceToBatchND":{let a=vb("blockShape",e,t,n),s=vb("paddings",e,t,n);return[r.spaceToBatchND(vb("x",e,t,n),a,s)]}case"BatchToSpaceND":{let a=vb("blockShape",e,t,n),s=vb("crops",e,t,n);return[r.batchToSpaceND(vb("x",e,t,n),a,s)]}case"DepthToSpace":{let a=vb("blockSize",e,t,n),s=vb("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(vb("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(vb("x",e,t,n),vb("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(vb("s0",e,t,n),vb("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function wj(e,t,n,r,a=sd){let s=((e,t,n)=>{switch(e.category){case"arithmetic":return a(()=>wy(e,t,n));case"basic_math":return a(()=>wb(e,t,n));case"control":return wN(e,t,n);case"convolution":return a(()=>w_(e,t,n));case"creation":return a(()=>wC(e,t,n));case"dynamic":return w$(e,t,n);case"evaluation":return a(()=>wA(e,t,n));case"image":return a(()=>wM(e,t,n));case"graph":return a(()=>wF(e,t,n));case"logical":return a(()=>wO(e,t,n));case"matrices":return a(()=>wL(e,t,n));case"normalization":return a(()=>wz(e,t,n));case"ragged":return a(()=>wP(e,t,n));case"reduction":return a(()=>wB(e,t,n));case"slice_join":return a(()=>wW(e,t,n));case"sparse":return a(()=>wV(e,t,n));case"spectral":return a(()=>wU(e,t,n));case"string":return a(()=>wG(e,t,n));case"transformation":return a(()=>wH(e,t,n));case"hash_table":return wD(e,t,n,r);case"custom":let s=vf[e.op];if(s&&s.customExecutor)return s.customExecutor(new wf(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return at.isPromise(s)?s.then(e=>[].concat(e)):[].concat(s)}var wq=class{constructor(e={},t={},n={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function wK(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=new Set(Object.keys(e).map(e=>vI(e)[0])),p=new Set((r=r||[]).map(e=>vI(e.name)[0])),d=[...t];for(;d.length>0;){let e=d.pop();if((wQ(e)||wZ.has(e.op)||wJ.has(e.op))&&null==i&&(o=(i=e).children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),null==n[e.name]&&!u.has(e.name)&&!p.has(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach(e=>{l.has(e.name)||(l.add(e.name),d.push(e))})}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var wX=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}},wY=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),wZ=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),wJ=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function wQ(e){return wY.has(e.op)}var w0=class e{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(t,n){this.graph=t,this.parent=n,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(n=>{this._functionExecutorMap[n]=new e(t.functions[n],this)})}getCompilationKey(e,t){let n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){let n=wK(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let n=t.map(e=>e.name),a=Object.keys(e);throw Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}let i=function(e,t){let{usedNodes:n,inputs:r}=t,a=Object.keys(r).map(e=>vI(e)[0]).map(t=>e.nodes[t]),s=e.initNodes||[],i=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map(e=>[e.name,e])).values()]}let l=o([...a,...e.weights,...s]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),p=new Map(u.map(e=>[e.name,e])),d={};for(let e of u)for(let t of(d[e.name]=d[e.name]||0,e.children))i(t)||(d[t.name]=Number.POSITIVE_INFINITY),d[t.name]=(d[t.name]||0)+1;let h=Object.entries(d).filter(([,e])=>0===e).map(([e])=>e),c=[...h];for(;h.length>0;){let e=h.pop();for(let t of p.get(e).children.filter(i))0==--d[t.name]&&(c.push(t.name),h.push(t.name))}let m=function(e,t){let n=new Map(e.map(e=>[e.name,e])),r=t.map(e=>e.name),a=new Set(r);for(;r.length>0;){let e=r.pop();for(let t of n.get(e).children)!n.has(t.name)||a.has(t.name)||(a.add(t.name),r.push(t.name))}return e.filter(e=>a.has(e.name))}(c.map(e=>p.get(e)),l);return function(e,t){let n=new Map(e.map((e,t)=>[e.name,t])),r=new Set(t.map(e=>e.name)),a=e=>r.has("string"==typeof e?e:e.name),s=new Set(e.map(e=>e.name)),i=e=>s.has("string"==typeof e?e:e.name);for(let t of e){for(let e of t.children.filter(i)){if(!n.has(e.name))throw new wX(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new wX(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!a(t))for(let e of t.inputs){if(!n.has(e.name))throw new wX(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new wX(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(m,l),m}(this.graph,n),o=function(e){let t=new Map(e.map((e,t)=>[e.name,t])),n=Number.MAX_SAFE_INTEGER,r=e.map((e,t)=>wQ(e)?n:t),a=e=>{let n=r[t.get(e.name)];return null==n?-1:n},s=e.map((e,t)=>e.children.map(a).reduce((e,t)=>Math.max(e,t),r[t])),i=new Map;for(let t=0;t<e.length;++t){let r=s[t];if(r===n)continue;let a=e[t],o=e[r];i.has(o.name)||i.set(o.name,[]),i.get(o.name).push(a)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return sc(t),t}cloneTensorList(e){return e?e.map(e=>this.cloneAndKeepTensor(e)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([e,t])=>[e,this.cloneTensorList(t)]))}execute(e,t){this.disposeIntermediateTensors();let n=Object.keys(e=this.mapInputs(e)).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map(e=>this.graph.nodes[vI(e)[0]]),a=t.map(e=>vI(e)[0]),s=new Set(a),i=a.map(e=>this.graph.nodes[e]);0===i.length&&(i=this._outputs);let o=this.getCompilationKey(r,i),l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=e8.getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let u={},p={};return sd(()=>{let n=new wq(this.weightMap,u,p,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(t=>{let[a,s]=vI(t,n),i=[];i[s]=e[t],r[a]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[a]=this.cloneTensorList(i))});let a=this.getFrozenTensorIds(r),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(let e of i){if(r[e.name])continue;let t=wj(e,r,n,this._resourceManager);if(at.isPromise(t))throw Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,a,s,o.get(e.name))}return null==this.parent&&n.dispose(a),t.map(e=>vx(e,r,n))})}getFrozenTensorIds(e){return new Set([].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id))))}checkTensorForDisposal(e,t,n,r,a,s,i){if(!(wQ(t)||s.has(e))){for(let r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(let e of t.inputs){if(wQ(e))continue;let t=vv(e.name,n,r);if(null!=t)for(let e of t){if(!e||e.kept||a.has(e.id))continue;let t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,a,s){if(!(wQ(e)||null==s)){for(let e of s)if(!(wQ(e)||a.has(e.name)))for(let a of vv(e.name,t,n))!a||a.kept||r.has(a.id)||a.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},a={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=e8.getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let s=new wq(this.weightMap,r,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let i=await this.executeWithControlFlow(e,s,t,n),o=t.map(e=>vx(e,i,s)),l=new Set([...o.map(e=>e.id),...Object.keys(e).map(t=>e[t].id),...this.weightIds]);return Object.values(i).forEach(e=>{e.forEach(e=>{!e||e.isDisposed||l.has(e.id)||e.dispose()})}),null==this.parent&&s.dispose(l),o}async executeFunctionAsync(e,t,n){let r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map(e=>this.graph.nodes[vI(e)[0]]),i=n.map(e=>vI(e)[0]),o=new Set(i),l=i.map(e=>this.graph.nodes[e]);0===l.length&&(l=this._outputs);let{usedNodes:u,missingInputs:p,dynamicNode:d,syncInputs:h}=wK(e,l,this.weightMap,this._initNodes),c=[...s,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),m=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{let[n,r]=vI(t),a=[];a[r]=e[t],m[n]=a});let f={},g=this.getFrozenTensorIds(m),y={};for(;c.length>0;){let e=this.processStack(s,c,t,m,y,g,o,f,u);await Promise.all(e)}null!=d||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=l.filter(e=>!wQ(e)&&!vx(e.name,m,t)).map(e=>e.name);if(b.length>0){let e="";throw null!=d&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),Error(`Cannot compute the outputs [${b}] from the provided inputs [${a}]. Consider providing the following inputs: [${p}]. ${e}`)}return m}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let p="";if("Enter"===e.node.op&&vb("isConstant",e.node,r,n)&&([p]=vw(e.node.name,n)),null==r[e.node.name]){let d=wj(e.node,r,n,this._resourceManager);p||([p]=vw(e.node.name,n));let h=n.currentContext;at.isPromise(d)?u.push(d.then(u=>(r[p]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(u)),n.currentContext=h,this.checkTensorForDisposal(p,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u))):(r[p]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(d)),this.checkTensorForDisposal(p,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach(e=>{let[i]=vw(e.name,n);a[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some(e=>!!vx(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!vx(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[r]=vI(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t);at.assert(t,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&at.assert(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){var t,n;let r={};for(let a in e){let s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[a];null!=s?r[s.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){let t=Object.keys(e).filter(e=>{let[t]=vI(e);return null==this.graph.nodes[t]});if(t.length>0)throw Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{var t,n;let r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e},{})}checkOutputs(e){e.forEach(e=>{let[t]=vI(e);if(!this.graph.nodes[t])throw Error(`The output '${e}' is not found in the graph`)})}},w1=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},w2=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=dW){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new w1}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return at.isPromise(e)?e.then(e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e)):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw Error("Model artifacts missing streamWeights function");let t=await sE(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;let n=this.artifacts.modelTopology,r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new w0(we.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=we.Instance.transformGraph(e.modelInitializer);this.initializer=new w0(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t={};return(e instanceof aF?[e]:e).forEach((e,n)=>t[this.structuredOutputKeys[n]]=e),t}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof aF)&&!Array.isArray(e)){let n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(let t in n){let r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((t,n)=>{var a,s,i;let o=null===(i=null===(s=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===s?void 0:s[n])||void 0===i?void 0:i.resourceId;return null!=o?t[n]=this.resourceIdToCapturedInput[o]:t[n]=e[r++],t},{})}normalizeOutputs(e){return Array.isArray(e=e||this.outputNodes)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){let a=t[n[r]];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&sh(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function w3(e,t={},n=dW){var r;if(null==e)throw Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&((r=e).endsWith("/")||(r+="/"),e=`${r}model.json?tfjs-format=file`);let a=new w2(e,t,n);return await a.load(),a}function w4(e){let t;if(null==e)throw Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");if(e instanceof Array){let[n,r]=e;if(!n)throw Error("modelJSON must be the first element of the array");if(!r||!(r instanceof ArrayBuffer))throw Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw Error("Model JSON is missing 'weightsManifest'");let a=dW.getWeightSpecs(n.weightsManifest),s=dW.getModelArtifactsForJSONSync(n,a,r);t=dW.fromMemorySync(s)}else if("load"in e)t=e;else if("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e)t=dW.fromMemorySync(e);else throw Error("Unknown model format");let n=new w2(t);return n.load(),n}var w6="4.22.0",w5={};L(w5,{CSVDataset:()=>kB,Dataset:()=>kE,FileDataSource:()=>k0,TextLineDataset:()=>kD,URLDataSource:()=>k1,array:()=>kA,csv:()=>k2,func:()=>k3,generator:()=>k4,microphone:()=>k5,version_data:()=>k8,webcam:()=>k6,zip:()=>kF});var w8=P(Z()),w7=P(Z());function w9(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw Error("A deep map function may not return both a value and recurse=true.");if(!a.recurse)return n.set(e,a.value),a.value;if(kn(e)){let a=Array.isArray(e)?[]:{};for(let s in r.add(e),e){let i=w9(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw Error(`Can't recurse into non-iterable type: ${e}`)}function ke(e){return null===e?null:kn(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function kt(e,t){let n=new Map;for(let r of(w9(e,t,n),Array.from(n.keys()))){let e=n.get(r);if(at.isPromise(e)){let t=await e;n.set(r,t)}}return w9(e,t,n)}function kn(e){let t=!1;if(e8.get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=J();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof aF)&&!(e instanceof Promise)&&!t)}function kr(e){return e instanceof aF?{value:e.clone(),recurse:!1}:kn(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var ka=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw RangeError("Can't create ring buffer of capacity < 1.");this.data=Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},ks=class e extends ka{constructor(){super(e.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};ks.INITIAL_CAPACITY=32;var ki,ko,kl,ku,kp,kd,kh=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)n=e((t=await this.next()).value)}handleErrors(e){return new kw(this,e)}filter(e){return new kx(this,e)}map(e){return new kv(this,e)}mapAsync(e){return new kk(this,e)}serialMapAsync(e){return new kk(this,e).serial()}flatmap(e){return new kS(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new kb(this,e,t)}columnMajorBatch(e,t=!0,n=ke){return this.rowMajorBatch(e,t).map(e=>(function(e,t=ke){return function e(t,n,r=new Set){let a=t[0];if(r.has(a))throw Error("Circular references are not supported.");let s=n(t);if(s.recurse&&null!==s.value)throw Error("A deep zip function may not return both a value and recurse=true.");if(!s.recurse)return s.value;if(kn(a)){let s=Array.isArray(a)?[]:{};for(let i in r.add(a),a){let a=e(t.map(e=>e[i]),n,r);s[i]=a}return r.delete(a),s}throw Error(`Can't recurse into non-iterable type: ${a}`)}(e,t)})(e,n))}concatenate(e,t){return new kN(new kc([this,e]),t)}take(e){return e<0||null==e?this:new ky(this,e)}skip(e){return e<0||null==e?this:new kg(this,e)}prefetch(e){return new k_(this,e)}shuffle(e,t){return new kC(this,e,t)}serial(){return new kf(this)}},kc=class extends kh{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:w9(e,kr),done:!1}}},km=class extends kh{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},kf=class extends kh{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},kg=class extends kh{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;sh(e.value)}return this.upstream.next()}},ky=class extends kh{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},kb=class extends kh{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},kx=class extends kh{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;sh(e.value)}}},kv=class extends kh{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=aM.getTensorsInContainer(e.value),n=this.transform(e.value),r=aM.getTensorsInContainer(n);for(let e of t)aM.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},kw=class extends kh{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},kk=class extends kh{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=aM.getTensorsInContainer(e.value),n=await this.transform(e.value),r=aM.getTensorsInContainer(n);for(let e of t)aM.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},kI=class extends kh{constructor(){super(),this.outputQueue=new ks,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},kS=class extends kI{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=aM.getTensorsInContainer(e.value),n=this.transform(e.value),r=aM.getTensorsInContainer(n);for(let e of(this.outputQueue.pushAll(n),t))aM.isTensorInList(e,r)||e.dispose();return!0}},kN=class extends kh{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(kd||(kd={}));var kT=class extends kh{constructor(e,t=kd.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0,r=await kt(this.iterators,function(e){return e instanceof kh?{value:e.next().then(e=>(t++,e.done&&n++,e.value)),recurse:!1}:{value:null,recurse:!0}});if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case kd.FAIL:throw Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case kd.SHORTEST:return{value:null,done:!0};case kd.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},k_=class extends kh{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new ka(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},kC=class extends k_{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=w7.alea(n||at.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},kE=class{constructor(){this.size=null}batch(e,t=!0){let n=this;return at.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`),k$(async()=>(await n.iterator()).columnMajorBatch(e,t,kR),this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e))}concatenate(e){let t=this;return k$(async()=>(await t.iterator()).concatenate(await e.iterator()),this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null)}filter(e){let t=this;return k$(async()=>(await t.iterator()).filter(t=>sd(()=>e(t))),this.size===1/0?1/0:null)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return k$(async()=>(await t.iterator()).map(t=>sd(()=>e(t))),this.size)}mapAsync(e){let t=this;return k$(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return k$(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this;return k$(async()=>new kN(new km(async()=>({value:await t.iterator(),done:!1})).take(e),void 0),null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null)}skip(e){let t=this;return k$(async()=>(await t.iterator()).skip(e),null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=w8.alea(t||at.now().toString());return k$(async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())},this.size)}take(e){let t=this;return k$(async()=>(await t.iterator()).take(e),null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null)}async toArray(){if(this.size===1/0)throw Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function k$(e,t=null){return new class extends kE{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function kA(e){return k$(async()=>new kc(e),e.length)}function kF(e){let t;if(!kn(e))throw Error("The argument to zip() must be an object or array.");if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return k$(async()=>(function(e,t=kd.FAIL){return new kT(e,t)})(await kt(e,e=>{if(e instanceof kE)return{value:e.iterator(),recurse:!1};if(kn(e))return{value:null,recurse:!0};throw Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}),kd.SHORTEST),t)}function kR(e){var t,n;return null===e?null:null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof aF||at.isTypedArray(t)?{value:function(e){if(0===e.length)throw Error("Can't make a batch of zero elements.");return e[0]instanceof aF?uJ(e):se(e)}(e),recurse:!1}:{value:null,recurse:!0}}kE.MAX_BUFFER_SIZE=1e4;var kD=class extends kE{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}},kM=Symbol("out"),kO=Symbol("field"),kL=Symbol("quote"),kz=Symbol("quoteafterquote"),kP=Symbol("quoteinquote"),kB=class extends kE{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&at.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((e,t)=>(e[t]=e[t]+1||1,e),{}),n=Object.keys(t).filter(e=>t[e]>1);if(at.assert(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(!this.hasHeader)return null;{let e=await (await this.base.iterator()).next();if(e.done)throw Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new kD(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(at.assert(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(e=>this.makeDataElement(e))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[a],l=null;if(""===o){if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}}else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=kM;for(let t=0;t<a;t++)switch(s){case kM:switch(e.charAt(t)){case'"':r=t+1,s=kL;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=kM;break;default:s=kO,r=t}break;case kO:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),s=kM,r=t+1);break;case kL:'"'===e.charAt(t)&&(s=kz);break;case kz:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=kM,r=t+1;break;case'"':s=kL;break;default:s=kP}break;case kP:'"'===e.charAt(t)&&(s=kL)}if(s===kz?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},kW=class e extends kh{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(t={}){if(!e8.get("IS_BROWSER"))throw Error("microphone API is only supported in browser environment.");let n=new e(t);return await n.start(),n}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(r=>{let a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((e,r)=>n.set(e,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(at.sizeFromShape(t));return n.set(e,n.length-e.length),se(n,t)}},kV=class e extends kh{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize()){if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=u2([0],"int32"),this.webcamConfig.centerCrop){let e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2;this.cropBox=u3([r,n,t+r,n+e],[1,4])}else this.cropBox=u3([0,0,1,1],[1,4])}}summary(){return"webcam"}static async create(t,n={}){if(!e8.get("IS_BROWSER"))throw Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!n.resizeWidth||!n.resizeHeight)throw Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=n.resizeWidth,t.height=n.resizeHeight}let r=new e(t,n);return await r.start(),r}async start(){this.webcamConfig.facingMode&&at.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){let e;if(this.isClosed)return{value:null,done:!0};try{e=he.fromPixels(this.webcamVideoElement)}catch(e){throw Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return sd(()=>{let t=o6(ig(e,"float32"),0),n,r=(n=dv.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear")).shape;return iZ(n,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw Error("Can not convert infinite video stream to array.")}},kU=class{},kG=class extends kh{split(e){return new kH(this,e)}},kH=class extends kG{constructor(e,t){super(),this.upstream=e,this.impl=new kj(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},kj=class extends kI{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);for(let e of(t[0]=this.carryover+t[0],t.slice(0,-1)))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},kq=class extends kh{decodeUTF8(){return new kK(this)}},kK=class extends kG{constructor(e){super(),this.upstream=e,this.impl=new kX(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},kX=class extends kI{constructor(e){if(super(),this.upstream=e,e8.get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=J();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t=await this.upstream.next(),n;return!t.done&&(n=t.value,e=e8.get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(Buffer.from(n.buffer)),this.outputQueue.push(e),!0)}},kY=class extends kq{constructor(e,t={}){super(),this.file=e,this.options=t,at.assert(e instanceof Uint8Array||!!e8.get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(Error("Aborted")),r.onerror=e=>t(Error(e.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}),done:!1}}};async function kZ(e,t={},n){let r,a;"string"==typeof e?r=e:(r=e.url,a=kJ(e));let s=await (n||at.fetch)(r,a);if(s.ok)return new kY(new Uint8Array(await s.arrayBuffer()),t);throw Error(s.statusText)}var kJ=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function kQ(e){return"string"==typeof e&&"file://"===e.slice(0,7)}var k0=class extends kU{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(kQ(this.input)&&e8.get("IS_NODE")){let e=Q();this.input=e.readFileSync(this.input.slice(7))}return new kY(this.input,this.options)}},k1=class extends kU{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return kQ(this.url)?new k0(this.url,this.fileOptions).iterator():kZ(this.url,this.fileOptions)}};function k2(e,t={}){return new kB(new k1(e),t)}function k3(e){let t=new km(e);return k$(async()=>t)}function k4(e){return k$(async()=>{let t=await e();return new km(()=>t.next())})}async function k6(e,t){return kV.create(e,t)}async function k5(e){return kW.create(e)}var k8="4.22.0";function k7(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&at.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var k9=cN.whereImpl,Ie=class e extends el{nextDataId(){return e.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new eo(this,aX)}write(e,t,n){this.firstUse&&(this.firstUse=!1,e8.get("IS_NODE")&&hR.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&at.isString(n[0])){let a=n.map(e=>at.encodeString(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return hR.mergeRealAndImagArrays(e,t)}return at.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map(e=>at.decodeString(e));return im(e.shape,e.dtype,n)}catch(e){throw Error("Failed to decode encoded string bytes into utf-8")}return im(e.shape,e.dtype,t)}makeOutput(e,t,n){return aX.makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=at.now();return e(),{kernelMs:at.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){k7([e],"where");let t=this.readSync(e.dataId);return k9(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};Ie.nextDataId=0;var It={};function In(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}function Ir(e){return(t,n,r,a,s)=>{let i=hR.assertAndGetBroadcastShape(t,n),o=i.length,l=at.computeStrides(i),u=at.sizeFromShape(i),p=at.getTypedArrayFromDType(s,u),d=t.length,h=n.length,c=at.computeStrides(t),m=at.computeStrides(n),f=hR.getBroadcastDims(t,i),g=hR.getBroadcastDims(n,i);if(f.length+g.length===0)for(let t=0;t<p.length;++t)p[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<p.length;++t){let n=at.indexToLoc(t,o,l),s=n.slice(-d);f.forEach(e=>s[e]=0);let i=at.locToIndex(s,d,c),u=n.slice(-h);g.forEach(e=>u[e]=0);let y=at.locToIndex(u,h,m);p[t]=e(r[i],a[y])}return[p,i]}}function Ia(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}function Is(e,t,n="float32"){if("complex64"===n)return Ia({inputs:{real:Is(e,t,"float32"),imag:Is(e,t,"float32")},backend:e});let r=at.makeZerosTypedArray(at.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Ii(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Io(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}function Il(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){let r=at.toTypedArray([0],n),[a,s]=Ir((e,t)=>e!==t?1:0)(t,[],e,r,"bool");return[s,"bool",a]}throw Error(`Error in Cast: failed to cast ${n} to ${r}`)}function Iu(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return Ii({inputs:{x:a},backend:n});let e=Is(n,a.shape,a.dtype),t=Iu({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=Ia({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=Io({inputs:{input:a},backend:n}),t=Iu({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!at.hasEncodingLoss(a.dtype,s)){let e=Ii({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}let[i,o,l]=Il(n.data.get(a.dataId).values,a.shape,a.dtype,s);return n.makeTensorInfo(i,o,l)}function Ip(e,t,n,r){return null==n?({inputs:n,backend:a})=>{let{a:s,b:i}=n;k7([s,i],e);let o=a.data.get(s.dataId).values,l=a.data.get(i.dataId).values,u="string"===s.dtype?hR.fromUint8ToStringArray(o):o,p="string"===s.dtype?hR.fromUint8ToStringArray(l):l,d=r||s.dtype,[h,c]=t(s.shape,i.shape,u,p,d);return a.makeTensorInfo(c,d,h)}:({inputs:e,backend:a})=>{let{a:s,b:i}=e;if("complex64"===s.dtype||"complex64"===i.dtype){let e=Iu({inputs:{x:s},backend:a,attrs:{dtype:"complex64"}}),t=a.data.get(e.dataId),r=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,l=a.data.get(r.dataId).values,u=a.data.get(o.dataId).values,p=Iu({inputs:{x:i},backend:a,attrs:{dtype:"complex64"}}),d=a.data.get(p.dataId),h=d.complexTensorInfos.real,c=d.complexTensorInfos.imag,m=a.data.get(h.dataId).values,f=a.data.get(c.dataId).values,[g,y,b]=n(s.shape,i.shape,l,u,m,f),x=a.makeTensorInfo(b,"float32",g),v=a.makeTensorInfo(b,"float32",y),w=Ia({inputs:{real:x,imag:v},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),w}{let e=a.data.get(s.dataId).values,n=a.data.get(i.dataId).values,o=r||s.dtype,[l,u]=t(s.shape,i.shape,e,n,o);return a.makeTensorInfo(u,o,l)}}}function Id(e){return(t,n,r,a,s,i)=>{let o=hR.assertAndGetBroadcastShape(t,n),l=at.sizeFromShape(o),u=o.length,p=at.computeStrides(o),d=at.getTypedArrayFromDType("float32",l),h=at.getTypedArrayFromDType("float32",l),c=hR.getBroadcastDims(t,o),m=hR.getBroadcastDims(n,o),f=hR.mergeRealAndImagArrays(r,a),g=hR.mergeRealAndImagArrays(s,i),y=t.length,b=at.computeStrides(t),x=n.length,v=at.computeStrides(n);if(c.length+m.length===0)for(let t=0;t<d.length;t++){let n=t%f.length,r=t%g.length,a=e(f[2*n],f[2*n+1],g[2*r],g[2*r+1]);d[t]=a.real,h[t]=a.imag}else for(let t=0;t<d.length;t++){let n=at.indexToLoc(t,u,p),r=n.slice(-y);c.forEach(e=>r[e]=0);let a=at.locToIndex(r,y,b),s=n.slice(-x);m.forEach(e=>s[e]=0);let i=at.locToIndex(s,x,v),o=e(f[2*a],f[2*a+1],g[2*i],g[2*i+1]);d[t]=o.real,h[t]=o.imag}return[d,h,o]}}L(It,{addImpl:()=>Ih,bincountImpl:()=>Im,bincountReduceImpl:()=>If,bitwiseAndImpl:()=>Ig,castImpl:()=>Il,ceilImpl:()=>Iw,concatImpl:()=>II,equalImpl:()=>IS,expImpl:()=>IT,expm1Impl:()=>IC,floorDivImpl:()=>IF,floorImpl:()=>I$,gatherNdImpl:()=>ID,gatherV2Impl:()=>IM,greaterEqualImpl:()=>Iz,greaterImpl:()=>IO,lessEqualImpl:()=>IV,lessImpl:()=>IB,linSpaceImpl:()=>IG,logImpl:()=>IH,maxImpl:()=>Iq,maximumImpl:()=>IK,minimumImpl:()=>IY,multiplyImpl:()=>IJ,negImpl:()=>I0,notEqualImpl:()=>I1,prodImpl:()=>I6,raggedGatherImpl:()=>I8,raggedRangeImpl:()=>I7,raggedTensorToTensorImpl:()=>Sr,rangeImpl:()=>Sa,rsqrtImpl:()=>Ss,scatterImpl:()=>So,sigmoidImpl:()=>Sl,simpleAbsImpl:()=>In,sliceImpl:()=>Sp,sparseFillEmptyRowsImpl:()=>Sh,sparseReshapeImpl:()=>Sc,sparseSegmentReductionImpl:()=>Sm,sqrtImpl:()=>Sf,squaredDifferenceImpl:()=>Sy,staticRegexReplaceImpl:()=>Sx,stridedSliceImpl:()=>Sw,stringNGramsImpl:()=>SI,stringSplitImpl:()=>SS,stringToHashBucketFastImpl:()=>SN,subImpl:()=>ST,tileImpl:()=>SC,topKImpl:()=>S$,transposeImpl:()=>I3,uniqueImpl:()=>SA});var Ih=Ir((e,t)=>e+t),Ic=Ip(tr,Ih,Id((e,t,n,r)=>({real:e+n,imag:t+r})));function Im(e,t,n,r,a){let s=at.sizeFromShape(r),i=at.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){let r=e[n];if(r<0)throw Error("Input x must be non-negative!");r>=a||(s>0?i[r]+=t[n]:i[r]+=1)}return i}function If(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=im([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}var Ig=Ir((e,t)=>e&t),Iy=Ip(tw,Ig);function Ib(e){return(t,n,r)=>{let a=at.getArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function Ix(e,t,n){return Iv(e,Ib(t),n)}function Iv(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;k7(i,e);let o=s.data.get(i.dataId).values,l;if("string"===i.dtype){if(!Array.isArray(o))throw Error("String tensor's value was not an instance of Array");l=hR.fromUint8ToStringArray(o)}else l=o;let u=n||i.dtype,p=t(l,u,a);return s.makeTensorInfo(i.shape,u,p)}}var Iw=Ib(e=>Math.ceil(e)),Ik=Iv(tN,Iw);function II(e,t,n,r){let a=at.getArrayFromDType(n,at.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach(e=>{let n=at.sizeFromShape(e.shape);a.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{let s="string"===n?hR.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]})}return a}var IS=Ir((e,t)=>e===t?1:0),IN=Ip(t2,IS,null,"bool"),IT=Ib(e=>Math.exp(e)),I_=Iv(t3,IT,"float32"),IC=Ib(e=>Math.expm1(e)),IE=Iv(t6,IC),I$=Ib(e=>Math.floor(e)),IA=Iv(t9,I$),IF=Ir((e,t)=>Math.floor(e/t)),IR=Ip(ne,IF,null,"int32");function ID(e,t,n,r,a,s,i,o,l){let u=im([r,s],n);for(let n=0;n<r;n++){let r=[],p=0;for(let t=0;t<a;t++){let s=e[n*a+t];p+=s*i[t],r.push(s)}if(p<0||p>=l/s)throw Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)u.values[n*s+e]=t.get(...t.indexToLoc(p*s+e))}return u}function IM(e,t,n){let r=im(n,e.dtype);for(let n=0;n<r.size;++n){let a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];let l=e.locToIndex(a);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}var IO=Ir((e,t)=>e>t?1:0),IL=Ip(na,IO,null,"bool"),Iz=Ir((e,t)=>e>=t?1:0),IP=Ip(ns,Iz,null,"bool"),IB=Ir((e,t)=>e<t?1:0),IW=Ip(nc,IB,null,"bool"),IV=Ir((e,t)=>e<=t?1:0),IU=Ip(nm,IV,null,"bool");function IG(e,t,n){let r=(t-e)/(n-1),a=at.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}var IH=Ib(e=>Math.log(e)),Ij=Iv(ng,IH);function Iq(e,t,n,r){let a=at.getTypedArrayFromDType(r,at.sizeFromShape(n));for(let n=0;n<a.length;++n){let r=n*t,s=e[r];for(let n=0;n<t;++n){let t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}var IK=Ir((e,t)=>Math.max(e,t)),IX=Ip(nC,IK),IY=Ir((e,t)=>Math.min(e,t)),IZ=Ip(nO,IY),IJ=Ir((e,t)=>e*t),IQ=Ip(nB,IJ,Id((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})));function I0(e,t,n){return IJ([],t,at.createScalarValue(-1,n),e,n)}var I1=Ir((e,t)=>e!==t?1:0),I2=Ip(nV,I1,null,"bool");function I3(e,t,n,r,a){let s=t.length,i=at.sizeFromShape(t),o=at.computeStrides(t),l=at.computeStrides(a),u=at.getTypedArrayFromDType(n,at.sizeFromShape(a));for(let t=0;t<i;++t){let n=at.indexToLoc(t,s,o),a=Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];u[at.locToIndex(a,s,l)]=e[t]}return u}function I4(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;k7(a,"transpose");let i=Array(a.shape.length);for(let e=0;e<i.length;e++)i[e]=a.shape[s[e]];let o=I3(r.data.get(a.dataId).values,a.shape,a.dtype,s,i);return{dataId:r.write(o,i,a.dtype),shape:i,dtype:a.dtype}}function I6(e,t,n,r){let[a,s]=hR.computeOutAndReduceShapes(e,r),i=aL(t,"int32"),o=at.makeZerosTypedArray(at.sizeFromShape(a),i),l=at.sizeFromShape(s);for(let e=0;e<o.length;++e){let t=e*l,r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}function I5(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function I8(e,t,n,r,a,s,i,o){let l,u,p,d;if(0===e.length)throw Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach((e,r)=>{if(e<0||e>=n){let a=at.indexToLoc(r,t.length,at.computeStrides(t)).join(",");throw Error(`indices[${a}] = ${e} is not in [0, ${n})`)}})}(s,i,t[0][0]-1),0===r.length)throw Error("params.rank must be nonzero");let{outSplits:h,valueSlices:c,numValues:m}=function(e,t,n,r){let a=[],s=0,i=Array(t.length-1+n.length).fill(null).map(()=>[0]);!function(e,t){for(let n=0;n<e.length;++n){let r=e[n],a=n===e.length-1?t:e[n+1].length;if(0===r.length)throw Error("Ragged splits may not be empty");if(r[0]<0)throw Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw Error("Ragged splits must be sorted in ascending order")}}(n,r);let o=1;for(let e=0;e<t.length-1;++e){o*=t[e];let n=t[e+1];for(let t=1;t<o+1;++t)i[e].push(t*n)}for(let r=0;r<e.length;++r){let o=e[r],l=e[r]+1;for(let e=0;e<n.length;++e){let r=n[e],a=e+t.length-1;if(a>=0){let e=i[a],t=e[e.length-1]-r[o];for(let e=o;e<l;++e)i[a].push(r[e+1]+t)}o=r[o],l=r[l]}l!==o&&(a.push([o,l]),s+=l-o)}return{outSplits:i,valueSlices:a,numValues:s}}(s,i,e,r[0]),f=function(e){let t=[];for(let n=0;n<e.length;++n){let r=e[n].length,a=at.getArrayFromDType("int32",r);t.push(a),e[n].forEach((e,t)=>a[t]=e)}return t}(h),g=((l=r.slice())[0]=m,u=at.getArrayFromDType(a,at.sizeFromShape(l)),d=0===(p=n.length)?0:p/r[0],function(e,t,n,r,a,s){let i=I5(t,2)[1],o=I5(s,2)[1],l=0;for(let t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)a[l*o+t]=e[n*i+t];++l}}(n,r,c,d,u,l),[u,l]);return[f,g[0],g[1]]}function I7(e,t,n,r,a,s,i){if(t.length>1)throw Error("starts must be a scalar or vector");if(a.length>1)throw Error("limits must be a scalar or vector");if(i.length>1)throw Error("deltas must be a scalar or vector");let o=0===t.length,l=0===a.length,u=0===i.length,p=[];o||p.push(t[0]),l||p.push(a[0]),u||p.push(i[0]);for(let e=1;e<p.length;++e)if(p[e]!==p[e-1])throw Error("starts, limits, and deltas must have the same shape");let d=0===p.length?1:p[0],h=at.getArrayFromDType("int32",d+1);h[0]=0;for(let t=0;t<d;++t){let n,a=o?e[0]:e[t],i=l?r[0]:r[t],p=u?s[0]:s[t];if(0===p)throw Error("Requires delta != 0");if(p>0&&i<a||p<0&&i>a)n=0;else if((n=Math.ceil(Math.abs((i-a)/p)))>0x7fffffff)throw Error("Requires ((limit - start) / delta) <= 2147483647");h[t+1]=h[t]+n}let c=h[d],m=at.getArrayFromDType(n,c),f=0;for(let t=0;t<d;++t){let n=h[t+1]-h[t],r=o?e[0]:e[t],a=u?s[0]:s[t];for(let e=0;e<n;++e)m[f++]=r,r+=a}return[h,m]}var I9=hR.RowPartitionType,Se=class e{constructor(e,t,n,r,a,s,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=a,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=hR.getRowPartitionTypesHelper(u),this.raggedRank=hR.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===I9.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===I9.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(t){let n=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case I9.VALUE_ROWIDS:return e.getMaxWidthValueRowID(n);case I9.ROW_SPLITS:return e.getMaxWidthRowSplit(n);default:throw Error(`Cannot handle partition type ${I9[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){let t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){let t=e[s];t!==r&&(r=t,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Sn(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;hR.validateDefaultValueShape(n,t);let r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=hR.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);a[0]<0&&(a[0]=e);for(let e=1;e<=this.raggedRank;++e)a[e]<0&&(a[e]=this.getMaxWidth(e));return a}calculateFirstParentOutputIndex(e,t,n){let r=Math.min(e,n),a=[],s=0;for(let e=0;e<r;++e,s+=t)a.push(s);for(let t=r;t<e;++t)a.push(-1);return at.assert(a.length===e,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(e,t,n,r){let a=e.length,s=[];for(let i=0;i<a-1;++i){let a=e[i+1]-e[i],o=Math.min(r,a),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)s.push(l),l+=n;for(let e=0;e<a-o;++e)s.push(-1)}if(a>0&&s.length!==e[a-1])throw Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){let a=e.length,s=[];if(0===a)return[];let i=0,o=e[0];if(o>=t.length)throw Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<a;++u){let a=e[u];if(a===o)l>=0&&(++i<r?l+=n:l=-1);else{if(i=0,o=a,a>=t.length)throw Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);l=t[a]}s.push(l)}if(s.length!==e.length)throw Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){let a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case I9.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case I9.ROW_SPLITS:if(a.length-1>t.length)throw Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw Error(`Unsupported partition type: ${I9[s]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case I9.FIRST_DIM_SIZE:return e[0];case I9.VALUE_ROWIDS:throw Error("Cannot handle VALUE_ROWIDS in first dimension.");case I9.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw Error(`Cannot handle type ${I9[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];let r=Sn(t,!1),a=at.getArrayFromDType(this.valuesDType,at.sizeFromShape(r));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)s=this.calculateOutputIndex(e-1,s,n[e],t[e]);this.setOutput(this.raggedRank,s,a,r)}return[r,a]}setOutput(e,t,n,r){if(0===n.length)return;let a=this.values,s=r.slice();s=s.slice(e+1);let i=at.sizeFromShape(s),o=t.length,l=this.defaultValue;if(l.length!==i&&1!==l.length){let e=this.defaultValueShape;sd(()=>{l=oa(iZ(l,e),s).dataSync()})}let u=0,p=0,d=0;for(let e=0;e<=o;++e){let r=e<o?t[e]:-1;if(r===d){++d;continue}if(p<d){let e=a.subarray(u*i);St(n.subarray(p*i),e,(d-p)*i)}if(e>=o&&(r=Math.floor(n.length/i)),r>d){if(1===this.defaultValue.length)n.subarray(d*i,r*i).fill(this.defaultValue[0]),d=r;else for(;r>d;)St(n.slice(d*i),l,i),++d}r<0?(u=e+1,p=d):(u=e,d=(p=d)+1)}}};function St(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function Sn(e,t){let n=[];for(let r of e){if(r<0){if(!t)throw Error(`Dimension ${r} must be >= 0`);if(r<-1)throw Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function Sr(e,t,n,r,a,s,i,o,l,u){return new Se(e,t,n,r,a,s,i,o,l,u).compute()}function Sa(e,t,n,r){let a=e===t,s=e<t&&n<0,i=t<e&&n>1;if(a||s||i)return at.makeZerosTypedArray(0,r);let o=Math.abs(Math.ceil((t-e)/n)),l=at.makeZerosTypedArray(o,r);t<e&&1===n&&(n=-1),l[0]=e;for(let e=1;e<l.length;e++)l[e]=l[e-1]+n;return l}var Ss=Ib(e=>1/Math.sqrt(e)),Si=Iv(rs,Ss);function So(e,t,n,r,a,s,i,o,l,u){let p=e.values,d=t.values;if(0===r)return im(n,t.dtype);let h=l instanceof aE?l:im([r/a,a],t.dtype);"string"==typeof l||"number"==typeof l?h.values.fill(l):"boolean"==typeof l&&h.values.fill(+l);for(let e=0;e<s;e++){let s=[],l=0;for(let t=0;t<i;t++){let n=p[e*i+t];s.push(n),l+=n*o[t]}if(l<0||l>=r/a)throw Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)u?h.values[l*a+n]+=d[e*a+n]:h.values[l*a+n]=0===t.rank?d[0]:d[e*a+n]}return h}var Sl=Ib(e=>1/(1+Math.exp(-e))),Su=Ix(rf,e=>1/(1+Math.exp(-e)));function Sp(e,t,n,r,a){let s=hd.isSliceContinous(r,t,n),i=at.sizeFromShape(n),o=at.computeStrides(r);if(s){let n=hd.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l="string"===a?hR.fromUint8ToStringArray(e):e,u=im(r,a,l),p=im(n,a);for(let e=0;e<p.size;++e){let n=p.indexToLoc(e),r=n.map((e,n)=>e+t[n]);p.set(u.get(...r),...n)}return"string"===a?hR.fromStringArrayToUint8(p.values):p.values}function Sd(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;k7(a,"slice");let[o,l]=hd.parseSliceParams(a,s,i);hd.assertParamsValid(a,o,l);let u=Sp(n.data.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}function Sh(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=Array(l),p=Array(o),d=t[1];if(0===l){if(0!==o)throw Error(hR.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[at.getArrayFromDType(n,0),[0,d],at.getArrayFromDType(a,0),u,p]}let h=!0,c=0,m=Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*d];if(n<0)throw Error(hR.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw Error(hR.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++m[n],h=h&&n>=c,c=n}let f=!0;for(let e=0;e<l;++e){let t=0===m[e];u[e]=t,f=f&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(f&&h){for(let e=0;e<o;++e)p[e]=e;return[e,[o,d],r,u,p]}{let t=m[l-1],s=at.getArrayFromDType(n,t*d),h=at.getArrayFromDType(a,t),c=Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*d],a=c[n],i=(0===n?0:m[n-1])+a;c[n]++;for(let n=0;n<d;++n)s[i*d+n]=e[t*d+n];h[i]=r[t],p[t]=i}for(let e=0;e<l;++e)if(0===c[e]){let t=0===e?0:m[e-1];s[t*d+0]=e;for(let e=1;e<d;++e)s[t*d+e]=0;h[t]=i}return[s,[t,d],h,u,p]}}function Sc(e,t,n,r,a){let s=at.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,p=-1;for(let e=0;e<o;++e){let t=a[e];if(-1===t){if(-1!==p)throw Error(hR.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(p,e));p=e,l.push(1)}else{if(t<0)throw Error(hR.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==p){if(u<=0)throw Error(hR.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw Error(hR.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[p]=e}if(at.sizeFromShape(l)!==s)throw Error(hR.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let d=r.length,h=[];if(d>0){h[d-1]=1;for(let e=d-2;e>=0;--e)h[e]=h[e+1]*r[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*l[e+1]}let m=at.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<d;++r)n+=e[t*d+r]*h[r];for(let e=0;e<o;++e)m[t*o+e]=Math.trunc(n/c[e]),n%=c[e]}return[m,[i,o],l]}function Sm(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],u=l[1],p=o>0?a[o-1]+1:0;if(p<0)throw Error(hR.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=p;let h=d.reduce((e,t)=>e*t,1),c=at.getArrayFromDType(n,h);if(0===o)return p>0&&c.fill(i),[c,d];if(p<=0)throw Error(hR.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,f=1,g=0,y=a[0];for(;;){let t=0;if(f<o){if(y===(t=a[f])){++f;continue}if(y>=t)throw Error(hR.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=p)throw Error(hR.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,p));y>g&&c.fill(i,g*u,y*u);for(let t=m;t<f;++t){let n=r[t];if(n<0||n>=l[0])throw Error(hR.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],l[0]));for(let t=0;t<u;t++)c[y*u+t]+=e[n*u+t]}if(s)for(let e=0;e<u;e++)c[y*u+e]/=f-m;if(m=f,++f,g=y+1,y=t,f>o)break}return g<p&&c.fill(i,g*u,p*u),[c,d]}var Sf=Ib(e=>Math.sqrt(e)),Sg=Ix(ry,e=>Math.sqrt(e)),Sy=Ir((e,t)=>{let n=e-t;return n*n}),Sb=Ip(r_,Sy),Sx=Ib((e,t)=>{let{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)}),Sv=Iv(rE,Sx);function Sw(e,t,n,r){let a=im(e,t.dtype);for(let e=0;e<a.size;e++){let s=a.indexToLoc(e),i=Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}var Sk=class{constructor(e,t,n,r,a,s){this.separator=at.encodeString(e),this.nGramWidths=t,this.leftPad=at.encodeString(n),this.rightPad=at.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){return Math.max(0,e+2*this.getPadWidth(t)-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),p=s-(l+u),d=t+(l>0?0:i-o),h;h=0+l*this.leftPad.length;for(let t=0;t<p;++t)h+=e[d+t].length;h+=u*this.rightPad.length,h+=(l+u+p-1)*this.separator.length,n[r+i]=new Uint8Array(h);let c=n[r+i],m=0,f=e=>e.forEach(e=>c[m++]=e);for(let e=0;e<l;++e)f(this.leftPad),f(this.separator);for(let t=0;t<p-1;++t)f(e[d+t]),f(this.separator);if(p>0){f(e[d+p-1]);for(let e=0;e<u;++e)f(this.separator),f(this.rightPad)}else{for(let e=0;e<u-1;++e)f(this.rightPad),f(this.separator);f(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(!(r=r&&t[a]<=n))throw Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let a=r-1,s=at.getArrayFromDType("int32",r);if(0===n||0===r){let e=Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){let n=t[e]-t[e-1],r=0;this.nGramWidths.forEach(e=>{r+=this.getNumNGrams(n,e)}),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}let i=Array(s[a]);for(let n=0;n<a;++n){let r=t[n],a=s[n];if(this.nGramWidths.forEach(s=>{let o=t[n+1]-t[n],l=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,l,s),a+=l}),this.preserveShort&&a===s[n]){let s=t[n+1]-t[n];if(0===s)continue;let o=s+2*this.padWidth;this.createNGrams(e,r,i,a,1,o)}}return[i,s]}};function SI(e,t,n,r,a,s,i,o){return new Sk(n,r,a,s,i,o).compute(e,t)}function SS(e,t,n){let r=e.length,a=[],s=0,i=0,o=Array(r);for(let l=0;l<r;++l){let r=a.length;!function(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){let a=t[0],s=e.indexOf(a);for(;-1!==s;){let t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}n&&0===e.length||r.push(e);return}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}(e[l],t,n,a);let u=a.length-r;o[l]=u,s+=u,i=Math.max(i,u)}let l=at.getArrayFromDType("int32",2*s),u=Array(s),p=[r,i],d=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*d]=e,l[2*d+1]=t,u[d]=a[d],++d;return[l,u,p]}function SN(e,t){let n=at.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=at.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var ST=Ir((e,t)=>e-t),S_=Ip(rD,ST,Id((e,t,n,r)=>({real:e-n,imag:t-r})));function SC(e,t){let n=Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let r=im(n,e.dtype);for(let t=0;t<r.values.length;++t){let n=r.indexToLoc(t),a=Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];let s=e.locToIndex(a);r.values[t]=e.values[s]}return r}var SE=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function S$(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=at.getTypedArrayFromDType(n,i*r),u=at.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){let n=t*o,s=e.subarray(n,n+o),i=Array(s.length);s.forEach((e,t)=>i[t]={value:e,index:t}),r<i.length&&(function e(t,n,r=0,a=t.length-1){for(;a>r;){if(a-r>600){let s=a-r+1,i=n-r+1,o=Math.log(s),l=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*l*(s-l)/s)*Math.sign(i-s/2),p=Math.max(r,Math.floor(n-i*l/s+u)),d=Math.min(a,Math.floor(n+(s-i)*l/s+u));e(t,n,p,d)}let s=t[n],i=r,o=a;for(at.swap(t,r,n),SE(t[a],s)>0&&at.swap(t,r,a);i<o;){for(at.swap(t,i,o),i++,o--;0>SE(t[i],s);)i+=1;for(;SE(t[o],s)>0;)o-=1}0===SE(t[r],s)?at.swap(t,r,o):(o+=1,at.swap(t,o,a)),o<=n&&(r=o+1),n<=o&&(a=o-1)}}(i,r),i=i.slice(0,r)),a&&i.sort(SE);let p=t*r,d=l.subarray(p,p+r),h=u.subarray(p,p+r);for(let e=0;e<r;e++)d[e]=i[e].value,h[e]=i[e].index}let p=t.slice();return p[p.length-1]=r,[im(p,n,l),im(p,"int32",u)]}function SA(e,t,n,r){let a=at.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];let i=new Map,o=new Int32Array(n[a]),l=new aE(s,r,e),u=[],p=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(p)n=e[t].toString();else{let e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}let r=i.get(n);if(null!=r)o[t]=r;else{let e=i.size;i.set(n,e),o[t]=e,u.push(t)}}let d=s.slice();d[1]=i.size;let h=new aE(d,r);u.forEach((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)h.set(l.get(n,e,r),n,t,r)});let c=n.slice();return c[a]=d[1],{outputValues:h.values,outputShape:c,indices:o}}var SF="4.22.0";sw("cpu",()=>new Ie,1);var SR=Ix(tQ,e=>e>=0?e:Math.exp(e)-1);function SD(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;k7([a],"leakyRelu");let i=at.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=at.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",l)}var SM=Ir((e,t)=>e<0?t*e:e);function SO(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;k7([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=SM(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var SL=Ix(n5,e=>Math.max(0,e)),Sz=Ix(rn,e=>Math.min(Math.max(0,e),6));function SP(e,t,n,r,a){if("linear"===n)return Ii({inputs:{x:t},backend:e});if("relu"===n)return SL({inputs:{x:t},backend:e});if("elu"===n)return SR({inputs:{x:t},backend:e});if("relu6"===n)return Sz({inputs:{x:t},backend:e});if("prelu"===n)return SO({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return SD({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return Su({inputs:{x:t},backend:e});throw Error(`Activation ${n} has not been implemented for the CPU backend.`)}function SB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=at.sizeFromShape(a.shape),o=at.inferFromImplicitShape(s,i),l=at.sizeFromShape(o);at.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}function SW(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;k7([a,s],"matMul");let l=a.shape.length,u=s.shape.length,p=i?a.shape[l-2]:a.shape[l-1],d=o?s.shape[u-1]:s.shape[u-2],h=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],m=a.shape.slice(0,-2),f=s.shape.slice(0,-2),g=at.sizeFromShape(m),y=at.sizeFromShape(f),b=oC.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,c]);at.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=SB({inputs:{x:a},backend:n,attrs:{shape:i?[g,p,h]:[g,h,p]}}),v=SB({inputs:{x:s},backend:n,attrs:{shape:o?[y,c,d]:[y,d,c]}}),w=i?x.shape[1]:x.shape[2],k=i?x.shape[2]:x.shape[1],I=o?v.shape[1]:v.shape[2],S=Math.max(g,y),N=n.data.get(x.dataId).values,T=n.data.get(v.dataId).values,_=at.computeStrides(x.shape),C=at.computeStrides(v.shape),[E,$,A]=i?[_[0],1,_[1]]:[_[0],_[1],1],[F,R,D]=o?[1,C[1],C[0]]:[C[1],1,C[0]],M=k*I,O=im([S,k,I],x.dtype),L=O.values,z=n.blockSize;for(let e=0;e<S;e++){let t=e%g,n=e%y;for(let r=0;r<k;r+=z){let a=Math.min(r+z,k);for(let s=0;s<I;s+=z){let i=Math.min(s+z,I);for(let o=0;o<w;o+=z){let l=Math.min(o+z,w);for(let u=r;u<a;u++)for(let r=s;r<i;r++){let a=0;for(let e=o;e<l;e++)a+=N[t*E+u*$+e*A]*T[e*F+r*R+n*D];L[e*M+(u*I+r)]+=a}}}}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,O.dtype,O.values)}var SV=Ix(tt,e=>Math.acos(e)),SU=Ix(tn,e=>Math.acosh(e)),SG=Ix(tu,e=>Math.asin(e)),SH=Ix(tp,e=>Math.asinh(e)),Sj=Ix(td,e=>Math.atan(e)),Sq=Ip(tc,Ir((e,t)=>Math.atan2(e,t))),SK=Ix(th,e=>Math.atanh(e));function SX(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,p=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,c=a.padInfo.left,m="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,f=im(a.outShape,n),g=f.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){let n=t*y,f=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){let v=y*i-h,w=Math.max(0,v),k=Math.min(a.inHeight,p+v),I=n+y*b;for(let n=0;n<a.outWidth;++n){let i=n*o-c,p=Math.max(0,i),h=Math.min(a.inWidth,d+i),y=m,b=0,v=0;for(let n=w;n<k;n+=l){let a=f+n*r[1];for(let n=p;n<h;n+=u){let i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,v++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/v:y}}}return f}function SY(e,t,n,r,a=!1,s=!1){let i=im(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,p=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,c=r.padInfo.top,m=r.padInfo.left,f=im(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){let g=n*o-c,y=g;for(;y<0;)y+=u;let b=Math.min(r.inHeight,d+g);for(let o=0;o<r.outWidth;++o){let d=o*l-m,c=d;for(;c<0;)c+=p;let x=Math.min(r.inWidth,h+d),v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){let i=n-g;for(let o=c;o<x;o+=p){let l=o-d,u=f.get(e,n,o,t);u>v&&(v=u,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*h+l)}}i.set(w,e,n,o,t)}}return i}function SZ(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,p=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterDepth,c=a.effectiveFilterHeight,m=a.effectiveFilterWidth,f=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=im(a.outShape,n),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let t=0;t<a.batchSize;++t){let n=t*w,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){let N=w*i-f,T=N;for(;T<0;)T+=u;let _=Math.min(a.inDepth,h+N),C=n+w*k;for(let n=0;n<a.outHeight;++n){let i=n*o-g,h=i;for(;h<0;)h+=p;let f=Math.min(a.inHeight,c+i),w=C+n*I;for(let n=0;n<a.outWidth;++n){let i=n*l-y,o=i;for(;o<0;)o+=d;let c=Math.min(a.inWidth,m+i),g=w+n*S,k=b,I=0,N=0;for(let n=T;n<_;n+=u){let a=x+n*r[1];for(let n=h;n<f;n+=p){let i=a+n*r[2];for(let n=o;n<c;n+=d){let a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===s?I/Math.max(N,1):k}}}}return x}var SJ=Ix(tT,(e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e);function SQ(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}function S0(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=at.parseAxisParam(a,t[0].shape)[0],i=t.map(e=>e.shape);hR.assertParamsConsistent(i,s);let o=hR.computeOutShape(t.map(e=>e.shape),s);if(0===at.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(e=>at.sizeFromShape(e.shape)>0);if(1===l.length)return Ii({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){let e=l.map(e=>Io({inputs:{input:e},backend:n})),t=l.map(e=>SQ({inputs:{input:e},backend:n})),r=S0({inputs:e,backend:n,attrs:{axis:s}}),a=S0({inputs:t,backend:n,attrs:{axis:s}}),i=Ia({inputs:{real:r,imag:a},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}let u=l.map(e=>{let t=[-1,at.sizeFromShape(e.shape.slice(s))];return SB({inputs:{x:e},backend:n,attrs:{shape:t}})}),p=u.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));o=hR.computeOutShape(u.map(e=>e.shape),1);let d=1===u[0].shape[0],h=II(p,o,t[0].dtype,d),c=hR.computeOutShape(l.map(e=>e.shape),s),m=n.makeTensorInfo(c,t[0].dtype,h);return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}function S1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:p}=r;k7([a,s],"conv2d");let d=hR.convertConv2DDataFormat(l),h=hR.computeConv2DInfo(a.shape,s.shape,i,u,o,p,!1,d),c=h.filterHeight,m=h.filterWidth,f=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,x="channelsLast"===h.dataFormat,v=new aE(h.outShape,a.dtype),w=at.computeStrides(a.shape),k=at.computeStrides(s.shape),I=w[0],S=x?w[1]:w[2],N=x?w[2]:1,T=x?1:w[1],_=v.strides[0],C=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,$=x?1:v.strides[1],A=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,R=v.values;for(let e=0;e<h.batchSize;++e){let t=e*I,n=e*_;for(let e=0;e<h.outHeight;++e){let r=n+e*C,a=e*h.strideHeight-b;for(let e=0;e<c;++e){let n=a+e*f;if(n<0||n>=h.inHeight)continue;let s=e*k[0],i=t+n*S;for(let e=0;e<h.outWidth;++e){let t=r+e*E,n=e*h.strideWidth-y;for(let e=0;e<m;++e){let r=n+e*g;if(r<0||r>=h.inWidth)continue;let a=s+e*k[1],o=i+r*N,l=a;for(let e=0;e<h.inChannels;++e){let n=A[o+e*T];for(let e=0;e<h.outChannels;++e)R[t+e*$]+=n*F[l+e];l+=h.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,R)}var S2=Ix(tO,e=>Math.cos(e)),S3=Ix(tL,e=>Math.cosh(e));function S4(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;k7([a,s],"depthwiseConv2DNative");let p=at.computeStrides(a.shape),d=at.computeStrides(s.shape),h=l;null==h&&(h=[1,1]),at.assert(hR.eitherStridesOrDilationsAreOne(i,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);let c=hR.computeConv2DInfo(a.shape,s.shape,i,h,o,u,!0),{filterHeight:m,filterWidth:f,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,v=b.top,w=c.outChannels/c.inChannels,k=new aE(c.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let e=0;e<c.batchSize;++e){let t=e*p[0],n=e*k.strides[0];for(let e=0;e<c.outHeight;++e){let r=n+e*k.strides[1],a=e*c.strideHeight-v;for(let e=0;e<m;++e){let n=a+e*g;if(n<0||n>=c.inHeight)continue;let s=e*d[0],i=t+n*p[1];for(let e=0;e<c.outWidth;++e){let t=r+e*k.strides[2],n=e*c.strideWidth-x;for(let e=0;e<f;++e){let r=n+e*y;if(r<0||r>=c.inWidth)continue;let a=s+e*d[1],o=i+r*c.inChannels,l=t,u=a;for(let e=0;e<c.inChannels;++e){let t=I[o+e];for(let e=0;e<w;++e)N[l+e]+=t*S[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}function S6(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a;k7(s,"sum");let l=(t="bool"===s.dtype?Iu({inputs:{x:s},backend:r,attrs:{dtype:"int32"}}):Ii({inputs:{x:s},backend:r})).shape.length,u=at.parseAxisParam(i,t.shape),p=hR.getAxesPermutation(u,l),d=u,h=t;null!=p&&(h=I4({inputs:{x:t},backend:r,attrs:{perm:p}}),d=hR.getInnerMostAxes(d.length,l)),hR.assertAxesAreInnerMostDims("sum",d,h.shape.length);let[c,m]=hR.computeOutAndReduceShapes(h.shape,d),f=Is(r,c,hR.upcastType(h.dtype,"int32")),g=at.sizeFromShape(m),y=r.data.get(f.dataId).values,b=r.data.get(h.dataId).values;for(let e=0;e<y.length;++e){let t=e*g,n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(o){let e=hR.expandShapeToKeepDim(f.shape,u),t=f;f=SB({inputs:{x:f},backend:r,attrs:{shape:e}}),r.disposeIntermediateTensorInfo(t)}return r.disposeIntermediateTensorInfo(t),null!=p&&r.disposeIntermediateTensorInfo(h),f}var S5=hR.ERF_P,S8=hR.ERF_A1,S7=hR.ERF_A2,S9=hR.ERF_A3,Ne=hR.ERF_A4,Nt=hR.ERF_A5,Nn=Ix(t1,e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+S5*n);return t*(1-((((Nt*r+Ne)*r+S9)*r+S7)*r+S8)*r*Math.exp(-n*n))});function Nr(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(at.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),SB({inputs:{x:a},backend:n,attrs:{shape:o}})}var Na=Ip(tZ,Ir((e,t)=>e/t)),Ns={kernelName:tZ,backendName:"cpu",kernelFunc:Na};function Ni(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],p=at.sizeFromShape(u),d=at.getTypedArrayFromDType("float32",p),h=at.getTypedArrayFromDType("float32",p);for(let e=0;e<a;e++){let r=Sd({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=Sd({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=Ia({inputs:{real:r,imag:a},backend:n}),{real:u,imag:p}=function(e,t,n){let r=at.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if((r&r-1)==0){let a=function e(t,n,r,a,s){if(1===r)return{real:t,imag:n};let i=hR.mergeRealAndImagArrays(t,n),o=r/2,l=hR.complexWithEvenIndex(i),u=l.real,p=l.imag,d=[u.length],h=s.makeTensorInfo(d,"float32",u),c=s.makeTensorInfo(d,"float32",p),m=Ia({inputs:{real:h,imag:c},backend:s}),f=hR.complexWithOddIndex(i),g=f.real,y=f.imag,b=[g.length],x=s.makeTensorInfo(b,"float32",g),v=s.makeTensorInfo(b,"float32",y),w=Ia({inputs:{real:x,imag:v},backend:s}),k=e(u,p,o,a,s),I=k.real,S=k.imag,N=[I.length],T=s.makeTensorInfo(N,"float32",I),_=s.makeTensorInfo(N,"float32",S),C=Ia({inputs:{real:T,imag:_},backend:s}),E=e(g,y,o,a,s),$=E.real,A=E.imag,F=[$.length],R=s.makeTensorInfo(F,"float32",$),D=s.makeTensorInfo(F,"float32",A),M=Ia({inputs:{real:R,imag:D},backend:s}),O=hR.exponents(r,a),L=[O.real.length],z=s.makeTensorInfo(L,"float32",O.real),P=s.makeTensorInfo(L,"float32",O.imag),B=Ia({inputs:{real:z,imag:P},backend:s}),W=IQ({inputs:{a:B,b:M},backend:s}),V=Ic({inputs:{a:C,b:W},backend:s}),U=S_({inputs:{a:C,b:W},backend:s}),G=Io({inputs:{input:V},backend:s}),H=Io({inputs:{input:U},backend:s}),j=SQ({inputs:{input:V},backend:s}),q=SQ({inputs:{input:U},backend:s}),K=S0({inputs:[G,H],backend:s,attrs:{axis:0}}),X=S0({inputs:[j,q],backend:s,attrs:{axis:0}}),Y=s.data.get(K.dataId).values,Z=s.data.get(X.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(X),{real:Y,imag:Z}}(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",at.createScalarValue(r,"float32")),i=Ii({inputs:{x:s},backend:n}),l=Ns.kernelFunc({inputs:{a:e,b:s},backend:n}),u=Ns.kernelFunc({inputs:{a:t,b:i},backend:n}),p=n.data.get(l.dataId).values,d=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:p,imag:d}}return a}{let e=function(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){let o=hR.exponent(a*r,t,n),l=hR.getComplexWithIndex(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),hR.assignToTypedArray(r,s,i,a)}return r}(hR.mergeRealAndImagArrays(s,i),r,t);return hR.splitRealAndImagArrays(e)}}(i,t,n),c=hR.mergeRealAndImagArrays(u,p);for(let t=0;t<s;t++){let n=hR.getComplexWithIndex(c,t);d[e*s+t]=n.real,h[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}let c=n.makeTensorInfo(u,"float32",d),m=n.makeTensorInfo(u,"float32",h),f=Ia({inputs:{real:c,imag:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),f}function No(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||at.inferDtype(a),o=at.getArrayFromDType(i,at.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a,0),t.makeTensorInfo(r,i,o)}var Nl=Ix(nu,e=>Number.isFinite(e)?1:0,"bool"),Nu=Ix(np,e=>Math.abs(e)===1/0?1:0,"bool"),Np=Ix(nd,e=>Number.isNaN(e)?1:0,"bool"),Nd=Ix(ny,e=>Math.log1p(e)),Nh=Ip(nb,Ir((e,t)=>e&&t),null,"bool"),Nc=Ix(nx,e=>e?0:1,"bool"),Nm=Ip(nv,Ir((e,t)=>e||t),null,"bool");function Nf(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape,l=o.length,u=at.parseAxisParam(s,o),p=u,d=hR.getAxesPermutation(p,l),h=n.data.get(a.dataId).values;if(null!=d){let e=Array(l);for(let t=0;t<e.length;t++)e[t]=o[d[t]];h=I3(h,o,a.dtype,d,e),p=hR.getInnerMostAxes(p.length,l),o=e}k7(a,"max"),hR.assertAxesAreInnerMostDims("max",p,l);let[c,m]=hR.computeOutAndReduceShapes(o,p),f=Iq(h,at.sizeFromShape(m),c,a.dtype),g=n.write(f,c,a.dtype),y=c;return i&&(y=hR.expandShapeToKeepDim(c,u)),{dataId:g,shape:y,dtype:a.dtype}}var Ng=Ip(nz,Ir((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Ny=P(Z());function Nb(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=at.parseAxisParam([o],a.shape),u=Nf({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),p=hR.expandShapeToKeepDim(u.shape,l),d=SB({inputs:{x:u},backend:n,attrs:{shape:p}}),h=S_({inputs:{a:a,b:d},backend:n}),c=I_({inputs:{x:h},backend:n}),m=S6({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),f=SB({inputs:{x:m},backend:n,attrs:{shape:p}}),g=Na({inputs:{a:c,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var Nx=cN.nonMaxSuppressionV3Impl,Nv=cN.nonMaxSuppressionV4Impl,Nw=cN.nonMaxSuppressionV5Impl;function Nk(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw Error("zerosLike is not supported for string tensors");if("complex64"!==r.dtype)return No({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}});{let e=Io({inputs:{input:r},backend:n}),t=Nk({inputs:{x:e},backend:n}),a=SQ({inputs:{input:r},backend:n}),s=Nk({inputs:{x:a},backend:n}),i=Ia({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}}function NI(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Nr({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{at.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),at.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=S0({inputs:t.map(e=>{let t=Nr({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}var NS={kernelName:nX,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;k7(a,"pad");let o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),l=s.map(e=>e[0]),u=n.data.get(a.dataId).values,p=at.sizeFromShape(a.shape),d=a.shape.length,h=at.computeStrides(a.shape),c=at.sizeFromShape(o),m=o.length,f=at.computeStrides(o),g=at.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let e=0;e<p;e++){let t=at.indexToLoc(e,d,h).map((e,t)=>e+l[t]);g[at.locToIndex(t,m,f)]=u[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},NN=Ip(nZ,Ir((e,t)=>Math.pow(e,t))),NT=Ix(n6,e=>1/e),N_=Ix(ra,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),NC=hR.SELU_SCALEALPHA,NE=hR.SELU_SCALE,N$=Ix(rp,e=>e>=0?NE*e:NC*(Math.exp(e)-1)),NA=Ix(rm,e=>e<0?-1:e>0?1:0),NF=Ix(rh,e=>Math.sin(e)),NR=Ix(rc,e=>Math.sinh(e)),ND=Math.log(11920928955078125e-23)+2,NM=Ix(rg,e=>{let t=Math.exp(e);return e<ND?t:e>-ND?e:Math.log(1+t)}),NO=Ix(rj,(e,t)=>isNaN(e)?NaN:e>0?1:t.alpha),NL=Ix(rM,e=>Math.tan(e)),Nz=Ix(rO,e=>Math.tanh(e));function NP(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0){if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}}else if(n>t-1){if(t<=1)n=0;else{let e=2*t;(n-=e*Math.trunc(n/e))>=t&&(n=e-n-1)}}return at.clamp(0,n,t-1)}(e,t);case"wrap":let r;return(r=e)<0?t<=1?r=0:r+=t*(Math.trunc(-r/(t-1))+1):r>t-1&&(t<=1?r=0:r-=t*Math.trunc(r/(t-1))),at.clamp(0,r,t-1);case"nearest":return at.clamp(0,e,t-1);default:return e}}function NB(e,t,n,r,a,s,i,o,l,u,p){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:p}for(let e of[{kernelName:rX,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:d}=r,h,c,m,f=[];for(let e of(h=SW({inputs:{a:a,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(c=Ic({inputs:{a:h,b:i},backend:n}),f.push(h),h=c),p&&(m=SP(n,h,p,o,d),f.push(h),h=m),f))n.disposeIntermediateTensorInfo(e);return h}},{kernelName:te,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;k7(t,"abs");let r=new Float32Array(at.sizeFromShape(t.shape));return r=In(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},{kernelName:tt,backendName:"cpu",kernelFunc:SV},{kernelName:tn,backendName:"cpu",kernelFunc:SU},{kernelName:tr,backendName:"cpu",kernelFunc:Ic},{kernelName:ta,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e;k7(t,"addN");let r=t.map(e=>n.data.get(e.dataId).values),a=im(t[0].shape,t[0].dtype),s=a.values;for(let e=0;e<t.length;e++){let t=r[e];for(let e=0;e<s.length;e++)s[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}},{kernelName:ts,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;k7(a,"all");let o=at.parseAxisParam(s,a.shape),l=o,u=hR.getAxesPermutation(l,a.shape.length),p=a;null!=u&&(p=I4({inputs:{x:a},backend:n,attrs:{perm:u}}),l=hR.getInnerMostAxes(l.length,a.shape.length)),hR.assertAxesAreInnerMostDims("all",l,p.shape.length);let[d,h]=hR.computeOutAndReduceShapes(p.shape,l),c=at.sizeFromShape(h),m=at.makeZerosTypedArray(at.sizeFromShape(d),p.dtype),f=n.data.get(p.dataId).values;for(let e=0;e<m.length;++e){let t=e*c,n=f[t];for(let e=0;e<c;++e){let r=f[t+e];n=n&&r}m[e]=n}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(d,p.dtype,m);if(i){let e=SB({inputs:{x:g},backend:n,attrs:{shape:hR.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},{kernelName:ti,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;k7(a,"any");let o=at.parseAxisParam(s,a.shape),l=o,u=hR.getAxesPermutation(l,a.shape.length),p=a;null!=u&&(p=I4({inputs:{x:a},backend:n,attrs:{perm:u}}),l=hR.getInnerMostAxes(l.length,a.shape.length)),hR.assertAxesAreInnerMostDims("any",l,p.shape.length);let[d,h]=hR.computeOutAndReduceShapes(p.shape,l),c=at.sizeFromShape(h),m=at.makeZerosTypedArray(at.sizeFromShape(d),p.dtype),f=n.data.get(p.dataId).values;for(let e=0;e<m.length;++e){let t=e*c,n=f[t];for(let e=0;e<c;++e){let r=f[t+e];n=n||r}m[e]=n}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(d,p.dtype,m);if(i){let e=SB({inputs:{x:g},backend:n,attrs:{shape:hR.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},{kernelName:to,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;k7(a,"argMax");let i=at.parseAxisParam(s,a.shape),o=hR.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(u.push(l=I4({inputs:{x:a},backend:n,attrs:{perm:o}})),i=hR.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],hR.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[p,d]=hR.computeOutAndReduceShapes(l.shape,i),h=at.sizeFromShape(p),c=at.makeZerosTypedArray(h,"int32"),m=at.sizeFromShape(d),f=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*m,n=f[t],r=0;for(let e=0;e<m;++e){let a=f[t+e];a>n&&(n=a,r=e)}c[e]=r}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(p,"int32",c)}},{kernelName:tl,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;k7(a,"argMin");let i=at.parseAxisParam(s,a.shape),o=hR.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(u.push(l=I4({inputs:{x:a},backend:n,attrs:{perm:o}})),i=hR.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],hR.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[p,d]=hR.computeOutAndReduceShapes(l.shape,i),h=at.sizeFromShape(p),c=at.makeZerosTypedArray(h,"int32"),m=at.sizeFromShape(d),f=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*m,n=f[t],r=0;for(let e=0;e<m;++e){let a=f[t+e];a<n&&(n=a,r=e)}c[e]=r}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(p,"int32",c)}},{kernelName:tu,backendName:"cpu",kernelFunc:SG},{kernelName:tp,backendName:"cpu",kernelFunc:SH},{kernelName:td,backendName:"cpu",kernelFunc:Sj},{kernelName:tc,backendName:"cpu",kernelFunc:Sq},{kernelName:th,backendName:"cpu",kernelFunc:SK},{kernelName:tm,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;k7(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;at.assert(hR.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let u=hR.computePool2DInfo(a.shape,s,i,1,o,l),p;if(1===u.filterWidth&&1===u.filterHeight&&at.arraysEqual(u.inShape,u.outShape))p=Ii({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=at.computeStrides(a.shape),r=SX(e,a.shape,a.dtype,t,u,"avg");p=n.makeTensorInfo(u.outShape,a.dtype,r.values)}return p}},{kernelName:tg,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;k7(a,"avgPool3d");let p=hR.computePool3DInfo(a.shape,s,i,1,o,l,u),d=SZ(n.data.get(a.dataId).values,a.shape,a.dtype,at.computeStrides(a.shape),p,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}},{kernelName:ty,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;k7([a,s],"avgPool3DGrad");let p=hR.computePool3DInfo(s.shape,i,o,1,l,u),d=p.strideDepth,h=p.strideHeight,c=p.strideWidth,m=p.filterDepth,f=p.filterHeight,g=p.filterWidth,y=p.dilationDepth,b=p.dilationHeight,x=p.dilationWidth,v=p.effectiveFilterDepth,w=p.effectiveFilterHeight,k=p.effectiveFilterWidth,I=v-1-p.padInfo.front,S=k-1-p.padInfo.left,N=w-1-p.padInfo.top,T=im(s.shape,"float32"),_=1/(m*f*g),C=n.bufferSync(a);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inDepth;++n)for(let r=0;r<p.inHeight;++r)for(let a=0;a<p.inWidth;++a){let s=n-I,i=r-N,o=a-S,l=0;for(let n=0;n<v;n+=y){let r=(s+n)/d;if(!(r<0||r>=p.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){let a=(i+n)/h;if(!(a<0||a>=p.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){let s=(o+n)/c;s<0||s>=p.outWidth||Math.floor(s)!==s||(l+=C.get(e,r,a,s,t))}}}T.set(l*_,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},{kernelName:tf,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t;k7([a,s],"avgPoolGrad");let{filterSize:i,strides:o,pad:l}=r,u=hR.computePool2DInfo(s.shape,i,o,1,l),p=u.strideHeight,d=u.strideWidth,h=u.filterHeight,c=u.filterWidth,m=u.dilationHeight,f=u.dilationWidth,g=u.effectiveFilterHeight,y=u.effectiveFilterWidth,b=y-1-u.padInfo.left,x=g-1-u.padInfo.top,v=im(s.shape,"float32"),w=1/(h*c),k=n.data.get(a.dataId).values,I=im(a.shape,"float32",k);for(let e=0;e<u.batchSize;++e)for(let t=0;t<u.inChannels;++t)for(let n=0;n<u.inHeight;++n)for(let r=0;r<u.inWidth;++r){let a=n-x,s=r-b,i=0;for(let n=0;n<g;n+=m){let r=(a+n)/p;if(!(r<0||r>=u.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=f){let a=(s+n)/d;a<0||a>=u.outWidth||Math.floor(a)!==a||(i+=I.get(e,r,a,t))}}v.set(i*w,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},{kernelName:tb,backendName:"cpu",kernelFunc:SW},{kernelName:nt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;at.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),at.assert(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),at.assert(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),k7([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let p=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,h=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),f=new Float32Array(p.length),g=m.length,y=c.length,b=h.length,x=d.length,v=0,w=0,k=0,I=0;for(let e=0;e<p.length;++e)f[e]=m[v++]+(p[e]-d[w++])*c[k++]/Math.sqrt(h[I++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,f)}},{kernelName:tx,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;k7([a],"batchToSpaceND");let o=s.reduce((e,t)=>e*t),l=hR.getReshaped(a.shape,s,o),u=hR.getPermuted(l.length,s.length),p=hR.getReshapedPermuted(a.shape,s,o),d=hR.getSliceBeginCoords(i,s.length),h=hR.getSliceSize(p,i,s.length),c=SB({inputs:{x:a},backend:n,attrs:{shape:l}}),m=I4({inputs:{x:c},backend:n,attrs:{perm:u}}),f=SB({inputs:{x:m},backend:n,attrs:{shape:p}}),g=Sd({inputs:{x:f},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}},{kernelName:tv,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=Im(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},{kernelName:tw,backendName:"cpu",kernelFunc:Iy},{kernelName:tI,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=hR.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},{kernelName:tS,backendName:"cpu",kernelFunc:Iu},{kernelName:tN,backendName:"cpu",kernelFunc:Ik},{kernelName:tT,backendName:"cpu",kernelFunc:SJ},{kernelName:t_,backendName:"cpu",kernelFunc:Ia},{kernelName:tC,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(at.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}},{kernelName:tE,backendName:"cpu",kernelFunc:S0},{kernelName:t$,backendName:"cpu",kernelFunc:S1},{kernelName:tA,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:p}=r;k7([a,s],"conv2dBackpropFilter");let d=hR.convertConv2DDataFormat(l),h=hR.computeConv2DInfo(a.shape,p,i,1,o,u,!1,d),{strideHeight:c,strideWidth:m,filterHeight:f,filterWidth:g}=h,y="channelsLast"===h.dataFormat,b=new aE(h.filterShape,"float32"),x=h.padInfo.left,v=h.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new aE(a.shape,a.dtype,w),S=new aE(s.shape,s.dtype,k);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((v-e)/c)),n=Math.min(h.outHeight,(h.inHeight+v-e)/c);for(let r=0;r<g;++r){let a=Math.max(0,Math.ceil((x-r)/m)),s=Math.min(h.outWidth,(h.inWidth+x-r)/m);for(let i=0;i<h.inChannels;++i)for(let o=0;o<h.outChannels;++o){let l=0;for(let u=0;u<h.batchSize;++u)for(let p=t;p<n;++p){let t=e+p*c-v;for(let e=a;e<s;++e){let n=r+e*m-x;y?l+=I.get(u,t,n,i)*S.get(u,p,e,o):l+=I.get(u,i,t,n)*S.get(u,o,p,e)}}b.set(l,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},{kernelName:tF,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=r;k7([a,s],"conv2dBackpropInput");let d=at.computeStrides(s.shape),h=at.computeStrides(a.shape),c=hR.convertConv2DDataFormat(u),m=hR.computeConv2DInfo(i,s.shape,o,1,l,p,!1,c),f=new aE(m.inShape,"float32"),g=f.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=d,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:_,outChannels:C,outHeight:E,outWidth:$,strideHeight:A,strideWidth:F}=m;c=m.dataFormat;let R=I-1-m.padInfo.top,D=S-1-m.padInfo.left,M="channelsLast"===c,O=f.strides[0],L=M?f.strides[1]:f.strides[2],z=M?f.strides[2]:1,P=M?1:f.strides[1],B=h[0],W=M?h[1]:h[2],V=M?h[2]:1,U=M?1:h[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){let r=n-R,a=Math.max(0,Math.ceil(r/A)),s=Math.min(E,(I+r)/A);for(let i=0;i<_;++i){let o=i-D,l=Math.max(0,Math.ceil(o/F)),u=Math.min($,(S+o)/F),p=0;for(let n=a;n<s;++n){let a=n*A-r;for(let r=l;r<u;++r){let s=r*F-o,i=B*e+W*n+V*r,l=x*(I-1-a)+v*(S-1-s)+w*t;for(let e=0;e<C;++e)p+=y[i+U*e]*b[l+e]}}g[O*e+L*n+z*i+P*t]=p}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},{kernelName:tR,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;k7([a,s],"conv3d");let u=hR.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:p,filterHeight:d,filterWidth:h,dilationDepth:c,dilationHeight:m,dilationWidth:f,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new aE(u.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=v.values,S=at.computeStrides(a.shape),N=at.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){let t=e*S[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){let r=n+e*v.strides[1],a=e*u.strideDepth-y;for(let e=0;e<p;++e){let n=a+e*c;if(n<0||n>=u.inDepth)continue;let s=e*N[0],i=t+n*S[1];for(let e=0;e<u.outHeight;++e){let t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<d;++e){let r=n+e*m;if(r<0||r>=u.inHeight)continue;let a=s+e*N[1],o=i+r*S[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<h;++e){let t=r+e*f;if(t<0||t>=u.inWidth)continue;let s=a+e*N[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},{kernelName:tD,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;k7([a,s],"conv3dBackpropFilterV2");let u=at.computeStrides(a.shape),p=at.computeStrides(s.shape),d=hR.computeConv3DInfo(a.shape,l,i,1,o),h=d.strideDepth,c=d.strideHeight,m=d.strideWidth,f=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new aE(d.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,_,C]=p,E=n.data.get(a.dataId).values,[$,A,F,R]=u,D=d.padInfo.front,M=d.padInfo.left,O=d.padInfo.top;for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((D-e)/h)),n=Math.min(d.outDepth,(d.inDepth+D-e)/h),r=e*v;for(let a=0;a<g;++a){let s=Math.max(0,Math.ceil((O-a)/c)),i=Math.min(d.outHeight,(d.inHeight+O-a)/c),o=a*w+r;for(let r=0;r<y;++r){let l=Math.max(0,Math.ceil((M-r)/m)),u=Math.min(d.outWidth,(d.inWidth+M-r)/m),p=r*k+o;for(let o=0;o<d.inChannels;++o){let f=o*I+p;for(let p=0;p<d.outChannels;++p){let g=0;for(let f=0;f<d.batchSize;++f){let d=f*$,y=f*N;for(let f=t;f<n;++f){let t=(e+f*h-D)*A+d,n=f*T+y;for(let e=s;e<i;++e){let s=(a+e*c-O)*F+t,i=e*_+n;for(let e=l;e<u;++e){let t=(r+e*m-M)*R+s,n=e*C+i;g+=E[t+o]*S[n+p]}}}}x[f+p]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},{kernelName:tM,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;k7([a],"conv3dBackpropInputV2");let u=at.computeStrides(a.shape),p=at.computeStrides(s.shape),d=hR.computeConv3DInfo(l,s.shape,o,1,i),h=new aE(d.inShape,"float32"),c=h.values,[m,f,g,y]=h.strides,b=n.data.get(a.dataId).values,[x,v,w,k]=u,I=n.data.get(s.dataId).values,[S,N,T,_]=p,{batchSize:C,filterDepth:E,filterHeight:$,filterWidth:A,inChannels:F,inDepth:R,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=d,U=E-1-d.padInfo.front,G=$-1-d.padInfo.top,H=A-1-d.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<F;++t)for(let n=0;n<R;++n){let r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(E+r)/B);for(let i=0;i<D;++i){let o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,($+o)/W);for(let p=0;p<M;++p){let d=p-H,h=Math.max(0,Math.ceil(d/V)),C=Math.min(P,(A+d)/V),F=0;for(let n=a;n<s;++n){let a=n*B-r;for(let r=l;r<u;++r){let s=r*W-o;for(let i=h;i<C;++i){let o=i*V-d,l=x*e+v*n+w*r+k*i,u=S*(E-1-a)+N*($-1-s)+T*(A-1-o)+_*t;for(let e=0;e<O;++e)F+=b[l+e]*I[u+e]}}}c[m*e+f*n+g*i+y*p+t]=F}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},{kernelName:tO,backendName:"cpu",kernelFunc:S2},{kernelName:tL,backendName:"cpu",kernelFunc:S3},{kernelName:tB,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[p,d,h,c]=a.shape,m=s.shape[0],[f,g]=o,y=im([m,f,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=at.computeStrides(a.shape),k=at.computeStrides(y.shape);for(let e=0;e<m;e++){let t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=p)continue;let o=f>1?(a-n)*(d-1)/(f-1):0,m=g>1?(s-r)*(h-1)/(g-1):0;for(let t=0;t<f;t++){let p=f>1?n*(d-1)+t*o:.5*(n+a)*(d-1);if(p<0||p>d-1){for(let n=0;n<g;n++)for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}continue}if("bilinear"===l){let n=Math.floor(p),a=Math.ceil(p),o=p-n;for(let l=0;l<g;l++){let p=g>1?r*(h-1)+l*m:.5*(r+s)*(h-1);if(p<0||p>h-1){for(let n=0;n<c;n++){let r=n+l*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}let d=Math.floor(p),f=Math.ceil(p),b=p-d;for(let r=0;r<c;r++){let s=r+d*w[2]+n*w[1]+i*w[0],u=v[s],p=v[s=r+f*w[2]+n*w[1]+i*w[0]],h=v[s=r+d*w[2]+a*w[1]+i*w[0]],c=v[s=r+f*w[2]+a*w[1]+i*w[0]],m=u+(p-u)*b,g=h+(c-h)*b;s=r+l*k[2]+t*k[1]+e*k[0],y.values[s]=m+(g-m)*o}}}else for(let n=0;n<g;++n){let a=g>1?r*(h-1)+n*m:.5*(r+s)*(h-1);if(a<0||a>h-1){for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}continue}let o=Math.round(a),l=Math.round(p);for(let r=0;r<c;r++){let a=r+o*w[2]+l*w[1]+i*w[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=v[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},{kernelName:tz,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;k7(a,"cumprod");let l=hR.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=I4({inputs:{x:a},backend:n,attrs:{perm:l}}));let p=hR.getInnerMostAxes(1,a.shape.length)[0];if(p!==u.shape.length-1)throw Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${p}`);let d=aL(u.dtype,"int32"),h=at.makeOnesTypedArray(at.sizeFromShape(u.shape),d),c=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],f=o?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=m)for(let t=0;t<m;t++){let n=f(e,t);if(0===t)h[n]=i?1:c[n];else{let r=f(e,t-1);h[n]=i?c[r]*h[r]:c[n]*h[r]}}let g=n.makeTensorInfo(u.shape,d,h);if(null!=l){let e=I4({inputs:{x:g},backend:n,attrs:{perm:hR.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},{kernelName:tP,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;k7(a,"cumsum");let l=hR.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=I4({inputs:{x:a},backend:n,attrs:{perm:l}}));let p=hR.getInnerMostAxes(1,a.shape.length)[0];if(p!==u.shape.length-1)throw Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${p}`);let d=aL(u.dtype,"int32"),h=at.makeZerosTypedArray(at.sizeFromShape(u.shape),d),c=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],f=o?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=m)for(let t=0;t<m;t++){let n=f(e,t);if(0===t)h[n]=i?0:c[n];else{let r=f(e,t-1);h[n]=i?c[r]+h[r]:c[n]+h[r]}}let g=n.makeTensorInfo(u.shape,d,h);if(null!=l){let e=I4({inputs:{x:g},backend:n,attrs:{perm:hR.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},{kernelName:tW,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=Im(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){let e=If(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},{kernelName:tV,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;at.assert("NHWC"===i,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=a.shape[0],l=a.shape[1],u=a.shape[2],p=a.shape[3],d=l*s,h=u*s,c=p/(s*s),m=n.data.get(a.dataId).values,f=new Float32Array(o*d*h*c),g=0;for(let e=0;e<o;++e)for(let t=0;t<d;++t){let n=Math.floor(t/s),r=t%s;for(let t=0;t<h;++t){let a=Math.floor(t/s),i=t%s,o=(r*s+i)*c;for(let t=0;t<c;++t){let r=t+o+p*(a+u*(n+l*e));f[g++]=m[r]}}}return n.makeTensorInfo([o,d,h,c],a.dtype,f)}},{kernelName:tU,backendName:"cpu",kernelFunc:S4},{kernelName:tG,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:p}=r;k7([a,s],"depthwiseConv2dNativeBackpropFilter");let d=hR.computeConv2DInfo(a.shape,p,i,o,l,u,!0),{strideHeight:h,strideWidth:c,filterHeight:m,filterWidth:f}=d,g=new aE(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,x=d.outChannels/d.inChannels,v=n.data.get(a.dataId).values,w=new aE(a.shape,a.dtype,v),k=n.data.get(s.dataId).values,I=new aE(s.shape,s.dtype,k);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((b-e)/h)),n=Math.min(d.outHeight,(d.inHeight+b-e)/h);for(let r=0;r<f;++r){let a=Math.max(0,Math.ceil((y-r)/c)),s=Math.min(d.outWidth,(d.inWidth+y-r)/c);for(let i=0;i<d.outChannels;++i){let o=Math.trunc(i/x),l=i%x,u=0;for(let l=0;l<d.batchSize;++l)for(let p=t;p<n;++p){let t=e+p*h-b;for(let e=a;e<s;++e){let n=r+e*c-y;u+=w.get(l,t,n,o)*I.get(l,p,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},{kernelName:tH,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:p}=r;k7([a,s],"depthwiseConv2DNativeBackpropInput");let d=at.computeStrides(a.shape),h=at.computeStrides(s.shape),c=hR.computeConv2DInfo(p,s.shape,i,o,l,u,!0),m=new aE(c.inShape,"float32"),f=m.values,[g,y,b]=m.strides,x=n.data.get(a.dataId).values,[v,w,k]=d,I=n.data.get(s.dataId).values,[S,N,T]=h,{batchSize:_,filterHeight:C,filterWidth:E,inChannels:$,inHeight:A,inWidth:F,outChannels:R,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=c,z=C-1-c.padInfo.top,P=E-1-c.padInfo.left,B=R/$;for(let e=0;e<_;++e)for(let t=0;t<$;++t)for(let n=0;n<A;++n){let r=n-z,a=Math.max(0,Math.ceil(r/O)),s=Math.min(D,(C+r)/O);for(let i=0;i<F;++i){let o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(M,(E+o)/L),p=0;for(let n=a;n<s;++n){let a=n*O-r;for(let r=l;r<u;++r){let s=r*L-o,i=v*e+w*n+k*r,l=S*(C-1-a)+N*(E-1-s)+T*t;for(let e=0;e<B;++e)p+=x[i+(t*B+e)]*I[l+e]}}f[g*e+y*n+b*i+t]=p}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},{kernelName:tj,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=at.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=im([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},{kernelName:tq,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t.data.get(r.dataId).values,u=r.shape.length,p=t.data.get(a.dataId).values,d=a.shape.length,{batchSize:h,inHeight:c,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=hR.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),T=at.sizeFromShape(N),_=N.length,C=at.getArrayFromDType(r.dtype,T);for(let e=0;e<h;++e)for(let t=0;t<g;++t){let n=t*x-b.top;for(let s=0;s<y;++s){let i=s*v-b.left;for(let o=0;o<f;++o){let h=Number.MIN_SAFE_INTEGER;for(let t=0;t<w;++t){let s=n+t*I;if(s>=0&&s<c)for(let n=0;n<k;++n){let c=i+n*S;if(c>=0&&c<m){let i=at.locToIndex([e,s,c,o],u,at.computeStrides(r.shape)),m=at.locToIndex([t,n,o],d,at.computeStrides(a.shape)),f=l[i]+p[m];f>h&&(h=f)}}}C[at.locToIndex([e,t,s,o],_,at.computeStrides(N))]=h}}}return{dataId:t.write(at.toTypedArray(C,r.dtype),N,r.dtype),shape:N,dtype:r.dtype}}},{kernelName:tX,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=at.toNestedArray(r.shape,t.data.get(r.dataId).values),p=at.toNestedArray(a.shape,t.data.get(a.dataId).values),{batchSize:d,inHeight:h,inWidth:c,inChannels:m,outHeight:f,outWidth:g,padInfo:y,strideHeight:b,strideWidth:x,filterHeight:v,filterWidth:w,dilationHeight:k,dilationWidth:I,outShape:S}=hR.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);at.assert(s.rank===S.length,()=>`Error in ${tX}, dy must have the same rank as output ${S.length}, but got ${s.rank}`);let N=at.toNestedArray(S,t.data.get(s.dataId).values),T=at.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<f;++t){let n=t*b-y.top;for(let r=0;r<g;++r){let a=r*x-y.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<v;++t){let r=n+t*k;if(r>=0&&r<h)for(let n=0;n<w;++n){let d=a+n*I;if(d>=0&&d<c){let a=u[e][r][d][s]+p[t][n][s];a>i&&(i=a,o=t,l=n)}}}T[o][l][s]+=N[e][t][r][s]}}}return{dataId:t.write(at.toTypedArray(T,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},{kernelName:tK,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=at.toNestedArray(r.shape,t.data.get(r.dataId).values),p=at.toNestedArray(a.shape,t.data.get(a.dataId).values),{batchSize:d,inHeight:h,inWidth:c,inChannels:m,outHeight:f,outWidth:g,padInfo:y,strideHeight:b,strideWidth:x,filterHeight:v,filterWidth:w,dilationHeight:k,dilationWidth:I,outShape:S}=hR.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);at.assert(s.rank===S.length,()=>`Error in ${tK}, dy must have the same rank as output ${S.length}, but got ${s.rank}`);let N=at.toNestedArray(S,t.data.get(s.dataId).values),T=at.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<f;++t){let n=t*b-y.top;for(let r=0;r<g;++r){let a=r*x-y.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=a<0?0:a;for(let t=0;t<v;++t){let r=n+t*k;if(r>=0&&r<h)for(let n=0;n<w;++n){let d=a+n*I;if(d>=0&&d<c){let a=u[e][r][d][s]+p[t][n][s];a>i&&(i=a,o=r,l=d)}}}T[e][o][l][s]+=N[e][t][r][s]}}}return{dataId:t.write(at.toTypedArray(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},{kernelName:tY,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:s,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,p=(null==o?void 0:o.contextType)||"2d";if("2d"!==p)throw Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let d=s.getContext(p,(null==o?void 0:o.contextAttributes)||{});if(null==d)throw Error(`Could not get the context with ${p} type.`);let[h,c]=a.shape.slice(0,2),m=2===a.shape.length?1:a.shape[2],f=n.data.get(a.dataId).values,g="float32"===a.dtype?255:1,y=new Uint8ClampedArray(c*h*4);for(let e=0;e<h*c;++e){let t=[0,0,0,255*u];for(let n=0;n<m;n++){let r=f[e*m+n];if("float32"===a.dtype){if(r<0||r>1)throw Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===a.dtype&&(r<0||r>255))throw Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===m?(t[0]=r*g,t[1]=r*g,t[2]=r*g):t[n]=r*g}let n=4*e;y[n+0]=Math.round(t[0]),y[n+1]=Math.round(t[1]),y[n+2]=Math.round(t[2]),y[n+3]=Math.round(t[3])}s.width=c,s.height=h;let b=new ImageData(y,c,h);return d.putImageData(b,0,0),a}},{kernelName:tJ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,{allDims:s,summedDims:i,idDims:o}=hR.decodeEinsumEquation(a,t.length);hR.checkEinsumDimSizes(s.length,o,t);let{path:l,steps:u}=hR.getEinsumComputePath(i,o),p=u.length,d=null,h=s.length,c=[];for(let e=0;e<p;++e){for(let r of u[e]){let{permutationIndices:e,expandDims:a}=hR.getEinsumPermutation(h,o[r]),s;hR.isIdentityPermutation(e)?s=t[r]:(s=I4({inputs:{x:t[r]},backend:n,attrs:{perm:e}}),c.push(s));let i=s.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);at.arraysEqual(s.shape,i)||(s=SB({inputs:{x:s},backend:n,attrs:{shape:i}}),c.push(s)),null===d?d=s:(d=IQ({inputs:{a:s,b:d},backend:n}),c.push(d))}e<p-1&&(l[e]>=0&&(d=S6({inputs:{x:d},backend:n,attrs:{axis:l[e]-(s.length-h),keepDims:!1}}),c.push(d)),h--)}for(let e of c)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},{kernelName:tQ,backendName:"cpu",kernelFunc:SR},{kernelName:t0,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;k7([r,a],"eluGrad");let s=new Float32Array(at.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){let t=i[e];t>=0?s[e]=o[e]:s[e]=o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},{kernelName:t2,backendName:"cpu",kernelFunc:IN},{kernelName:t1,backendName:"cpu",kernelFunc:Nn},{kernelName:t3,backendName:"cpu",kernelFunc:I_},{kernelName:t4,backendName:"cpu",kernelFunc:Nr},{kernelName:t6,backendName:"cpu",kernelFunc:IE},{kernelName:t5,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=at.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=SB({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Ni(i,!1,n),l=SB({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},{kernelName:t8,backendName:"cpu",kernelFunc:No},{kernelName:t7,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=at.getTypedArrayFromDType(r.dtype,at.sizeFromShape(r.shape)),[s,i,o,l]=r.shape,u=n.data.get(r.dataId).values;for(let e=0;e<s;e++){let t=e*o*i*l;for(let e=0;e<i;e++){let n=o*l*e;for(let e=0;e<o;e++){let r=e*l;for(let s=0;s<l;s++){let i=Math.round(o-e-1),p=t+n+r+s,d=u[p];i>=0&&i<o&&(d=u[t+n+i*l+s]),a[p]=d}}}}return{dataId:n.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},{kernelName:t9,backendName:"cpu",kernelFunc:IA},{kernelName:ne,backendName:"cpu",kernelFunc:IR},{kernelName:rY,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:d,dimRoundingMode:h,activation:c,leakyreluAlpha:m}=r,f=S1({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:p,dilations:d,dimRoundingMode:h}});if(i){let e=f;if("NCHW"===p&&1===i.shape.length&&1!==i.shape[0]){let e=SB({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});f=Ic({inputs:{a:f,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else f=Ic({inputs:{a:f,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(c){let e=f;if("NCHW"===p&&"prelu"===c&&1===o.shape.length&&1!==o.shape[0]){let e=SB({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});f=SP(n,f,c,e,m),n.disposeIntermediateTensorInfo(e)}else f=SP(n,f,c,o,m);n.disposeIntermediateTensorInfo(e)}return f}},{kernelName:rZ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:d,dimRoundingMode:h,activation:c,leakyreluAlpha:m}=r,f=S4({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:p,dilations:d,dimRoundingMode:h}});if(i){let e=f;f=Ic({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=f;f=SP(n,f,c,o,m),n.disposeIntermediateTensorInfo(e)}return f}},{kernelName:nr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=at.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,p,d]=hR.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let h=ID(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,u,o,p,d,r.shape,s);return n.makeTensorInfo(l,r.dtype,h.values)}},{kernelName:nn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;k7([a,s],"gatherV2");let l=at.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,p=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];at.assert(t<=p-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${p-1}]`)}let d=o;null==o&&(d=0);let h=at.sizeFromShape(s.shape),c=hR.segment_util.collectGatherOpShapeInfo(a,s,l,d),m=SB({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=SB({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,h/c.batchSize]}}),g=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize],y=n.bufferSync(f),b=IM(n.bufferSync(m),y,g);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(c.outputShape,b.dtype,b.values)}},{kernelName:na,backendName:"cpu",kernelFunc:IL},{kernelName:ns,backendName:"cpu",kernelFunc:IP},{kernelName:ni,backendName:"cpu",kernelFunc:Ii},{kernelName:no,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=at.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=SB({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Ni(i,!0,n),l=SB({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},{kernelName:nl,backendName:"cpu",kernelFunc:SQ},{kernelName:nu,backendName:"cpu",kernelFunc:Nl},{kernelName:np,backendName:"cpu",kernelFunc:Nu},{kernelName:nd,backendName:"cpu",kernelFunc:Np},{kernelName:nh,backendName:"cpu",kernelFunc:SD},{kernelName:nc,backendName:"cpu",kernelFunc:IW},{kernelName:nm,backendName:"cpu",kernelFunc:IU},{kernelName:nf,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=IG(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},{kernelName:ng,backendName:"cpu",kernelFunc:Ij},{kernelName:ny,backendName:"cpu",kernelFunc:Nd},{kernelName:nb,backendName:"cpu",kernelFunc:Nh},{kernelName:nx,backendName:"cpu",kernelFunc:Nc},{kernelName:nv,backendName:"cpu",kernelFunc:Nm},{kernelName:nS,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;k7(a,"LRN");let u=a.shape[3],p=u-1,d=n.data.get(a.dataId).values,h=at.sizeFromShape(a.shape),c=new Float32Array(h);for(let e=0;e<h;e++){let t=function(e){let t=e%u,n=e-t+Math.max(0,t-s),r=e-t+Math.min(t+s,p),a=0;for(;n<=r;n++){let e=d[n];a+=e*e}return a}(e),n=d[e]*Math.pow(i+o*t,-l);c[e]=n}return n.makeTensorInfo(a.shape,a.dtype,c)}},{kernelName:nN,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r;k7(i,"LRNGrad");let d=at.sizeFromShape(i.shape),h=i.shape[3],c=n.data.get(i.dataId).values,m=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,g=new Float32Array(d);for(let e=0;e<d;e++){let t=e%h,n=e-t+Math.max(0,t-o),r=e-t+Math.min(h,t+o+1),a=0;for(let e=n;e<r;e++)a+=Math.pow(m[e],2);a=u*a+l;for(let t=n;t<r;t++){let n=-2*u*p*m[t]*f[e]/a;e===t&&(n+=Math.pow(a,-p)),n*=c[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}},{kernelName:n_,backendName:"cpu",kernelFunc:Nf},{kernelName:nC,backendName:"cpu",kernelFunc:IX},{kernelName:nE,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;k7(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;at.assert(hR.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let u=hR.computePool2DInfo(a.shape,s,i,1,o,l),p;if(1===u.filterWidth&&1===u.filterHeight&&at.arraysEqual(u.inShape,u.outShape))p=Ii({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=at.computeStrides(a.shape),r=SX(e,a.shape,a.dtype,t,u,"max");p=n.makeTensorInfo(u.outShape,a.dtype,r.values)}return p}},{kernelName:nA,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;k7(a,"maxPool3d");let p=hR.computePool3DInfo(a.shape,s,i,1,o,l,u),d=SZ(n.data.get(a.dataId).values,a.shape,a.dtype,at.computeStrides(a.shape),p,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}},{kernelName:nF,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;k7([a,s],"maxPool3DGrad");let p=hR.computePool3DInfo(s.shape,i,o,1,l,u),d=function(e,t){let n=im(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,p=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,c=t.padInfo.top,m=t.padInfo.left;for(let f=0;f<t.batchSize;++f)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-h,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){let u=r*a-c,h=u;for(;h<0;)h+=o;let w=Math.min(t.inHeight,p+u);for(let a=0;a<t.outWidth;++a){let c=a*s-m,k=c;for(;k<0;)k+=l;let I=Math.min(t.inWidth,d+c),S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){let n=t-b;for(let r=h;r<w;r+=o){let a=r-u;for(let s=k;s<I;s+=l){let i=s-c,o=e.get(f,t,r,s,g);o>=S&&(S=o,N=n*p*d+a*p+i)}}}n.set(N,f,y,r,a,g)}}}return n}(n.bufferSync(s),p),h=p.strideDepth,c=p.strideHeight,m=p.strideWidth,f=p.dilationDepth,g=p.dilationHeight,y=p.dilationWidth,b=p.effectiveFilterDepth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=b-1-p.padInfo.front,k=v-1-p.padInfo.left,I=x-1-p.padInfo.top,S=im(s.shape,"float32"),N=n.bufferSync(a);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inDepth;++n)for(let r=0;r<p.inHeight;++r)for(let a=0;a<p.inWidth;++a){let s=n-w,i=r-I,o=a-k,l=0;for(let n=0;n<b;n+=f){let r=(s+n)/h;if(!(r<0||r>=p.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){let s=(i+a)/c;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let i=0;i<v;i+=y){let u=(o+i)/m;if(u<0||u>=p.outWidth||Math.floor(u)!==u)continue;let h=b*x*v-1-d.get(e,r,s,u,t)===n*x*v+a*v+i?1:0;0!==h&&(l+=N.get(e,r,s,u,t)*h)}}}S.set(l,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},{kernelName:n$,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t;k7([s,i],"maxPoolGrad");let{filterSize:o,strides:l,pad:u,dimRoundingMode:p}=r,d=hR.computePool2DInfo(s.shape,o,l,1,u,p),h=n.data.get(s.dataId).values,c=im(d.outShape,s.dtype,SY(h,s.shape,s.dtype,d).values),m=d.strideHeight,f=d.strideWidth,g=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterHeight,x=d.effectiveFilterWidth,v=x-1-d.padInfo.left,w=b-1-d.padInfo.top,k=im(s.shape,"float32"),I=n.data.get(a.dataId).values,S=im(a.shape,"float32",I);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){let a=n-w,s=r-v,i=0;for(let n=0;n<b;n+=g){let r=(a+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let a=0;a<x;a+=y){let o=(s+a)/f;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;let l=b*x-1-c.get(e,r,o,t)===n*x+a?1:0;0!==l&&(i+=S.get(e,r,o,t)*l)}}k.set(i,e,n,r,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},{kernelName:nR,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t;k7(r,"MaxPoolWithArgmax");let l=n.data.get(r.dataId).values,u=hR.computePool2DInfo(r.shape,a,s,[1,1],i),[p,d]=function(e,t,n,r,a){let s=at.computeStrides(t),i=SX(e,t,n,s,a,"max"),o=SY(e,t,n,a,!0,r);return[i.values,o.values]}(l,r.shape,r.dtype,o,u),h=n.write(p,u.outShape,r.dtype),c=n.write(d,u.outShape,r.dtype);return[{dataId:h,shape:u.outShape,dtype:r.dtype},{dataId:c,shape:u.outShape,dtype:"int32"}]}},{kernelName:nD,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=at.parseAxisParam(s,a.shape),l=hR.computeOutAndReduceShapes(a.shape,o)[1],u=at.sizeFromShape(l),p=[],d=n.makeTensorInfo([],"float32",new Float32Array([u]));p.push(d);let h=Iu({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});p.push(h);let c=Na({inputs:{a:h,b:d},backend:n});p.push(c);let m=S6({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}},{kernelName:nM,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;k7(a,"min");let o=at.parseAxisParam(s,a.shape),l=o,u=hR.getAxesPermutation(l,a.shape.length),p=a;null!=u&&(p=I4({inputs:{x:a},backend:n,attrs:{perm:u}}),l=hR.getInnerMostAxes(l.length,a.shape.length)),hR.assertAxesAreInnerMostDims("min",l,p.shape.length);let[d,h]=hR.computeOutAndReduceShapes(p.shape,l),c=at.sizeFromShape(h),m=at.makeZerosTypedArray(at.sizeFromShape(d),p.dtype),f=n.data.get(p.dataId).values;for(let e=0;e<m.length;++e){let t=e*c,n=f[t];for(let e=0;e<c;++e){let r=f[t+e];(Number.isNaN(r)||r<n)&&(n=r)}m[e]=n}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(d,p.dtype,m);if(i){let e=SB({inputs:{x:g},backend:n,attrs:{shape:hR.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},{kernelName:nO,backendName:"cpu",kernelFunc:IZ},{kernelName:nL,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;k7(a,"mirrorPad");let o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),l=s.map(e=>e[0]),u=s.map((e,t)=>e[0]+a.shape[t]),p="reflect"===i?0:1,d=n.data.get(a.dataId).values,h=a.shape.length,c=at.computeStrides(a.shape),m=at.sizeFromShape(o),f=o.length,g=at.computeStrides(o),y=at.getTypedArrayFromDType(a.dtype,m);for(let e=0;e<m;e++){let t=at.indexToLoc(e,f,g);for(let e=0;e<f;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-p:t[e]>=u[e]&&(t[e]=(u[e]-1)*2-t[e]+p);t=t.map((e,t)=>e-l[t]);let n=at.locToIndex(t,h,c);y[e]=d[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},{kernelName:nz,backendName:"cpu",kernelFunc:Ng},{kernelName:nP,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;k7(a,"multinomial");let l=o?a:Nb({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],p=l.shape[1],d=n.data.get(l.dataId).values,h=[u,s],c=at.makeZerosTypedArray(at.sizeFromShape(h),"int32");for(let e=0;e<u;++e){let t=e*p,n=new Float32Array(p-1);n[0]=d[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+d[t+e];let r=Ny.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){let t=r();c[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){c[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(h,"int32",c)}},{kernelName:nB,backendName:"cpu",kernelFunc:IQ},{kernelName:nW,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t;k7(r,"neg");let[a,s]=I0(n.data.get(r.dataId).values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,a)}},{kernelName:nU,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;k7(a,"NonMaxSuppression");let{selectedIndices:u}=Nx(n.data.get(a.dataId).values,n.data.get(s.dataId).values,i,o,l);return n.makeTensorInfo([u.length],"int32",new Int32Array(u))}},{kernelName:nG,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;k7(a,"NonMaxSuppressionPadded");let{selectedIndices:p,validOutputs:d}=Nv(n.data.get(a.dataId).values,n.data.get(s.dataId).values,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},{kernelName:nH,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;k7(a,"NonMaxSuppressionWithScore");let{selectedIndices:p,selectedScores:d}=Nw(n.data.get(a.dataId).values,n.data.get(s.dataId).values,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([d.length],"float32",new Float32Array(d))]}},{kernelName:nV,backendName:"cpu",kernelFunc:I2},{kernelName:nq,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r;k7(a,"oneHot");let u=at.sizeFromShape(a.shape),p=new Float32Array(u*i);p.fill(l);let d=n.data.get(a.dataId).values;for(let e=0;e<u;++e)d[e]>=0&&d[e]<i&&(p[e*i+d[e]]=o);return n.makeTensorInfo([...a.shape,i],s,p)}},{kernelName:nj,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw Error("onesLike is not supported for string tensors");if("complex64"!==a.dtype)return No({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}});{let t=Io({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=SQ({inputs:{input:a},backend:r}),i=Nk({inputs:{x:s},backend:r}),o=Ia({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}}},{kernelName:nK,backendName:"cpu",kernelFunc:NI},NS,{kernelName:nZ,backendName:"cpu",kernelFunc:NN},{kernelName:nJ,backendName:"cpu",kernelFunc:SO},{kernelName:nQ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;k7(a,"prod");let o=a.shape.length,l=at.parseAxisParam(s,a.shape),u=hR.getAxesPermutation(l,o),p=l,d=a,h=[];null!=u&&(h.push(d=I4({inputs:{x:a},backend:n,attrs:{perm:u}})),p=hR.getInnerMostAxes(p.length,o));let c=n.data.get(d.dataId).values,{outVals:m,outShape:f,outDtype:g}=I6(d.shape,d.dtype,c,p),y=f;return i&&(y=hR.expandShapeToKeepDim(f,l)),h.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(y,g,m)}},{kernelName:n0,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(e=>n.data.get(e.dataId).values),u=a.map(e=>e.shape),p=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,[h,c,m]=I8(l,u,p,s.shape,s.dtype,d,i.shape,o),f=h.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(m,s.dtype,c);return f.concat([g])}},{kernelName:n1,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=I7(i,r.shape,r.dtype,o,a.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([p.length],r.dtype,p)]}},{kernelName:n2,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,h=o.map(e=>n.data.get(e.dataId).values),c=o.map(e=>e.shape),[m,f]=Sr(u,a.shape,p,s.shape,s.dtype,d,i.shape,h,c,l);return n.makeTensorInfo(m,s.dtype,f)}},{kernelName:n3,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=Sa(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},{kernelName:n4,backendName:"cpu",kernelFunc:Io},Ns,{kernelName:n6,backendName:"cpu",kernelFunc:NT},{kernelName:n5,backendName:"cpu",kernelFunc:SL},{kernelName:rn,backendName:"cpu",kernelFunc:Sz},{kernelName:n8,backendName:"cpu",kernelFunc:SB},{kernelName:re,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;k7(a,"resizeBilinear");let l=at.computeStrides(a.shape),[u,p]=o,[d,h,c,m]=a.shape,f=n.data.get(a.dataId).values,g=new Float32Array(at.sizeFromShape([d,u,p,m])),y=[s&&u>1?h-1:h,s&&p>1?c-1:c],b=[s&&u>1?u-1:u,s&&p>1?p-1:p],x=0,v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<d;e++)for(let t=0;t<u;t++){let n;let r=Math.max(0,Math.floor(n=i?v*(t+.5)-.5:v*t)),a=n-r,s=Math.min(h-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+s*l[1];for(let e=0;e<p;e++){let t;let n=Math.max(0,Math.floor(t=i?w*(e+.5)-.5:w*e)),r=t-n,s=Math.min(c-1,Math.ceil(t)),p=o+n*l[2],d=u+n*l[2],h=o+s*l[2],y=u+s*l[2];for(let e=0;e<m;e++){let t=f[p+e],n=f[d+e],s=f[h+e],i=f[y+e],o=t+(s-t)*r,l=o+(n+(i-n)*r-o)*a;g[x++]=l}}}return n.makeTensorInfo([d,u,p,m],"float32",g)}},{kernelName:rt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;k7([s,a],"resizeBilinearGrad");let o=at.computeStrides(a.shape),[l,u,p,d]=a.shape,[,h,c]=s.shape,m=new Float32Array(l*u*p*d),f=[i&&h>1?u-1:u,i&&c>1?p-1:p],g=[i&&h>1?h-1:h,i&&c>1?c-1:c],y=f[0]/g[0],b=f[1]/g[1],x=n.data.get(s.dataId).values,v=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<h;e++){let n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=t+r*o[1],i=t+a*o[1],l=n-r,h=1-l;for(let e=0;e<c;e++){let t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),p-1),a=t-n,u=1-a,c=s+n*o[2],f=s+r*o[2],g=i+n*o[2],y=i+r*o[2],w=h*u,k=h*a,I=l*u,S=l*a;for(let e=0;e<d;e++){let t=x[v++];m[c+e]+=t*w,m[f+e]+=t*k,m[g+e]+=t*I,m[y+e]+=t*S}}}}return n.makeTensorInfo([l,p,u,d],"float32",m)}},{kernelName:n7,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;k7(a,"resizeNearestNeighbor");let l=at.computeStrides(a.shape),[u,p]=o,[d,h,c,m]=a.shape,f=n.data.get(a.dataId).values,g=new Float32Array(d*u*p*m),y=[s&&u>1?h-1:h,s&&p>1?c-1:c],b=[s&&u>1?u-1:u,s&&p>1?p-1:p],x=y[0]/b[0],v=y[1]/b[1],w=0;for(let e=0;e<d;e++){let t=e*l[0];for(let e=0;e<u;e++){let n=i?x*(e+.5):x*e,r=Math.min(h-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));let a=t+r*l[1];for(let e=0;e<p;e++){let t=i?v*(e+.5):v*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let r=a+n*l[2];for(let e=0;e<m;e++){let t=f[r+e];g[w++]=t}}}}return n.makeTensorInfo([d,u,p,m],a.dtype,g)}},{kernelName:n9,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;k7([s,a],"resizeNearestNeighborGrad");let o=at.computeStrides(a.shape),l=at.computeStrides(s.shape),[u,p,d,h]=a.shape,[,c,m]=s.shape,f=new Float32Array(u*p*d*h),g=n.data.get(s.dataId).values,y=[i&&c>1?p-1:p,i&&m>1?d-1:d],b=[i&&c>1?c-1:c,i&&m>1?m-1:m],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<p;e++){let n=t+e*o[1],r=Math.floor(Math.floor(e*w)-I/2);for(let a=0;a<d;a++){let s=n+a*o[2],u=Math.floor(Math.floor(a*k)-S/2);for(let n=0;n<h;n++){let o=0;for(let s=0;s<I;s++){let h=s+r;if(h<0||h>=c)continue;let f=t+h*l[1],y=h*x;if(e===Math.min(p-1,i?Math.round(y):Math.floor(y)))for(let e=0;e<S;e++){let t=e+u;if(t<0||t>=m)continue;let r=f+t*l[2],s=t*v;a===Math.min(d-1,i?Math.round(s):Math.floor(s))&&(o+=g[r+n])}}f[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,f)}},{kernelName:rr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;k7(a,"reverse");let i=a.shape.length,o=at.parseAxisParam(s,a.shape);if(0===i)return Ii({inputs:{x:a},backend:n});let l=new aE(a.shape,a.dtype),u=n.bufferSync(a);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),n=t.slice();o.forEach(e=>n[e]=a.shape[e]-1-n[e]),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},{kernelName:rK,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=at.getTypedArrayFromDType(r.dtype,at.sizeFromShape(r.shape)),[l,u,p,d]=r.shape,[h,c]=hR.getImageCenter(i,u,p),m=Math.sin(a),f=Math.cos(a),g=n.data.get(r.dataId).values;for(let e=0;e<l;e++){let t=e*p*u*d;for(let e=0;e<u;e++){let n=p*d*e;for(let r=0;r<p;r++){let a=r*d;for(let i=0;i<d;i++){let y=[l,e,r,i],b=y[2],x=y[1],v=(b-h)*f-(x-c)*m,w=(b-h)*m+(x-c)*f;v=Math.round(v+h),w=Math.round(w+c);let k=s;"number"!=typeof s&&(k=3===i?255:s[i]),v>=0&&v<p&&w>=0&&w<u&&(k=g[t+p*d*w+v*d+i]),o[t+n+a+i]=k}}}}return{dataId:n.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},{kernelName:ra,backendName:"cpu",kernelFunc:N_},{kernelName:rs,backendName:"cpu",kernelFunc:Si},{kernelName:ri,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:d}=hR.calculateShapes(s,a,i),h=So(n.bufferSync(a),n.bufferSync(s),i,d,u,l,o,p,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}},{kernelName:rl,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=function(e,t,n,r,a,s){let i=at.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let n=e.slice(o*r,(o+1)*r),l=o*a;for(let e=0;e<a;++e)i[l+e]="left"===s?function(e,t){let n=0,r=e.length,a=0;for(;n<r;)e[a=Math.floor((n+r)/2)]<t?n=a+1:r=a;return r}(n,t[e+l]):function(e,t){let n=0,r=e.length,a=0;for(;n<r;)e[a=Math.floor((n+r)/2)]<=t?n=a+1:r=a;return r}(n,t[e+l])}return i}(n.data.get(a.dataId).values,n.data.get(s.dataId).values,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",o)}},{kernelName:ru,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;k7([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,p=aL(a.dtype,s.dtype),d=at.makeZerosTypedArray(at.sizeFromShape(a.shape),p),h=0,c=0===i||i>1||1===a.shape.length?1:at.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<c;t++)1===o[e]?d[h++]=l[e]:d[h++]=u[e];return n.makeTensorInfo(a.shape,p,d)}},{kernelName:rp,backendName:"cpu",kernelFunc:N$},{kernelName:rf,backendName:"cpu",kernelFunc:Su},{kernelName:rm,backendName:"cpu",kernelFunc:NA},{kernelName:rh,backendName:"cpu",kernelFunc:NF},{kernelName:rc,backendName:"cpu",kernelFunc:NR},{kernelName:rd,backendName:"cpu",kernelFunc:Sd},{kernelName:rw,backendName:"cpu",kernelFunc:Nb},{kernelName:rg,backendName:"cpu",kernelFunc:NM},{kernelName:rx,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;k7([a],"spaceToBatchND");let o=at.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=NS.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=hR.getReshaped(u.shape,s,o,!1),d=hR.getPermuted(p.length,s.length,!1),h=hR.getReshapedPermuted(u.shape,s,o,!1),c=SB({inputs:{x:u},backend:n,attrs:{shape:p}}),m=I4({inputs:{x:c},backend:n,attrs:{perm:d}}),f=SB({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),f}},{kernelName:rk,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(2!==r.shape.length)throw Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(1!==a.shape.length)throw Error(`Values must be a vector, saw:
        ${a.shape}`);if(0!==i.shape.length)throw Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values[0],[d,h,c,m,f]=Sh(o,r.shape,r.dtype,l,a.dtype,u,p);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,c),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(e=>Number(e)))),n.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}},{kernelName:rI,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(1!==a.shape.length)throw Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(1!==s.shape.length)throw Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,p,d]=Sc(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(p,r.dtype,u),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}},{kernelName:rS,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
          ${a.shape}`);if(1!==s.shape.length)throw Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=Sm(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(p,r.dtype,u)}},{kernelName:rN,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
         ${a.shape}`);if(1!==s.shape.length)throw Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,p]=Sm(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(p,r.dtype,u)}},{kernelName:rT,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:p,strides:d,outputSize:h}=hR.calculateShapes(s,a,o),c=n.bufferSync(a),m;switch(s.dtype){case"bool":m=So(c,n.bufferSync(s),o,h,p,u,l,d,!!n.data.get(i.dataId).values[0],!1);break;case"float32":case"int32":m=So(c,n.bufferSync(s),o,h,p,u,l,d,n.data.get(i.dataId).values[0],!1);break;case"string":m=So(c,n.bufferSync(s),o,h,p,u,l,d,at.decodeString(n.data.get(i.dataId).values[0]),!1);break;default:throw Error(`Unsupported type ${s.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},{kernelName:rv,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=at.parseAxisParam(i,a.shape)[0],l=hR.prepareSplitSize(a,s,o),u=Array(a.shape.length).fill(0),p=a.shape.slice();return l.map(e=>{let t=[...p];t[o]=e;let r=Sd({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r})}},{kernelName:ry,backendName:"cpu",kernelFunc:Sg},{kernelName:rC,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e;k7(n,"square");let r=t.data.get(n.dataId).values,a=new Float32Array(r.length);for(let e=0;e<r.length;++e){let t=r[e];a[e]=t*t}return{dataId:t.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},{kernelName:r_,backendName:"cpu",kernelFunc:Sb},{kernelName:rE,backendName:"cpu",kernelFunc:Sv},{kernelName:rj,backendName:"cpu",kernelFunc:NO},{kernelName:r$,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:h}=r;k7(a,"stridedSlice");let{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=hd.sliceInfo(a.shape,s,i,o,l,u,p,d,h),w;if(f)w=SB({inputs:{x:a},backend:n,attrs:{shape:m}});else if(g||y){at.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let e=hd.computeOutShape(b,x,v),t=Sd({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});w=SB({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=Sw(c,n.bufferSync(a),v,b);w=n.makeTensorInfo(m,e.dtype,e.values)}return w}},{kernelName:rA,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:p,dataSplits:d}=t,[h,c]=SI(n.data.get(p.dataId).values,n.data.get(d.dataId).values,a,s,i,o,l,u);return[n.makeTensorInfo([h.length],"string",h),n.makeTensorInfo(d.shape,"int32",c)]}},{kernelName:rF,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");if(1!==s.shape.length)throw Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let[o,l,u]=SS(n.data.get(s.dataId).values,n.data.get(i.dataId).values[0],a),p=l.length;return[n.makeTensorInfo([p,2],"int32",o),n.makeTensorInfo([p],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(u))]}},{kernelName:rR,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");if(a<=0)throw Error("Number of buckets must be at least 1");let i=SN(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},{kernelName:rD,backendName:"cpu",kernelFunc:S_},{kernelName:rb,backendName:"cpu",kernelFunc:S6},{kernelName:rM,backendName:"cpu",kernelFunc:NL},{kernelName:rO,backendName:"cpu",kernelFunc:Nz},{kernelName:ro,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{tensor:r,indices:a,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:p}=hR.calculateShapes(s,a,r.shape),d=n.bufferSync(a),h=n.bufferSync(s),c=n.bufferSync(r),m=So(d,h,r.shape,p,l,o,i,u,c,!1);return n.makeTensorInfo(r.shape,m.dtype,m.values)}},{kernelName:rL,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;k7(a,"tile");let i=SC(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:rz,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;k7(a,"topk");let[o,l]=S$(n.data.get(a.dataId).values,a.shape,a.dtype,s,i);return[n.makeTensorInfo(o.shape,o.dtype,o.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},{kernelName:rP,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[p,d,h,c]=a.shape,[m,f]=null!=u?u:[d,h],g=[p,m,f,c],y=at.computeStrides(a.shape),b=y[0],x=y[1],v=y[2],w=at.computeStrides(g),k=w[0],I=w[1],S=w[2],N=at.getTypedArrayFromDType(a.dtype,at.sizeFromShape(g));N.fill(l);let T=r.data.get(a.dataId).values,_=r.data.get(s.dataId).values;for(let e=0;e<p;++e){let t=1===s.shape[0]?_:_.subarray(8*e,8*e+8);for(let n=0;n<m;++n)for(let r=0;r<f;++r)for(let a=0;a<c;++a){let s,u=t[6]*r+t[7]*n+1;if(0===u)continue;let p=(t[0]*r+t[1]*n+t[2])/u,c=(t[3]*r+t[4]*n+t[5])/u,m=NP(p,h,o),f=NP(c,d,o);switch(i){case"nearest":s=NB(T,d,h,b,x,v,e,Math.round(f),Math.round(m),a,l);break;case"bilinear":s=function(e,t,n,r,a,s,i,o,l,u,p){let d=Math.floor(o),h=Math.floor(l),c=d+1,m=h+1,f=(m-l)*NB(e,t,n,r,a,s,i,d,h,u,p)+(l-h)*NB(e,t,n,r,a,s,i,d,m,u,p),g=(m-l)*NB(e,t,n,r,a,s,i,c,h,u,p)+(l-h)*NB(e,t,n,r,a,s,i,c,m,u,p);return(c-o)*f+(o-d)*g}(T,d,h,b,x,v,e,f,m,a,l);break;default:throw Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}N[e*k+n*I+r*S+a]=s}return r.makeTensorInfo(g,a.dtype,N)}return{dataId:r.write(N,g,a.dtype),shape:a.shape,dtype:a.dtype}}},{kernelName:rB,backendName:"cpu",kernelFunc:I4},{kernelName:rW,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;k7(s,"unique");let{outputValues:i,outputShape:o,indices:l}=SA(r.data.get(s.dataId).values,a,s.shape,s.dtype);return[r.makeTensorInfo(o,s.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:rV,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let p=Array(i).fill(0),d=a.shape.slice();d[s]=1;let h=Array(o);for(let e=0;e<h.length;e++){p[s]=e;let t=Sd({inputs:{x:a},backend:n,attrs:{begin:p,size:d}});h[e]=SB({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return h}},{kernelName:rU,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;k7(a,"unsortedSegmentSum");let o=a.shape.length,l=s.shape.length,u=[],p=[],d=o-l,h=s;for(let e=0;e<d;++e){let t=Nr({inputs:{input:h},backend:n,attrs:{dim:e+1}});h=t,p.push(t)}for(let e=0;e<i;++e){let t=at.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=IN({inputs:{a:r,b:h},backend:n}),i=Iu({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),o=IQ({inputs:{a:i,b:a},backend:n}),l=S6({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});u.push(l),p.push(r),p.push(s),p.push(i),p.push(o),p.push(l)}let c=NI({inputs:u,backend:n,attrs:{axis:0}});return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},{kernelName:rH,backendName:"cpu",kernelFunc:Nk}])r6(e);var NW={};L(NW,{assertNotComplex:()=>TA,bindCanvasToFramebuffer:()=>Tl,bindColorTextureToFramebuffer:()=>Tu,bindTextureToProgramUniformSampler:()=>To,bindTextureUnit:()=>Tr,bindVertexBufferToProgramAttribute:()=>Tn,callAndCheck:()=>NX,canBeRepresented:()=>NY,createFragmentShader:()=>N0,createFramebuffer:()=>Tt,createProgram:()=>N3,createStaticIndexBuffer:()=>N8,createStaticVertexBuffer:()=>N5,createTexture:()=>N9,createVertexShader:()=>NQ,getBatchDim:()=>Tf,getExtensionOrThrow:()=>NJ,getFramebufferErrorMessage:()=>Th,getMaxTexturesInShader:()=>TI,getNumChannels:()=>N7,getProgramUniformLocation:()=>Ti,getProgramUniformLocationOrThrow:()=>Ts,getRowsCols:()=>Tg,getShapeAs3D:()=>Ty,getTextureShapeFromLogicalShape:()=>Tb,getWebGLDisjointQueryTimerVersion:()=>TS,getWebGLErrorMessage:()=>NZ,getWebGLMaxTextureSize:()=>Tv,hasExtension:()=>TN,isCapableOfRenderingToFloatTexture:()=>T_,isDownloadFloatTextureEnabled:()=>TC,isReshapeFree:()=>Tx,isWebGLFenceEnabled:()=>T$,isWebGLVersionEnabled:()=>TT,linkProgram:()=>N4,logShaderSourceAndInfoLog:()=>N2,resetMaxTextureSize:()=>Tw,resetMaxTexturesInShader:()=>Tk,unbindColorTextureFromFramebuffer:()=>Tp,unbindTextureUnit:()=>Ta,validateFramebuffer:()=>Td,validateProgram:()=>N6,validateTextureSize:()=>Te});var NV={},NU={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function NG(e,t){NV[e]=t}function NH(e,t){if(!(e in NV)||null!=t){let n=function(e,t){if(1!==e&&2!==e)throw Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?function(e){if(!e8.getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete NV[e]},!1),e8.getBool("SOFTWARE_WEBGL_ENABLED")&&(NU.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",NU)||n.getContext("experimental-webgl",NU):n.getContext("webgl2",NU)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;NV[e]=n}let n=NV[e];return null==n||n.isContextLost()?(delete NV[e],NH(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),NV[e])}function Nj(e){let t=Math.ceil(at.sizeFromShape(e)/4);return at.sizeToSquarishShape(t)}function Nq(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function NK(e,t){let n,r,a,s,i,o,l,u,p,d;return 2===e8.getNumber("WEBGL_VERSION")?(n=e.R32F,r=e.R16F,a=e.RGBA16F,s=e.RGBA32F,i=e.RED,l=4,u=1,p=e.HALF_FLOAT,d=e.FLOAT,o=e.RGBA8):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=e.RGBA,i=e.RGBA,l=4,u=4,p=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:p,textureTypeFloat:d}}function NX(e,t){let n=t();return e8.getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw Error("WebGL Error: "+NZ(e,t))}(e),n}function NY(e){return!!(e8.getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||596e-10<Math.abs(e)&&65504>Math.abs(e))}function NZ(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function NJ(e,t){return Tc(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function NQ(e,t){let n=Tc(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(NX(e,()=>e.shaderSource(n,t)),NX(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),Error("Failed to compile vertex shader.");return n}function N0(e,t){let n=Tc(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(NX(e,()=>e.shaderSource(n,t)),NX(e,()=>e.compileShader(n)),e8.get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw N2(t,e.getShaderInfoLog(n)),Error("Failed to compile fragment shader.");return n}(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(EG||(EG={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(EH||(EH={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Ej||(Ej={}));var N1=/ERROR: [0-9]+:([0-9]+):/g;function N2(e,t){let n=N1.exec(t);if(null==n){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let r=+n[1],a=e.split(`
`),s=a.length.toString().length+2,i=a.map((e,t)=>at.rightPad((t+1).toString(),s)+e),o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),p=i.slice(r);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${at.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join(`
`))}function N3(e){return Tc(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function N4(e,t){if(NX(e,()=>e.linkProgram(t)),!e8.get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Failed to link vertex and fragment shaders.")}function N6(e,t){if(NX(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Shader program validation failed.")}function N5(e,t){let n=Tc(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return NX(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),NX(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function N8(e,t){let n=Tc(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return NX(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),NX(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function N7(){return 2===e8.getNumber("WEBGL_VERSION")?1:4}function N9(e){return Tc(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function Te(e,t){let n=e8.getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function Tt(e){return Tc(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Tn(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return -1!==o&&(NX(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),NX(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),NX(e,()=>e.enableVertexAttribArray(o)),!0)}function Tr(e,t,n){Tm(e,n),NX(e,()=>e.activeTexture(e.TEXTURE0+n)),NX(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function Ta(e,t){Tm(e,t),NX(e,()=>e.activeTexture(e.TEXTURE0+t)),NX(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Ts(e,t,n){return Tc(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function Ti(e,t,n){return e.getUniformLocation(t,n)}function To(e,t,n,r){NX(e,()=>Tr(e,t,r)),NX(e,()=>e.uniform1i(n,r))}function Tl(e){NX(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),NX(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),NX(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function Tu(e,t,n){NX(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),NX(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Tp(e,t){NX(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),NX(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Td(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw Error("Error binding framebuffer: "+Th(e,t))}function Th(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Tc(e,t,n){let r=NX(e,()=>t());if(null==r)throw Error(n);return r}function Tm(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){let e=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw Error(`textureUnit must be in ${e}.`)}}function Tf(e,t=2){return at.sizeFromShape(e.slice(0,e.length-t))}function Tg(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Ty(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Tf(e),...Tg(e)]),t}function Tb(e,t=!1){let n=e8.getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=e8.getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&e8.getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map((t,n)=>n>=e.length-2?at.nearestLargerEven(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length&&(e=at.squeezeShape(e).newShape);let a=at.sizeFromShape(e),s=null;e.length<=1&&a<=n?s=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);let i=null!=s&&Math.max(...s)>r&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||i){if(t){let t=Tf(e),n=2,r=2;e.length&&([n,r]=Tg(e)),a=n/2*t*(r/2),s=at.sizeToSquarishShape(a).map(e=>2*e)}else s=at.sizeToSquarishShape(a)}return s}function Tx(e,t){if(e=e.slice(-2),t=t.slice(-2),at.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e[e.length-1],r=t[t.length-1];if(n===r||n%2==0&&r%2==0&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&e[0]%2==0&&t[0]%2==0}function Tv(e){if(null==Eq){let t=NH(e);Eq=t.getParameter(t.MAX_TEXTURE_SIZE)}return Eq}function Tw(){Eq=null}function Tk(){EK=null}function TI(e){if(null==EK){let t=NH(e);EK=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,EK)}function TS(e){if(0===e)return 0;let t=NH(e);return TN(t,"EXT_disjoint_timer_query_webgl2")&&2===e?2:TN(t,"EXT_disjoint_timer_query")?1:0}function TN(e,t){return null!=e.getExtension(t)}function TT(e){try{if(null!=NH(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function T_(e){if(0===e)return!1;let t=NH(e);if(1===e){if(!TN(t,"OES_texture_float"))return!1}else if(!TN(t,"EXT_color_buffer_float"))return!1;return TE(t)}function TC(e){if(0===e)return!1;let t=NH(e);if(1===e){if(!TN(t,"OES_texture_float")||!TN(t,"WEBGL_color_buffer_float"))return!1}else{if(TN(t,"EXT_color_buffer_float"))return TE(t);let e="EXT_color_buffer_half_float";if(TN(t,e)){let n,r,a,s,i=t.getExtension(e);return n=NK(t,i),r=t.createTexture(),t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null),a=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0),s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE,t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(a),s}return!1}return TE(t)}function TE(e){let t=NK(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function T$(e){return 2===e&&null!=NH(e).fenceSync}function TA(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&at.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var TF=e8;function TR(){let e,t,n,r,a,s,i,o,l,u;return 2===e8.getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=e8.getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function TD(e,t,n="index"){let r=at.computeStrides(t);return r.map((t,a)=>{let s=`int ${e[a]} = ${n} / ${t}`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`;return`${s}; ${i};`}).join("")}function TM(e,t,n="index"){let r=at.computeStrides(t);return r.map((t,a)=>{let s=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${s}; ${i};`}).join("")}function TO(e){let t=at.computeStrides(e).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function TL(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}TF.registerFlag("HAS_WEBGL",()=>TF.getNumber("WEBGL_VERSION")>0),TF.registerFlag("WEBGL_VERSION",()=>TT(2)?2:TT(1)?1:0),TF.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),TF.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===TF.get("WEBGL_VERSION")),TF.registerFlag("WEBGL_CPU_FORWARD",()=>!0),TF.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),TF.registerFlag("WEBGL_PACK",()=>TF.getBool("HAS_WEBGL")),TF.registerFlag("WEBGL_PACK_NORMALIZATION",()=>TF.getBool("WEBGL_PACK")),TF.registerFlag("WEBGL_PACK_CLIP",()=>TF.getBool("WEBGL_PACK")),TF.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>TF.getBool("WEBGL_PACK")),TF.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>TF.getBool("WEBGL_PACK")),TF.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>TF.getBool("WEBGL_PACK")),TF.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>TF.getBool("WEBGL_PACK")),TF.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>TF.getBool("WEBGL_PACK")),TF.registerFlag("WEBGL_PACK_REDUCE",()=>TF.getBool("WEBGL_PACK")),TF.registerFlag("WEBGL_LAZILY_UNPACK",()=>TF.getBool("WEBGL_PACK")),TF.registerFlag("WEBGL_CONV_IM2COL",()=>TF.getBool("WEBGL_PACK")),TF.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>TF.getBool("WEBGL_PACK")),TF.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Tv(TF.getNumber("WEBGL_VERSION"))),TF.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>TI(TF.getNumber("WEBGL_VERSION"))),TF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=TF.getNumber("WEBGL_VERSION");return 0===e?0:TS(e)}),TF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>TF.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!aZ.isMobile()),TF.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>T_(TF.getNumber("WEBGL_VERSION"))),TF.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!TF.getBool("WEBGL_FORCE_F16_TEXTURES")&&TF.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),TF.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>TC(TF.getNumber("WEBGL_VERSION"))),TF.registerFlag("WEBGL_FENCE_API_ENABLED",()=>T$(TF.getNumber("WEBGL_VERSION"))),TF.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>TF.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),TF.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),TF.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>aZ.isMobile()?1:-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),TF.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),TF.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),TF.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),TF.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),TF.registerFlag("WEBGL_EXP_CONV",()=>!1),TF.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>TF.getBool("IS_TEST")),TF.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),TF.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),TF.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),TF.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);var Tz=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:TP}=hR,TB=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,TW=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,TV=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,TU=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function TG(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function TH(e){return`offset${e}`}function Tj(e){let t=e.name,n=at.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function Tq(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function TK(e,t,n){let{newShape:r,keptDims:a}=at.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!at.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function TX(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function TY(e,t){return t.map(t=>e[t]).join(", ")}function TZ(e,t,n){let r=[],a=[],s,i,o,l=null,u=null;for(let a of(u=e.getUniformLocation(n,"NAN",!1),1===e8.getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1)),t.variableNames)){let s={name:a,uniform:e.getUniformLocation(n,a,!1),offset:e.getUniformLocation(n,`offset${a}`,!1)};t.enableShapeUniforms&&(s.shape=e.getUniformLocation(n,`${a}Shape`,!1),s.texShape=e.getUniformLocation(n,`${a}TexShape`,!1)),r.push(s)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",!1),o=e.getUniformLocation(n,"outShapeStrides",!1),i=e.getUniformLocation(n,"outTexShape",!1)),t.customUniforms)for(let r of t.customUniforms)a.push(e.getUniformLocation(n,r.name,!1));return{variablesLocations:r,customUniformLocations:a,infLoc:l,nanLoc:u,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}}function TJ(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{let r=e.logicalShape,a=t[n],s=a.shape;if(!at.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!at.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)})}function TQ(e){return e8.getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var T0=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=EG.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=TR();this.outputShape=e,this.enableShapeUniforms=TQ(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?TM(["r","c","d"],e):TD(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},T1=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=EG.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=TR();this.outputShape=e,this.enableShapeUniforms=TQ(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?TM(["r","c","d"],e):TD(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},T2=class{constructor(e){this.variableNames=["A"],this.outTexUsage=EH.DOWNLOAD;let t=TR();this.outputShape=e,this.userCode=`
      ${Tz}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},T3=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=EH.DOWNLOAD;let t=TR();this.outputShape=e,this.userCode=`
      ${Tz}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},T4={R:0,G:1,B:2,A:3},T6=class{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=TR();this.outputShape=e,this.enableShapeUniforms=TQ(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let e=0;e<n.length;e++){let t=n[e];s+=`
          if(offset == ${e}) {
            result = values[${T4[t]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?TL():TO(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${s}
        }
        ${r.output} = vec4(${a}, 0., 0., 0.);
      }
    `}},T5=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=TR();this.outputShape=e,this.enableShapeUniforms=TQ(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){let s=2*t+a;r+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${t};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${s}] = values[0];
            } else if (offset == 1) {
              result[${s}] = values[1];
            } else if (offset == 2) {
              result[${s}] = values[2];
            } else {
              result[${s}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?TL():TO(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${n.output} = ${a};
        }
    `}},T8={};function T7(e){let t=TR();return NQ(e,`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`)}function T9(e){return N5(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function _e(e){return N8(e,new Uint16Array([0,1,2,2,1,3]))}function _t(e,t,n,r,a,s){Te(t,n);let i=N9(e),o=e.TEXTURE_2D;return NX(e,()=>e.bindTexture(o,i)),NX(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),NX(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),NX(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),NX(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===e8.getNumber("WEBGL_VERSION")?NX(e,()=>e.texImage2D(o,0,r,t,n,0,a,s,null)):NX(e,()=>e.texStorage2D(o,1,r,t,n)),NX(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function _n(e){return e.internalFormatFloat}function _r(e,t,n,r){let[a,s]=[n,t];return _t(e,a,s,_n(r),r.textureFormatFloat,e.FLOAT)}function _a(e){return e.internalFormatHalfFloat}function _s(e,t,n,r){let[a,s]=[n,t];return _t(e,a,s,_a(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function _i(e){return e.downloadTextureFormat}function _o(e,t,n,r){let[a,s]=[n,t];return _t(e,a,s,_i(r),e.RGBA,e.UNSIGNED_BYTE)}function _l(e){return e.internalFormatPackedFloat}function _u(e,t,n,r){let[a,s]=Nq(t,n);return _t(e,a,s,_l(r),e.RGBA,e.FLOAT)}function _p(e){return e.internalFormatPackedHalfFloat}function _d(e,t,n,r){let[a,s]=Nq(t,n);return _t(e,a,s,_p(r),e.RGBA,r.textureTypeHalfFloat)}function _h(e,t,n){return NX(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Tn(e,t,"clipSpacePos",n,3,20,0)&&Tn(e,t,"uv",n,2,20,12)}function _c(e,t,n,r,a,s){let i,o,l;NX(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),2===e8.getNumber("WEBGL_VERSION")?NX(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i)):NX(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i)),NX(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function _m(e,t,n){NX(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?2===e8.getNumber("WEBGL_VERSION")?NX(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):NX(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):2===e8.getNumber("WEBGL_VERSION")?NX(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):NX(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),NX(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function _f(e,t,n,r){let a=e.createBuffer();NX(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));let s=16*t*n;return NX(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),NX(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),NX(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function _g(e,t,n){let r=new Float32Array(n);return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,r),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),r}function _y(e,t,n,r){let[a,s]=[n,t],i=new Uint8Array(t*n*4);return NX(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function _b(e,t,n,r,a,s,i,o){let l=new Float32Array(function(e,t){let[n,r]=Nq(e,t);return n*r*4}(s,i));return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,l),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),l}function _x(e,t,n){let r=new Float32Array(t*n*4);return NX(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}L(T8,{bindVertexProgramAttributeStreams:()=>_h,createBufferFromOutputTexture:()=>_f,createFloat16MatrixTexture:()=>_s,createFloat16PackedMatrixTexture:()=>_d,createFloat32MatrixTexture:()=>_r,createIndexBuffer:()=>_e,createPackedMatrixTexture:()=>_u,createUnsignedBytesMatrixTexture:()=>_o,createVertexBuffer:()=>T9,createVertexShader:()=>T7,downloadByteEncodedFloatMatrixFromOutputTexture:()=>_y,downloadFloat32MatrixFromBuffer:()=>_g,downloadMatrixFromPackedOutputTexture:()=>_x,downloadPackedMatrixFromBuffer:()=>_b,getInternalFormatForFloat16MatrixTexture:()=>_a,getInternalFormatForFloat16PackedMatrixTexture:()=>_p,getInternalFormatForFloat32MatrixTexture:()=>_n,getInternalFormatForPackedMatrixTexture:()=>_l,getInternalFormatForUnsignedBytesMatrixTexture:()=>_i,uploadDenseMatrixToTexture:()=>_c,uploadPixelDataToTexture:()=>_m});var _v=class{constructor(e){var t;this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let n=e8.getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,t=e,NV[n]=t):this.gl=NH(n),e=this.gl,2===e8.getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>NX(t,()=>t.createVertexArray()),this.bindVertexArray=e=>NX(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>NX(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>NX(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>NX(e,()=>t.createVertexArrayOES()),this.bindVertexArray=n=>NX(e,()=>t.bindVertexArrayOES(n)),this.deleteVertexArray=n=>NX(e,()=>t.deleteVertexArrayOES(n)),this.getVertexArray=()=>NX(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float",a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===e8.getNumber("WEBGL_VERSION")){let e="OES_texture_half_float";if(this.textureFloatExtension=NJ(this.gl,"OES_texture_float"),TN(this.gl,e))this.textureHalfFloatExtension=NJ(this.gl,e);else if(e8.get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),TN(this.gl,a))this.colorBufferHalfFloatExtension=NJ(this.gl,a);else if(e8.get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",TN(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(TN(this.gl,a))this.colorBufferHalfFloatExtension=this.gl.getExtension(a);else throw Error("GL context does not support color renderable floats");this.vertexBuffer=T9(this.gl),this.indexBuffer=_e(this.gl),this.framebuffer=Tt(this.gl),this.textureConfig=NK(this.gl,this.textureHalfFloatExtension)}get debug(){return e8.getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;NX(e,()=>e.finish()),NX(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),NX(e,()=>e.deleteFramebuffer(this.framebuffer)),NX(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),NX(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),NX(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),_r(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),_s(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),_o(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),_m(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),_c(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),_d(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),_u(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Tp(this.gl,this.framebuffer),this.outputTexture=null),NX(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>_y(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return _b(this.gl,e,t,n,r,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return _g(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=_f(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(e8.getBool("WEBGL_FENCE_API_ENABLED")){let r=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let t=e.clientWaitSync(r,0,0);return t===e.ALREADY_SIGNALED||t===e.CONDITION_SATISFIED},t=r}else e8.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,e8.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>_x(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=T7(t));let n=N3(t);NX(t,()=>t.attachShader(n,this.vertexShader)),NX(t,()=>t.attachShader(n,e)),N4(t,n);let r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&N6(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;NX(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),_h(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(NX(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&N6(this.gl,this.program),NX(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?Ts(this.gl,e,t):Ti(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),NX(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),To(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=Nq(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&N6(this.gl,this.program),Td(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&(console.assert(this.getVertexArray()===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()),NX(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),NX(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=NJ(this.gl,2===e8.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===e8.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===e8.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();e.endQuery(t.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await at.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,e8.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,e8.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){let n;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||("setTimeoutCustom"in e8.platform&&(n=e8.platform.setTimeoutCustom.bind(e8.platform)),at.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,n))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Tu(this.gl,e,this.framebuffer),this.debug&&Td(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Tu(this.gl,this.outputTexture,this.framebuffer),this.debug&&Td(this.gl)):Tp(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;Tu(r,e,this.framebuffer),this.debug&&Td(r),this.outputTexture=e,NX(r,()=>r.viewport(0,0,t,n)),NX(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),NX(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw Error("No GPU program is currently set.")}},{addImpl:_w,bincountImpl:_k,bincountReduceImpl:_I,bitwiseAndImpl:_S,castImpl:_N,ceilImpl:_T,concatImpl:__,equalImpl:_C,expImpl:_E,expm1Impl:_$,floorImpl:_A,gatherNdImpl:_F,gatherV2Impl:_R,greaterImpl:_D,greaterEqualImpl:_M,lessImpl:_O,lessEqualImpl:_L,linSpaceImpl:_z,logImpl:_P,maxImpl:_B,maximumImpl:_W,minimumImpl:_V,multiplyImpl:_U,negImpl:_G,notEqualImpl:_H,prodImpl:_j,raggedGatherImpl:_q,raggedRangeImpl:_K,raggedTensorToTensorImpl:_X,rangeImpl:_Y,rsqrtImpl:_Z,scatterImpl:_J,sigmoidImpl:_Q,simpleAbsImpl:_0,sliceImpl:_1,sparseFillEmptyRowsImpl:_2,sparseReshapeImpl:_3,sparseSegmentReductionImpl:_4,sqrtImpl:_6,staticRegexReplaceImpl:_5,stridedSliceImpl:_8,stringNGramsImpl:_7,stringSplitImpl:_9,stringToHashBucketFastImpl:Ce,subImpl:Ct,tileImpl:Cn,topKImpl:Cr,transposeImpl:Ca,uniqueImpl:Cs}=It;function Ci(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function Co(e,t){return 1===t?[e]:Ci(e,t)}var Cl=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=TQ(this.outputShape.length),0===this.rank)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=Co("rc",this.rank),t=Tq(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`
        void main() {
          ${t} rc = getOutputCoords();

          if(${n}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},Cu=class{constructor(e,t){var n;this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=TQ(this.outputShape.length);let r="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),r+=`
        ${t}
        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${e}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${e>0?"}":""}
      `}this.userCode=`
      ${n=this.enableShapeUniforms,`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${n?function(e,t,n="index"){let r=function(e,t){let n=e.length,r=e.map(e=>`${t}[${e}]`),a=Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map((e,t)=>t),t);return r.map((t,a)=>{let s=`int ${e[a]} = ${n} / ${r[a]}`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`;return`${s}; ${i};`}).join("")}(["r","c","d"],"inputShape"):TD(["r","c","d"],t)}
      return ivec3(r, c, d);
    }
  `}
      ${this.enableShapeUniforms?TL():TO(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}},Cp=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){let r,a=Ch(t,n),s=Cc(e,a,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let i=Cd(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}return a===Ej.PACKED_2X2_FLOAT32?r=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===Ej.PACKED_2X2_FLOAT16?r=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===Ej.UNPACKED_FLOAT32?r=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===Ej.UNPACKED_FLOAT16?r=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===Ej.PACKED_4X1_UNSIGNED_BYTE&&(r=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(r),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),r}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=Ch(n,r),s=Cc(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=Cd(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=e8.getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l&&l.indexOf(e);if(null==u||u<0)throw Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function Cd(e,t,n,r,a){let s=function(e,t){switch(e){case Ej.PACKED_2X2_FLOAT32:return _l(t);case Ej.PACKED_2X2_FLOAT16:return _p(t);case Ej.UNPACKED_FLOAT32:return _n(t);case Ej.UNPACKED_FLOAT16:return _a(t);case Ej.PACKED_4X1_UNSIGNED_BYTE:return _i(t);default:throw Error(`Unknown physical texture type ${e}`)}}(t,r),i;if(a){let[t,n]=Nq(e[0],e[1]);i=t*n}else{var o;let[t,n]=(o=e[0],[e[1],o]);i=t*n}return i*function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F||t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw Error(`Unknown internal format ${t}`)}(n,s)}function Ch(e,t){if(e===EH.UPLOAD)return Ej.PACKED_2X2_FLOAT32;if(e===EH.RENDER||null==e)return e8.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Ej.PACKED_2X2_FLOAT32:Ej.UNPACKED_FLOAT32:t?Ej.PACKED_2X2_FLOAT16:Ej.UNPACKED_FLOAT16;if(e===EH.DOWNLOAD||e===EH.PIXELS)return Ej.PACKED_4X1_UNSIGNED_BYTE;throw Error(`Unknown logical texture type ${e}`)}function Cc(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Cm=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=TQ(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Cf="if (isnan(x)) return x;",Cg="return abs(x);",Cy=Cf+`
  return (x < 0.0) ? 0.0 : x;
`,Cb=Cf+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Cx="return x;",Cv=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Cw=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ck=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,CI=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=TQ(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},CS=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=TQ(this.outputShape.length);let t=e.length,n=Co("rc",t),r=Tq(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},CN=cN.whereImpl,CT={},C_=e8.getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),CC=class e extends el{nextDataId(){return e.nextDataId++}constructor(e){let t;if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!e8.getBool("HAS_WEBGL"))throw Error("WebGL is not supported on this device");null!=e?(t=e instanceof _v?e:new _v(NH(e8.getNumber("WEBGL_VERSION"),e)),this.binaryCache={},this.gpgpuCreatedLocally=!1):(t=new _v(NH(e8.getNumber("WEBGL_VERSION"))),this.binaryCache=function(e){return e in CT||(CT[e]={}),CT[e]}(e8.getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0),this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Cp(this.gpgpu),this.numMBBeforeWarning=null==e8.global.screen?1024:e8.global.screen.height*e8.global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new eo(this,aX)}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,s){let i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,a]},o.texShape=[r,a];let l=new T6(Ty(t),!1,s),u=this.runWebGLProgram(l,[i],n,[[r,a]]);return u.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),u.dataId}write(e,t,n){if((e8.getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||e8.getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:EH.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,r,a){if(e8.getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:EH.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t,{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=this.texData.get(e);if(null!=s){let t;t=o?new CI(i,Cx):new Cm(i,Cx);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let l=null!=this.activeTimers,u;if(l&&(u=at.now()),"complex64"===r){let e=this.readSync(a.real.dataId),n=this.readSync(a.imag.dataId);t=hR.mergeRealAndImagArrays(e,n)}else t=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=at.now()-u),this.convertAndCacheOnCPU(e,t)}async read(e){let t;if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}let{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=this.texData.get(e);if(null!=a){let t;t=o?new CI(r,Cx):new Cm(r,Cx);let n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(e8.getBool("DEBUG")&&!e8.getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===e8.getNumber("WEBGL_VERSION"))throw Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,u;if("complex64"!==s&&e8.get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);let t=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(t.texture.texture,...Nj(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),n=e[0],r=e[1];t=hR.mergeRealAndImagArrays(n,r)}else if(null==l)t=this.getValuesFromTexture(e);else{let e=at.sizeFromShape(r);t=this.gpgpu.downloadFloat32MatrixFromBuffer(l,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=l){let e=this.gpgpu.gl;NX(e,()=>e.deleteBuffer(l))}let p=this.convertAndCacheOnCPU(e,t),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(e=>e(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&aX.removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){let{values:n,shape:r,slice:a,dtype:s,isPacked:i,texture:o}=this.texData.get(e);if("complex64"===s)throw Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=i?new CI(r,Cx):new Cm(r,Cx);let a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:s}],s),o=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),o}if(null==o)throw null!=n?Error("Data is not on GPU but on CPU."):Error("There is no data on GPU or CPU.");let l=this.decode(e,t.customTexShape);return Object.assign({tensorRef:aX.makeTensorFromTensorInfo(l)},this.texData.get(l.dataId).texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map(e=>at.decodeString(e));return im(e.shape,e.dtype,n)}catch(e){throw Error("Failed to decode encoded string bytes into utf-8")}return im(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!NY(n))throw e8.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=at.sizeFromShape(t);if(e8.getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...Nj(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}let s=e8.getBool("WEBGL_PACK")&&!0===r,i=s?Ty(t):t,o=s?new T3(i):new T2(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),p}timerAvailable(){return e8.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=at.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),s=at.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(e8.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=at.sum(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:s[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return e8.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:at.now(),endMs:null}}endTimer(e){return e8.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.endQuery():e.endMs=at.now(),e}async getQueryTime(e){return e8.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=C_){return e8.getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&at.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){hR.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return CN(e.shape,t)}packedUnaryOp(e,t,n){let r=new CI(e.shape,t),a=this.compileAndRun(r,[e],n);return aX.makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=_0(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(e8.getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Cg,e.dtype);let t=new Cm(e.shape,Cg),n=this.compileAndRun(t,[e]);return aX.makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&at.isString(n[0])){let a=n.map(e=>at.encodeString(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return aX.makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new CS(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new Cl(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[Tf(e.shape),...Tg(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=new Cu([Tf(t),...Tg(t)],n),s=this.runWebGLProgram(a,[r],e.dtype,[n],!0);return{dataId:s.dataId,shape:t,dtype:s.dtype}}decode(e,t){let{isPacked:n,shape:r,dtype:a}=this.texData.get(e);if(null!=t){let e=at.sizeFromShape(r),n=t[0]*t[1]*4;at.assert(e<=n,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let s=Ty(r),i;i=n?new T1(s):new T0(s);let o=[null!=t?t:Nj(s)],l=this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,o,!0,t);return{dtype:a,shape:r,dataId:l.dataId}}runWebGLProgram(e,t,n,r,a=!1,s){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===EG.DENSE){let t=null!=s?s:Nj(e.outputShape);o.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===at.sizeFromShape(i.shape))return o.values=at.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map(t=>{if("complex64"===t.dtype)throw Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&at.sizeFromShape(t.shape)<=e8.getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Tx(n.shape,t.shape)){let e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(i.dataId);let p={shape:i.shape,texData:o,isUniform:!1},d=function(e,t,n){let r="";t.concat(n).forEach(t=>{let a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=TK(e.packedInputs,t.shape,s),u="",p="",d="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=at.computeStrides(o);d=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else p=`${o[0]>1}_${o[1]>1}`;let h=t.shape.length,c=2===o.length&&at.arraysEqual(t.shape,s),m=1===at.sizeFromShape(t.shape),f=hR.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&h===n.shape.length&&at.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${h}_${g}_${i?l:""}_${o.length}_${m}_${f}_${c}_${u}_${p}_${d}_${y}_${a}`}else{let e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}});let a=e.userCode;return e.constructor.name+("_"+r+"_")+a+`${e8.getNumber("WEBGL_VERSION")}`}(e,u,p),h=this.getAndSaveBinary(d,()=>{var t;let n,r,a,s,i,o;return t=this.gpgpu,r=(n=u.map((t,n)=>{let r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})).map(e=>e.shapeInfo),s=function(e,t,n){let r=[];if(e.forEach(e=>{let t=at.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=TK(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});let a=r.join(`
`),s=e.map(e=>(function(e,t,n=!1,r){let a="";n?a+=function e(t,n){switch(t.shapeInfo.logicalShape.length){case 0:let r,a,s;return a="get"+(r=t.name).charAt(0).toUpperCase()+r.slice(1),s=TR(),`
    vec4 ${a}() {
      return ${s.texture2D}(${r}, halfCR);
    }
  `;case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=TR();if(t)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${n}, uv);
    }
  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${n}, uv);
    }
  `}(t,n);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=TR();if(null!=s&&at.arraysEqual(n,s))return t?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${l.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${l.texture2D}(${r}, uv);
      }
    `;if(t)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],p=Math.ceil(n[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${p}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}(t,n);case 3:return function(t,n){let r=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=t.shapeInfo.texShape,o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===r[0]){let a=TX(t,r.slice(1));return`
        ${e(a,n)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${TY(["b","row","col"],[1,2])});
        }
      `}let l=TR();if(n)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${l.texture2D}(${a}, uv);
    }
  `;let u=o[0],p=o[1],d=Math.ceil(r[2]/2),h=d*Math.ceil(r[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${p}, ${h}, ${d}, b, row, col);
      return ${l.texture2D}(${a}, uv);
    }
  `}(t,n);default:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=TR();if(t)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],p=l[1],d=Math.ceil(s[i-1]/2),h=d*Math.ceil(s[i-2]/2),c="int b, int row, int col",m=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<i-1;e++)c=`int b${e}, `+c,h*=s[i-e-1],m=`b${e} * ${h} + `+m;return`
    vec4 ${r}(${c}) {
      int index = ${m};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${u});
      return ${a.texture2D}(${n}, uv);
    }
  `}(t,n)}}(e,r):a+=function e(t,n=!1){let r=t.shapeInfo.logicalShape;switch(r.length){case 0:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`
      float ${r}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=TH(n);if(t)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;let[o,l]=e.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}(t,n);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${Tj(e)}
      }
    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`
      float ${r}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=TH(n);return 1===i?t?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);
        return sampleTexture(${n}, uv);
      }
    `:1===s?t?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});
      return sampleTexture(${n}, uv);
    }
  `}(t,n);case 2:return function(t,n){let r=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=t.shapeInfo.texShape;if(null!=i&&at.arraysEqual(r,i)){if(n)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `;let e=i[0],t=i[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${t}.0, ${e}.0);
      return sampleTexture(${a}, uv);
    }
  `}let{newShape:o,keptDims:l}=at.squeezeShape(r);if(o.length<r.length){let r=TX(t,o);return`
      ${e(r,n)}
      float ${s}(int row, int col) {
        return ${s}(${TY(["row","col"],l)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${r[1]}, 1)));
        ${Tj(t)}
      }
    `;let u=i[0],p=i[1],d=TH(a);return 1===p?n?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${a}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${r[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${a}, uv);
    }
  `:1===u?n?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${a}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${r[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
      return sampleTexture(${a}, uv);
    }
  `:n?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);
        return sampleTexture(${a}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${r[1]} + col + ${d};
    vec2 uv = uvFromFlat(${u}, ${p}, index);
    return sampleTexture(${a}, uv);
  }
`}(t,n);case 3:return function(t,n){let r=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=r[1]*r[2],o=r[2],{newShape:l,keptDims:u}=at.squeezeShape(r);if(l.length<r.length){let r=TX(t,l);return`
        ${e(r,n)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${TY(["row","col","depth"],u)});
        }
      `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${o}, 1)));
        ${Tj(t)}
      }
    `;let p=t.shapeInfo.texShape,d=p[0],h=p[1],c=t.shapeInfo.flatOffset;if(h===i&&null==c)return n?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${a}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${a}, uv);
        }
      `;if(h===o&&null==c)return n?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${r[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${a}, uv);
    }
  `;let m=TH(a);return n?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${a}Shape[1] * ${a}Shape[2];
      int stride1 = ${a}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${m};
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);
      return sampleTexture(${a}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${o} + depth + ${m};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${a}, uv);
      }
  `}(t,n);case 4:return function(t,n){let r=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=r[3],o=r[2]*i,l=r[1]*o,{newShape:u,keptDims:p}=at.squeezeShape(r);if(u.length<r.length){let r=TX(t,u);return`
      ${e(r,n)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${TY(["row","col","depth","depth2"],p)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${l}, ${o}, ${i}, 1)));
        ${Tj(t)}
      }
    `;let d=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,c=h[0],m=h[1],f=`int stride2 = ${a}Shape[3];`,g=`int stride1 = ${a}Shape[2] * stride2;`,y=`int stride0 = ${a}Shape[1] * stride1;`;if(m===l&&null==d)return n?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${f}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${c}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(m===i&&null==d)return n?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r[1]*r[2]}, ${r[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${c}.0);
        return sampleTexture(${a}, uv);
      }
    `;let b=TH(a);return n?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${g}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${b});
      return sampleTexture(${a}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${o} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${c}, ${m}, index + ${b});
      return sampleTexture(${a}, uv);
    }
  `}(t,n);case 5:return function(t){let n=t.shapeInfo.logicalShape,r=t.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[4],i=n[3]*s,o=n[2]*i,l=n[1]*o,{newShape:u,keptDims:p}=at.squeezeShape(n);if(u.length<n.length){let n=TX(t,u);return`
      ${e(n)}
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        return ${a}(${TY(["row","col","depth","depth2","depth3"],p)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${o}, ${i}, ${s})) +
          depth3;
        ${Tj(t)}
      }
    `;let d=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,c=h[0],m=h[1];if(m===l&&null==d)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${c}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(m===s&&null==d)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${n[1]*n[2]*n[3]},
               ${n[2]*n[3]}, ${n[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${c}.0);
        return sampleTexture(${r}, uv);
      }
    `;let f=TH(r);return`
    float ${a}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${o} + depth * ${i} +
          depth2 * ${s} + depth3 + ${f};
      vec2 uv = uvFromFlat(${c}, ${m}, index);
      return sampleTexture(${r}, uv);
    }
  `}(t);case 6:return function(t){let n=t.shapeInfo.logicalShape,r=t.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),{newShape:s,keptDims:i}=at.squeezeShape(n);if(s.length<n.length){let n=TX(t,s);return`
      ${e(n)}
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${a}(${TY(["row","col","depth","depth2","depth3","depth4"],i)});
      }
    `}let o=n[5],l=n[4]*o,u=n[3]*l,p=n[2]*u,d=n[1]*p;if(t.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${d}, ${p}, ${u}, ${l})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${Tj(t)}
      }
    `;let h=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,m=c[0],f=c[1];if(f===d&&null==h)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${p}, ${u}, ${l}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(f===o&&null==h)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${n[1]*n[2]*n[3]*n[4]},
               ${n[2]*n[3]*n[4]},
               ${n[3]*n[4]},
               ${n[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${r}, uv);
      }
    `;let g=TH(r);return`
    float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${d} + col * ${p} + depth * ${u} +
          depth2 * ${l} + depth3 * ${o} + depth4 + ${g};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${r}, uv);
    }
  `}(t);default:throw Error(`${r.length}-D input sampling is not yet supported`)}}(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(n?a+=function(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.logicalShape.length,s=t.logicalShape.length,i=TP(e.shapeInfo.logicalShape,t.logicalShape),o=Tq(s),l=s-a,u,p=["x","y","z","w","u","v"];u=0===a?"":s<2&&i.length>=1?"coords = 0;":i.map(e=>`coords.${p[e+l]} = 0;`).join(`
`);let d="";d=s<2&&a>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${p[t+l]}`).join(", ");let h="return outputValue;",c=1===at.sizeFromShape(e.shapeInfo.logicalShape),m=1===at.sizeFromShape(t.logicalShape);if(1!==a||c||m){if(c&&!m)h=1===s?`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:`
        return vec4(outputValue.x);
      `;else if(i.length){let e=a-2,t=a-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?h="return vec4(outputValue.x);":i.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;return`
    vec4 ${"get"+r+"AtOutCoords"}() {
      ${o} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${r}(${d});
      ${h}
    }
  `}(e,t):a+=function(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&at.arraysEqual(i,s))return`
      float ${a}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let u=Tq(l),p=TP(e.shapeInfo.logicalShape,t.logicalShape),d=l-o,h,c=["x","y","z","w","u","v"];h=0===o?"":l<2&&p.length>=1?"coords = 0;":p.map(e=>`coords.${c[e+d]} = 0;`).join(`
`);let m="";return m=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${c[t+d]}`).join(", "),`
    float ${a}() {
      ${u} coords = getOutputCoords();
      ${h}
      return get${r}(${m});
    }
  `}(e,t)),a})(e,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=t.texShape,o=TR(),l=`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${o.texture2D}(textureSampler, uv).r;
    }
  `,u,p,d=`${o.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${o.varyingFs} vec2 resultUV;
    ${o.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${o.defineSpecialNaN}
    ${o.defineSpecialInf}
    ${o.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${TB}
    ${TW}
    ${TV}
  `;return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return TG();case 1:let r;return 1===(r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)])[0]?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:1===r[1]?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `;case 2:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(at.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;let a=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}(e,t,n);case 3:return function(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}(e,t,n);default:return function(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`
      int b${t} = index / ${i};
      index -= b${t} * ${i};
    `+o,l=`b${t}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${e.length}(${l});
    }
  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),p=`
    void setOutput(vec4 val) {
      ${o.output} = val;
    }
  `):(u=function(e,t,n){switch(e.length){case 0:return TG();case 1:return 1===t[0]?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:1===t[1]?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `;case 2:return at.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:1===e[1]?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:1===e[0]?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `;case 3:return function(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${TM(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let r=TD(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}(e,t,n);case 4:return function(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${TM(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let r=TD(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}(e,t,n);case 5:let r;return r=TD(["r","c","d","d2","d3"],e),`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${r}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `;case 6:let a;return a=TD(["r","c","d","d2","d3","d4"],e),`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${a}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `;default:throw Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),p=`
    void setOutput(float val) {
      ${o.output} = vec4(val, 0, 0, 0);
    }
  `),n.packedInputs&&(d+=TU),[d,l,p,a,u,s,n.userCode].join(`
`)}(n,a={logicalShape:p.shape,texShape:p.texData.texShape,isUniform:!1,isPacked:p.texData.isPacked,flatOffset:null},e),i=N0(t.gl,s),o=t.createProgram(i),e8.get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:i,source:s,webGLProgram:o,inShapeInfos:r,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(t.buildVao(o),Object.assign({program:e,fragmentShader:i,source:s,webGLProgram:o,inShapeInfos:r,outShapeInfo:a},TZ(t,e,o)))}),c=null!=this.activeTimers,m;c&&(m=this.startTimer()),e8.get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(TJ(t.inShapeInfos,n),TJ([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===e8.getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){let a=n[r],{uniform:s,offset:i,shape:o,texShape:l}=t.variablesLocations[r];if(o){let{uniformShape:n}=TK(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,a.texData.texShape[0],a.texData.texShape[1]),null!=s){if(a.isUniform){if(2>at.sizeFromShape(a.shape))e.gl.uniform1f(s,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}continue}null!=a.texData.slice&&null!=i&&e.gl.uniform1i(i,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,s,r)}}let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){let n=at.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let n=0;n<t.program.customUniforms.length;++n){let r=t.program.customUniforms[n],s=t.customUniformLocations[n],i=a[n];if("float"===r.type)e.gl.uniform1fv(s,i);else if("vec2"===r.type)e.gl.uniform2fv(s,i);else if("vec3"===r.type)e.gl.uniform3fv(s,i);else if("vec4"===r.type)e.gl.uniform4fv(s,i);else if("int"===r.type)e.gl.uniform1iv(s,i);else if("ivec2"===r.type)e.gl.uniform2iv(s,i);else if("ivec3"===r.type)e.gl.uniform3iv(s,i);else if("ivec4"===r.type)e.gl.uniform4iv(s,i);else throw Error(`uniform type ${r.type} is not supported yet.`)}e.executeProgram()}(this.gpgpu,h,u,p,r),l.forEach(e=>this.disposeIntermediateTensorInfo(e)),c&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));let f=e8.getNumber("WEBGL_FLUSH_THRESHOLD");if(f>0){let e=at.now();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!e8.getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){let e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(e8.getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=sd(()=>{if(!e8.get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=e8.getBool("DEBUG");e8.set("DEBUG",!1);let t=this.abs(oJ(1e-8)).dataSync()[0];if(e8.set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l=null!=this.activeTimers,u;l&&(u=at.now());let p=t.texShape;if(null==p&&(p=Tb(n,o),t.texShape=p),null!=a){let e=Ty(n),s,i=p[1],d=p[0],h=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!h)&&([i,d]=Nq(p[0],p[1])),s=o?new T5(e,h):new T6(e,h);let c=h?[d,i]:p,m=this.makeTensorInfo(c,r),f=this.texData.get(m.dataId);h?f.usage=EH.PIXELS:f.usage=EH.UPLOAD,f.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),i,d,a);let g=[[d,i]],y=this.runWebGLProgram(s,[m],r,g,!0),b=this.texData.get(y.dataId);t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,e8.get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(t.texture=b.texture,t.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(m),l&&(this.uploadWaitMs+=at.now()-u)}else{let e=this.acquireTexture(p,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1048576*this.numMBBeforeWarning){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*at.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}});e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await hF(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(N2(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),Error("Failed to compile fragment shader.")):Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}=TZ(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=s,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";let{texture:r,height:a,width:s,channels:i}=e,o=aX.backend;if(!o.gpgpu.gl.isTexture(r))throw Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=o.writeTexture(r,t,n,a,s,i);return aX.makeTensorFromDataId(l,t,n,o)}};CC.nextDataId=0;var CE="4.22.0";function C$(){e8.set("WEBGL_FORCE_F16_TEXTURES",!0)}aZ.isBrowser()&&sw("webgl",()=>new CC,2);var CA={forceHalfFloat:C$},CF=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,CR=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=hR.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=TQ(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},CD=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`,CM=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=hR.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=TQ(a);let s="";if(r){if(0===a||1===at.sizeFromShape(this.outputShape))s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${Tq(a)} coords = getOutputCoords();
        `,1===a)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let e=Co("coords",a);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${e[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${e[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function CO(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function CL(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=CO({inputs:{x:r},backend:n}),l=CO({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var Cz="return (a < 0.) ? b * a : a;",CP=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,CB="return (a < 0.) ? b * a : a;",CW=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,CV="if (isnan(x)) return x;";function CU({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let i,{x:o}=a,l=r||o.dtype;if(s.shouldExecuteOnCPU([o])&&null!=n){let e=n(s.texData.get(o.dataId).values,l);return s.makeTensorInfo(o.shape,l,e)}return i=e8.getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new CI(o.shape,t):new Cm(o.shape,e),s.runWebGLProgram(i,[o],l)}}function CG({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let l,{a:u,b:p}=i;if(r&&"complex64"===u.dtype){let t=o.texData.get(u.dataId),n=o.texData.get(p.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{let[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:p.shape},i=new CR(e,u.shape,p.shape);return o.runWebGLProgram(i,[a,s],aL(n.dtype,r.dtype))}),s=CL({inputs:{real:r,imag:a},backend:o});return o.disposeIntermediateTensorInfo(r),o.disposeIntermediateTensorInfo(a),s}let d=s||aL(u.dtype,p.dtype);if(("string"===u.dtype||"string"===p.dtype||o.shouldExecuteOnCPU([u,p]))&&null!=a){let e=o.texData.get(u.dataId).values,t=o.texData.get(p.dataId).values,n="string"===u.dtype?hR.fromUint8ToStringArray(e):e,r="string"===u.dtype?hR.fromUint8ToStringArray(t):t,[s,i]=a(u.shape,p.shape,n,r,d),l=o.makeTensorInfo(i,d);return o.texData.get(l.dataId).values=s,l}return l=e8.getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new CM(t,u.shape,p.shape,n):new CR(e,u.shape,p.shape),o.runWebGLProgram(l,[u,p],d)}}function CH(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?Cw:Cy;if("elu"===e)return t?Cv:"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?Ck:Cb;if("prelu"===e)return t?CW:CB;if("leakyrelu"===e)return t?CP:Cz;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var Cj=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=TQ(this.outputShape.length);let u=Math.ceil((r?e[1]:e[2])/2),p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],h="",c="";i&&(h=o?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:`vec4 activation(vec4 x) {
          ${i}
        }`,c="result = activation(result);"),s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let m="rc.x",f="rc.x";e[0]<t[0]?m=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(f=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${h}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${m};
        int batchB = ${f};
        for (int i = 0; i < ${u}; i++) {
          vec4 a = getMatrixA(batchA, ${r?"i * 2, rc.y":"rc.y, i * 2"});
          vec4 b = getMatrixB(batchB, ${a?"rc.z, i * 2":"i * 2, rc.z"});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${p[0]} * ${d[0]});
          result += (${p[1]} * ${d[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${s?"result += getBiasAtOutCoords();":""}

        ${c}

        setOutput(result);
      }
    `}},Cq={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},CK=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=hR.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},CX="return a * b;";function CY(e){let t,{inputs:n,backend:r}=e,{a,b:s}=n,i=hR.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),n=new CK(Cq.REAL,a.shape,s.shape),i=new CK(Cq.IMAG,a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=r.runWebGLProgram(n,o,"float32"),u=r.runWebGLProgram(i,o,"float32"),p=CL({inputs:{real:l,imag:u},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),p}if(r.shouldExecuteOnCPU([a,s])){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),[n,o]=_U(a.shape,s.shape,e.values,t.values,i),l=r.makeTensorInfo(o,i);return r.texData.get(l.dataId).values=n,l}return t=e8.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CM(CX,a.shape,s.shape):new CR(CX,a.shape,s.shape),r.runWebGLProgram(t,[a,s],i)}function CZ(e){let t,n,r,a,{inputs:s,backend:i,attrs:o}=e,{x:l}=s,{shape:u}=o,p=at.sizeFromShape(l.shape),d=at.inferFromImplicitShape(u,p),h=at.sizeFromShape(d);at.assert(p===h,()=>`The new shape (${d}) has ${h} elements and the old shape (${l.shape}) has ${p} elements. The new shape and old shape must have the same number of elements.`);let c=i.texData.get(l.dataId);return!c.isPacked||Tx(l.shape,d)||null!==c.texture&&Tx(c.shape,d)?(i.incRef(l.dataId),{dataId:l.dataId,shape:d,dtype:l.dtype}):(t=[Tf(l.shape),...Tg(l.shape)],n={dtype:l.dtype,shape:t,dataId:l.dataId},r=new Cu([Tf(d),...Tg(d)],t),{dataId:(a=i.runWebGLProgram(r,[n],l.dtype,[t],!0)).dataId,shape:d,dtype:a.dtype})}var CJ=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${at.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${1===o}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${2===o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${3===o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},CQ=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),p=n%4,d=`
      if (${"sum"===t}) {
        sumValue += dot(values, ones);
      } else if (${"prod"===t}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${"min"===t} || ${"max"===t}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,h="vec4";"all"===t?(i="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,h="bvec4"):"any"===t&&(i="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,h="bvec4");let c="";a%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${1===p}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${2===p}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${3===p}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function C0(e,t,n,r){let a=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=hR.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape),s=e;for(let i=0;i<a.length;i++){let{inSize:o,windowSize:l,outSize:u}=a[i],p,d;p="mean"===n?0===i?new CJ({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new CJ({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new CQ({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),d=s,s=r.runWebGLProgram(p,[s],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return s}var C1=class{constructor(e,t){this.variableNames=["A"];let n=Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;let r=Tq(this.rank),a=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}},C2=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=Tq(this.rank),a=Ci("rc",this.rank),s=Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function C3(e,t,n){let r=e8.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new C2(e.shape,t):new C1(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function C4(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){let a=e.shape.length,s=at.parseAxisParam(t,e.shape),i=s,o=hR.getAxesPermutation(i,a),l=null!=o,u=e;l&&(u=C3(e,o,r),i=hR.getInnerMostAxes(i.length,a)),hR.assertAxesAreInnerMostDims("sum",i,a);let[p,d]=hR.computeOutAndReduceShapes(u.shape,i),h=p;n&&(h=hR.expandShapeToKeepDim(p,s));let c=at.sizeFromShape(d),m=CZ({inputs:{x:u},attrs:{shape:[at.sizeFromShape(e.shape)/c,c]},backend:r}),f=C0(m,az(e.dtype),"sum",r),g=CZ({inputs:{x:f},attrs:{shape:h},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(f),l&&r.disposeIntermediateTensorInfo(u),g}(a,s,i,n)}function C6(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{perm:i}=a,o=Array(s.shape.length);for(let e=0;e<o.length;e++)o[e]=s.shape[i[e]];if(r.shouldExecuteOnCPU([s])){let e=Ca(r.texData.get(s.dataId).values,s.shape,s.dtype,i,o);t=r.makeTensorInfo(o,s.dtype),r.texData.get(t.dataId).values=e}else t=C3(s,i,r);return t}function C5({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,p=t.shape.length,d=n?e.shape[u-2]:e.shape[u-1],h=r?t.shape[p-1]:t.shape[p-2],c=n?e.shape[u-1]:e.shape[u-2],m=r?t.shape[p-2]:t.shape[p-1],f=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=at.sizeFromShape(f),b=at.sizeFromShape(g),x=oC.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,m]);at.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);let v=n?[y,d,c]:[y,c,d],w=r?[b,m,h]:[b,h,m],k=CZ({inputs:{x:e},backend:a,attrs:{shape:v}}),I=CZ({inputs:{x:t},backend:a,attrs:{shape:w}}),S=[k,I],N=Math.max(y,b),T=n?k.shape[1]:k.shape[2],_=null!=s,C=null!=i,E="leakyrelu"===l,$=null!=l?CH(l,!0):null,A=_||C||E||null!=$,F;if((1===c||1===m)&&T>1e3&&!1===A){let e=k,t=I;n&&(e=C6({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),S.push(e)),r&&(t=C6({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),S.push(t));let s=1!==m,i=1===m,o=e;s&&(o=CZ({inputs:{x:e},backend:a,attrs:{shape:[N,T,1]}}),S.push(o));let l=1===m?2:1,u=t;i&&(u=CZ({inputs:{x:t},backend:a,attrs:{shape:[N,1,T]}}),S.push(u));let p=CY({inputs:{a:o,b:u},backend:a});F=C4({inputs:{x:p},backend:a,attrs:{axis:l,keepDims:!0}}),S.push(p)}else{let l=aL(e.dtype,t.dtype),u=new Cj(v,w,[N,c,m],n,r,_,$,C,E),p=[k,I];if(null!=s&&p.push(s),C&&p.push(i),E){let e=a.makeTensorInfo([],"float32",at.createScalarValue(o,"float32"));p.push(e),S.push(e)}F=a.runWebGLProgram(u,p,l)}let R=CZ({inputs:{x:F},backend:a,attrs:{shape:x}});for(let e of(S.push(F),S))a.disposeIntermediateTensorInfo(e);return R}var C8="return abs(x);",C7=CU({opSnippet:Cf+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`}),C9=CU({opSnippet:Cf+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`}),Ee="return a + b;",Et=CG({opSnippet:Ee,packedOpSnippet:Ee,supportsComplex:!0,cpuKernelImpl:_w}),En=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});let r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}},Er=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});let r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}},Ea=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};
          float candidate = getA(batch, inIdx);
          if (candidate ${"max"===t?">":"<"} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},Es=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,at.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let a=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");let s=this.outputShape,i=s.length,o=Tq(i),l=Co("coords",i),u,p;if(1===a){let e=Tq(p=i+1);u=`
        ${e} sourceLocR = ${e}(${l.join()}, 0);
        ++${l[i-1]};
        ${e} sourceLocG = ${e}(${l.join()}, 0);
        ++${l[i-2]};
        ${e} sourceLocA = ${e}(${l.join()}, 0);
        --${l[i-1]};
        ${e} sourceLocB = ${e}(${l.join()}, 0);
        --${l[i-2]};`}else p=i,u=`
        ${o} sourceLocR = coords;
        ++${l[i-1]};
        ${o} sourceLocG = coords;
        ++${l[i-2]};
        ${o} sourceLocA = coords;
        --${l[i-1]};
        ${o} sourceLocB = coords;
        --${l[i-2]};`;let d=["x","y","z","w","u","v"].slice(0,p),h="."+d[p-1],c=d.map(e=>"int "+e),m=Co("sourceLocR",p-1).concat("inIdx.r"),f=Co("sourceLocG",p-1).concat("inIdx.g"),g=Co("sourceLocB",p-1).concat("inIdx.b"),y=Co("sourceLocA",p-1).concat("inIdx.a"),b="max"===n?"greaterThan":"lessThan",x=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()})));`,v=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${f.join()}) : 0.,
            hasNextRow ? getAChannel(${g.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,w=r?"":`
      float getBestIndicesAChannel(${c.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${c.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${w}
      void main() {
        ${o} coords = getOutputCoords();
        bool hasNextCol = ${l[i-1]} < ${s[i-1]-1};
        bool hasNextRow = ${l[i-2]} < ${s[i-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${v};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${x}
          vec4 candidate = ${v};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function Ei(e,t,n,r){let a=[n];if(hR.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!e8.getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],s=e.texData.get(t.dataId),i=null!==s&&s.isPacked,o=t;i&&n.push(o=e.unpackTensor(t));let[l,u]=hR.computeOutAndReduceShapes(o.shape,a),p=CZ({inputs:{x:o},backend:e,attrs:{shape:[-1,at.sizeFromShape(u)]}});n.push(p);let d=function e(t,n,r,a=null){let s=n.shape[0],i=n.shape[1];null!=a&&(s=a.shape[0],i=a.shape[1]);let o=hR.computeOptimalWindowSize(i),l=new Ea({windowSize:o,inSize:i,batchSize:s,outSize:Math.ceil(i/o)},r,null==a),u=[n];null!=a&&u.push(a);let p=t.runWebGLProgram(l,u,"int32");if(1===p.shape[1])return p;let d=e(t,n,r,p);return t.disposeIntermediateTensorInfo(p),d}(e,p,r);n.push(d);let h=CZ({inputs:{x:d},backend:e,attrs:{shape:l}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),h}return function e(t,n,r,a=null){let s=null!=a?a.shape:n.shape,i=s[s.length-1],o=new Es(s,hR.computeOptimalWindowSize(i),r,null==a),l=null==a?[n]:[n,a],u=t.runWebGLProgram(o,l,"int32");if(u.shape.length===n.shape.length){let a=e(t,n,r,u);return t.disposeIntermediateTensorInfo(u),a}return u}(e,t,r)}var Eo=CU({opSnippet:Cf+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`}),El=CU({opSnippet:Cf+"return log(x + sqrt(x * x + 1.0));"}),Eu=CU({opSnippet:Cf+`
  return atan(x);
`}),Ep=CG({opSnippet:CF+`
  return atan(a, b);
`,packedOpSnippet:`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+CD+`
  return result;
`}),Ed=CU({opSnippet:Cf+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`}),Eh=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let m="avg"===t,f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(m||(y="-1.0 / 1e-20"),n){this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${h}, ${c});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?a?f:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");let x=4*Math.floor(s/4),v=s%4,w=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${h}, ${c});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${x}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${w}
          }

          int xC = xCCorner + ${x};
          if (${1===v}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${w}
          } else if (${2===v}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${w}
          } else if (${3===v}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${w}
          }
        }
        setOutput(${b});
      }
    `}},Ec=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,p=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,c=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,x="0.0";if(b||(x="-1.0 / 1e-20"),n){this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${f}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${h};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${c};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");let w=4*Math.floor(s/4),k=s%4,I=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${f}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${w}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${I}
            }

            int xC = xCCorner + ${w};
            if (${1===k}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${I}
            } else if (${2===k}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${I}
            } else if (${3===k}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${I}
            }
          }
        }
        setOutput(${v});
      }
    `}},Em=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,p=l-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${u}, ${p});
      const float avgMultiplier = float(${1/(t*n)});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Ef=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,c=p-1-e.padInfo.front,m=d-1-e.padInfo.top,f=h-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${m}, ${f});
      const float avgMultiplier = float(${1/(t*n*r)});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Eg=class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],hR.assertAndGetBroadcastShape(e,t),hR.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(hR.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(hR.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},Ey=class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],hR.assertAndGetBroadcastShape(e,t),hR.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(hR.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(hR.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},Eb=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=Tq(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Ex.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank),r,a=e.map((e,t)=>`sourceLoc.${Ex[t]} = start[${t}] + coords.${Ex[t]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${n}));
      }
    `}},Ex=["x","y","z","w","u","v"],Ev=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=Tq(this.rank),n=Co("coords",this.rank),r=Co("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`
      result.x = ${s};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${s};
        --${r[this.rank-1]};
      }
    `,o=1===this.rank?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${s};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function Ew(e){let t,n,r,a,s,{inputs:i,backend:o,attrs:l}=e,{x:u}=i,{begin:p,size:d}=l,[h,c]=hd.parseSliceParams(u,p,d);if(hd.assertParamsValid(u,h,c),0===at.sizeFromShape(c))return o.makeTensorInfo(c,u.dtype,[]);if(o.shouldExecuteOnCPU([u])||"string"===u.dtype){let e=_1(o.texData.get(u.dataId).values,h,c,u.shape,u.dtype);return o.makeTensorInfo(c,u.dtype,e)}let{isPacked:m}=o.texData.get(u.dataId),f=hd.isSliceContinous(u.shape,h,c);if(m||!f){let e=e8.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ev(c):new Eb(c),t=[h];return o.runWebGLProgram(e,[u],u.dtype,t)}return o.uploadToGPU(u.dataId),t=o.texData.get(u.dataId),n=o.makeTensorInfo(c,u.dtype),Object.assign(r=o.texData.get(n.dataId),t),r.refCount=1,r.shape=c,r.dtype=u.dtype,a=hd.computeFlatOffset(h,at.computeStrides(u.shape)),t.slice&&(a+=t.slice.flatOffset),r.slice={flatOffset:a,origDataId:t.slice&&t.slice.origDataId||u.dataId},s=o.dataRefCount.get(r.slice.origDataId)||1,o.dataRefCount.set(r.slice.origDataId,s+1),n}var Ek=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,EI=`
  return float(int(a.r) & int(b.r));
`,ES=CG({opSnippet:"return float(a != b);",cpuKernelImpl:_H,dtype:"bool"});function EN(e){let{inputs:t,backend:n}=e,{input:r}=t;return CO({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var ET="return ceil(x);",E_=CU({opSnippet:ET,packedOpSnippet:ET,cpuKernelImpl:_T}),EC=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},EE=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}},E$=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function EA(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var EF=class{constructor(e){this.outputShape=[],this.outputShape=hR.computeOutShape(e,1),this.variableNames=e.map((e,t)=>`T${t}`);let t=Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},ER=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=hR.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=Tq(r),s=Co("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>`T${t}`);let o=Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];let l=i[t],u=i.slice(-2),p=i.join(),d=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${p}), vec2(${u.join()}));
        }`;for(let e=1;e<o.length;e++){let t=o[e-1];d+=`
        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {
          return getChannel(
            getT${e}(${ED(i,l,t)}),
            vec2(${ED(u,l,t)}));
        }`}let h=o.length,c=o[o.length-1];d+=`
        return getChannel(
          getT${h}(${ED(i,l,c)}),
          vec2(${ED(u,l,c)}));`,this.userCode=`
      float getValue(${i.map(e=>"int "+e)}) {
        ${d}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[r-1]} = ${s[r-1]} + 1;
        if (${s[r-1]} < ${n[r-1]}) {
          result.g = getValue(${s});
        }

        ${s[r-2]} = ${s[r-2]} + 1;
        if (${s[r-2]} < ${n[r-2]}) {
          result.a = getValue(${s});
        }

        ${s[r-1]} = ${s[r-1]} - 1;
        if (${s[r-2]} < ${n[r-2]} &&
            ${s[r-1]} < ${n[r-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function ED(e,t,n){let r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function EM(e){let{inputs:t,backend:n}=e,{input:r}=t;return CO({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}function EO(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=at.parseAxisParam(a,t[0].shape)[0],i=t.map(e=>e.shape);hR.assertParamsConsistent(i,s);let o=hR.computeOutShape(t.map(e=>e.shape),s);if(0===at.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(e=>at.sizeFromShape(e.shape)>0);return 1===l.length?CO({inputs:{x:l[0]},backend:n}):function e(t,n,r){let a,s=t[0].dtype;if("complex64"===s){let a=t.map(e=>EN({inputs:{input:e},backend:r})),s=t.map(e=>EM({inputs:{input:e},backend:r})),i=e(a,n,r),o=e(s,n,r),l=CL({inputs:{real:i,imag:o},backend:r});return a.forEach(e=>r.disposeIntermediateTensorInfo(e)),s.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}let i=r.shouldExecuteOnCPU(t);if("string"===s&&(i=!0),i){let e=t.map(e=>{let t=[-1,at.sizeFromShape(e.shape.slice(n))];return CZ({inputs:{x:e},backend:r,attrs:{shape:t}})}),a=__(e.map(e=>({vals:r.readSync(e.dataId),shape:e.shape})),hR.computeOutShape(e.map(e=>e.shape),1),s,1===e[0].shape[0]),i=hR.computeOutShape(t.map(e=>e.shape),n),o=r.makeTensorInfo(i,s,a);return e.forEach(e=>r.disposeIntermediateTensorInfo(e)),o}let o=t.filter(e=>at.sizeFromShape(e.shape)>0),l=e8.getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(1===o.length){let e=l?new Cm(t[0].shape,Cx):new CI(t[0].shape,Cx);return r.runWebGLProgram(e,t,s)}let u=e8.getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>u){let t=[];for(let a=0;a<o.length;a+=u){let s=o.slice(a,a+u);t.push(e(s,n,r))}let a=e(t,n,r);for(let e of t)r.disposeIntermediateTensorInfo(e);return a}if(l){let e=new ER(o.map(e=>e.shape),n);return r.runWebGLProgram(e,o,s)}let{tensors2D:p,outShape:d}=(a=hR.computeOutShape(o.map(e=>e.shape),n),{tensors2D:o.map(e=>CZ({inputs:{x:e},attrs:{shape:[-1,at.sizeFromShape(e.shape.slice(n))]},backend:r})),outShape:a}),h=new EF(p.map(e=>e.shape)),c=r.runWebGLProgram(h,p,s);p.forEach(e=>r.disposeIntermediateTensorInfo(e));let m=CZ({inputs:{x:c},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(c),m}(l,s,n)}var EL=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,p=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,c=4*Math.floor(e.inChannels/4),m=e.inChannels%4,f="channelsLast"===e.dataFormat,g="",y="";n&&(g=r?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:`
          float activation(float x) {
            ${n}
          }
        `,y="result = activation(result);"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${g}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${f?3:1}];

        ivec2 xRCCorner =
            ivec2(coords[${f?1:2}], coords[${f?2:3}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${h}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${c}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${f}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${1===m}) {

              if (${f}) {
                dotProd +=
                    getX(batch, xR, xC, ${c}) *
                    getW(wR, wC, ${c}, d2);
              } else {
                dotProd +=
                    getX(batch, ${c}, xR, xC) *
                    getW(wR, wC, ${c}, d2);
              }

            } else if (${2===m}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2)
              );

              if (${f}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${3===m}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2),
                getW(wR, wC, ${c} + 2, d2)
              );

              if (${f}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1),
                  getX(batch, xR, xC, ${c} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC),
                  getX(batch, ${c} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${y}
        setOutput(result);
      }
    `}},Ez=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.filterDepth,d=e.filterHeight,h=e.filterWidth,c=4*Math.floor(e.inChannels/4),m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${c}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${1===m}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${c}) *
                  getW(wF, wR, wC, ${c}, d2);
              } else if (${2===m}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${3===m}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1),
                  getX(batch, xF, xR, xC, ${c} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2),
                  getW(wF, wR, wC, ${c} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},EP=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=TQ(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,p=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<u;e++)p+=`
           vec4 xTexelC${2*e};
           int xTexelC${2*e}Ready;
           vec4 xTexelC${2*e+1};
           int xTexelC${2*e+1}Ready;
           vec4 xC${e};`;p+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let e=0;e<u;e++)p+=`
           xTexelC${2*e} = vec4(0.0);
           xTexelC${2*e}Ready = 0;
           xTexelC${2*e+1} = vec4(0.0);
           xTexelC${2*e+1}Ready = 0;
           xC${e} = vec4(0.0);`;p+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let t=0;t<(u+1)/2;t++){let n=2*t;if(p+=`
           xC = xCCorner + ${n*o};
           `,1===i){if(n<u&&(s%2==1?(p+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {
                   xTexelC${n} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${n}.zw = vec2(0.0);
                   }
                   xTexelC${n}Ready = 1;
                 }
               `,1===o&&n>0?p+=`
                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);
                 `:p+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);
                   } else {
                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);
                   }
                   `):p+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {
                   xTexelC${n} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${n}.zw = vec2(0.0);
                   }
                   xTexelC${n}Ready = 1;
                 }

                 xC${n} = xTexelC${n};
                 `,n+1<u)){let e=s%2==0?at.nearestLargerEven(o):o;o%2==0&&s%2==1||o%2!=0&&s%2!=1?(p+=`
                   xCOffset = xC + imod(pads[1], 2) + ${e};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {
                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${n+1}.zw = vec2(0.0);
                     }
                     xTexelC${n+1}Ready = 1;
                   }
                   `,o>1?p+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);
                     } else {
                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);
                     }
                     `:p+=`
                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);
                     `):1===e?p+=`
                     xC${n+1} = xTexelC${n};
                     `:p+=`
                     xCOffset = xC + ${e};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {
                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${n+1}.zw = vec2(0.0);
                       }
                       xTexelC${n+1}Ready = 1;
                     }

                     xC${n+1} = xTexelC${n+1};
                     `}}else n<u&&(s%2==1?(p+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {
                   xTexelC${n} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${n}.zw = vec2(0.0);
                   }
                   xTexelC${n}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {
                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${n+1}.zw = vec2(0.0);
                   }
                   xTexelC${n+1}Ready = 1;
                 }

                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);
               `,n+1<u&&(p+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);
                 `)):(p+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {
                   xTexelC${n} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${n}.zw = vec2(0.0);
                   }
                   xTexelC${n}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {
                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${n+1}.zw = vec2(0.);
                   }
                   xTexelC${n+1}Ready = 1;
                 }

                 xC${n} = vec4(
                   xTexelC${n}.xy, xTexelC${n+1}.xy);
               `,n+1<u&&(p+=`
                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);
                 `)));n<u&&(p+=`
             wTexel = getW(r, ${n}, d1, d2);
             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,n+1<u&&(p+=`
               wTexel = getW(r, ${n+1}, d1, d2);
               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}p+=`
     }
   
     }
   
     }
   `;let d="",h="";n&&(d=r?`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:a?`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:`vec4 activation(vec4 x) {
           ${n}
         }`,h="result = activation(result);"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${d}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${p}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${t?"result += getBiasAtOutCoords();":""}
         ${h}
         setOutput(result);
       }
     `}},EB=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=TQ(this.outputShape.length);let{dataFormat:n}=t,r=TR(),a="channelsLast"===n,s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`
          blockIndex = rc.z + ${t};
          pos = rc.y + ${e};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${r.output} = result;
      }
    `}};function EW(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function EV({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=e.shape,u=r.texData.get(e.dataId),p=n.inChannels,d=l[0]*l[1]*l[2],h=n.outChannels,c="channelsLast"===n.dataFormat,m,f=[];if(null!=s){let e=EW(s.shape,c);null!=e&&(s=CZ({inputs:{x:s},backend:r,attrs:{shape:e}}),f.push(s))}if(null!=a){let e=EW(a.shape,c);null!=e&&(a=CZ({inputs:{x:a},backend:r,attrs:{shape:e}}),f.push(a))}if(!((1===d||1===h)&&p>1e3)&&u.isPacked&&c&&null!=u.texture&&l[2]%2!=0&&at.arraysEqual(u.shape.slice(-3),l.slice(-3))){let p=l[0]*l[1]*(l[2]+1),d={dataId:e.dataId,shape:[1,p,n.inChannels],dtype:e.dtype},h=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,at.assert(Tx(u.shape,d.shape),()=>`packed reshape ${u.shape} to ${d.shape} isn't free`);let c=CZ({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});f.push(c);let g=C5({a:d,b:c,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),y=r.texData.get(g.dataId);at.assert(y.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=h,y.shape=n.outShape,(m=CO({inputs:{x:g},backend:r})).shape=n.outShape,f.push(g)}else{let l=n.outHeight*n.outWidth,u=CZ({inputs:{x:e},backend:r,attrs:{shape:c?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),p=CZ({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=C5({a:c?u:p,b:c?p:u,transposeA:!c,transposeB:!1,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});m=CZ({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),f.push(u),f.push(p),f.push(d)}for(let e of f)r.disposeIntermediateTensorInfo(e);return m}function EU({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:p,outWidth:d,outHeight:h,dataFormat:c}=n,m="channelsLast"===c,f=l*u*p,g=h*d,y=[n.batchSize,f,g],b=[];if(null!=s){let e=EW(s.shape,m);null!=e&&(s=CZ({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}if(null!=a){let e=EW(a.shape,m);null!=e&&(a=CZ({inputs:{x:a},backend:r,attrs:{shape:e}}),b.push(a))}let x=CZ({inputs:{x:t},backend:r,attrs:{shape:[1,f,at.sizeFromShape(t.shape)/f]}});b.push(x);let v=new EB(y,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(v,[e],"float32",w),I=CZ({inputs:{x:k},backend:r,attrs:{shape:y}});b.push(k),b.push(I);let S=null!=a,N=null!=s,T="leakyrelu"===o,_=o?CH(o,!0):null,C=new Cj(m?I.shape:x.shape,m?x.shape:I.shape,m?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,S,_,N,T),E=m?[I,x]:[x,I];if(a&&E.push(a),N&&E.push(s),T){let e=r.makeTensorInfo([],"float32",at.createScalarValue(i,"float32"));E.push(e),b.push(e)}let $=r.runWebGLProgram(C,E,"float32"),A=CZ({inputs:{x:$},backend:r,attrs:{shape:n.outShape}});for(let e of(b.push($),b))r.disposeIntermediateTensorInfo(e);return A}var EG,EH,Ej,Eq,EK,EX,EY=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${s?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},EZ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${s?3:1}];

        ivec2 dyCorner = ivec2(coords[${s?1:2}], coords[${s?2:3}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},EJ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${a};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},EQ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},E0=class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=TQ(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            int wCPerm = ${n} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}},E1=CU({opSnippet:CV+`
  return cos(x);
`,packedOpSnippet:`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${CD}
  return result;
`}),E2=CU({opSnippet:`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`}),E3=class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[p,d]=n;this.outputShape=[u,p,d,l];let[h,c]=[`${i-1}.0`,`${o-1}.0`],[m,f,g]=p>1?[`${(i-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[y,b,x]=d>1?[`${(o-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${c} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${c}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${f};
        float width_scale = ${b};

        float in_y = ${g};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${x};
        if( in_x < 0.0 || in_x > ${c} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${"bilinear"===r?1:0} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};!function(e){e.Prod="*",e.Sum="+"}(EX||(EX={}));var E4=class{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===EX.Prod?"1.0":"0.0",i=n?s:`getX(${E6(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=r?`end != ${o-1}`:"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Tq(a)} coords = getOutputCoords();
        int end = ${E5(a,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${u};
          ${E5(a,"coords",this.op)} = idx;
          val ${this.op}= getX(${E6(a,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function E6(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function E5(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function E8(e,t,n,r,a,s){let i=t.shape.length,o=hR.getAxesPermutation([r],i),l=t;null!=o&&(l=C6({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=hR.getInnerMostAxes(1,i)[0];if(u!==i-1)throw Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let p=l.shape[u],d=CO({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(p))-1;t++){let r=new E4(e,l.shape,!1,s),a=[[t]],i=d;d=n.runWebGLProgram(r,[d],d.dtype,a),n.disposeIntermediateTensorInfo(i)}if(a){let t=new E4(e,l.shape,a,s),r=d;d=n.runWebGLProgram(t,[d],d.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){let e=C6({inputs:{x:d},backend:n,attrs:{perm:hR.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(l),e}return d}var E7=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}},E9=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=TQ(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=r?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${u}
        setOutput(result);
      }
    `}},$e=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=TQ(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,p=e.filterWidth,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<p;e++)d+=`
          vec4 xTexelC${2*e};
          int xTexelC${2*e}Ready;
          vec4 xTexelC${2*e+1};
          int xTexelC${2*e+1}Ready;
          vec4 xC${e};`;d+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let e=0;e<p;e++)d+=`
          xTexelC${2*e} = vec4(0.0);
          xTexelC${2*e}Ready = 0;
          xTexelC${2*e+1} = vec4(0.0);
          xTexelC${2*e+1}Ready = 0;
          xC${e} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let e=0;e<(p+1)/2;e++){let t=2*e;if(d+=`
          xC = xCCorner + ${t*l};
          `,1===o){if(t<p&&(i%2==1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }
              `,1===l&&t>0?d+=`
                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);
                  } else {
                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xC${t} = xTexelC${t};
                `,t+1<p)){let e=i%2==0?at.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${e};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${t+1}.zw = vec2(0.0);
                    }
                    xTexelC${t+1}Ready = 1;
                  }
                  `,l>1?d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);
                    } else {
                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);
                    }
                    `:d+=`
                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);
                    `):1===e?d+=`
                    xC${t+1} = xTexelC${t};
                    `:d+=`
                    xCOffset = xC + ${e};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${t+1}.zw = vec2(0.0);
                      }
                      xTexelC${t+1}Ready = 1;
                    }

                    xC${t+1} = xTexelC${t+1};
                    `}}else t<p&&(i%2==1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.0);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
              `,t+1<p&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(
                  xTexelC${t}.xy, xTexelC${t+1}.xy);
              `,t+1<p&&(d+=`
                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
                `)));t<p&&(d+=`
            wTexel = getW(r, ${t}, d1, q);
            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);
          `,t+1<p&&(d+=`
              wTexel = getW(r, ${t+1}, d1, q);
              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  
      }
    `;let h="",c="";n&&(h=r?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:`vec4 activation(vec4 x) {
          ${n}
        }`,c="result = activation(result);"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${t?"result += getBiasAtOutCoords();":""}
        ${c}
        setOutput(result);
      }
    `}},$t=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},$n=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}},$r=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}},$a=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:p,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${s});
      const ivec2 pads = ivec2(${p}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}},$s=CU({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`}),$i=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,$o=CG({opSnippet:"return float(a == b);",packedOpSnippet:`
  return vec4(equal(a, b));
`,dtype:"bool",cpuKernelImpl:_C}),$l=CU({opSnippet:`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${hR.ERF_P};
  float a1 = ${hR.ERF_A1};
  float a2 = ${hR.ERF_A2};
  float a3 = ${hR.ERF_A3};
  float a4 = ${hR.ERF_A4};
  float a5 = ${hR.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`}),$u=CU({opSnippet:CV+`
  return exp(x);
`,packedOpSnippet:`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:_E,dtype:"float32"});function $p(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(at.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),CZ({inputs:{x:s},backend:r,attrs:{shape:o}})}var $d="return exp(x) - 1.0;",$h=CU({opSnippet:$d,packedOpSnippet:$d,cpuKernelImpl:_$}),$c=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0",i;if("real"===e)i="return real * expR - imag * expI;";else if("imag"===e)i="return real * expI + imag * expR;";else throw Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${a};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function $m(e,t,n){let r=n.texData.get(e.dataId),a=at.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=CZ({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,l=new $c("real",o,t),u=new $c("imag",o,t),p=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],d=n.runWebGLProgram(l,p,"float32"),h=n.runWebGLProgram(u,p,"float32"),c=CL({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);let m=CZ({inputs:{x:c},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),m}var $f=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function $g(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if("string"===(s=s||at.inferDtype(a))){let e=at.getArrayFromDType(s,at.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new $f(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var $y,$b=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},$x="return floor(x);",$v=CU({opSnippet:$x,packedOpSnippet:$x,cpuKernelImpl:_A}),$w=CG({opSnippet:`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,packedOpSnippet:`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dtype:"int32"}),$k=class{constructor(e){this.variableNames=["A"];let t=TR(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},$I=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=TR(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},$S=e8.getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),$N=class{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;let a=Tq(n.length),s=`
    int index;`;for(let e=0;e<this.sliceDim;e++)s+=`
          index = round(getIndices(coords[0], ${e}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};
          flattenIndex += index * ${this.strides[e]};`;this.userCode=`
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}},$T=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=Tq(this.rank),r=function(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e,0);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}};function $_(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=at.parseAxisParam(i,a.shape)[0];if(e8.get("DEBUG")){let e=n.readSync(s.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){let r=e[n];at.assert(r<=t-1&&r>=0,()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`)}}let u=hR.segment_util.collectGatherOpShapeInfo(a,s,l,o),p=at.sizeFromShape(s.shape),d=[],h=CZ({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=CZ({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,p/u.batchSize]}});d.push(h),d.push(c);let m=[u.batchSize,u.outerSize,p/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=n.bufferSync(c),t=_R(n.bufferSync(h),e,m);return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(u.outputShape,t.dtype,t.values)}let f=new $T(h.shape,m),g=n.runWebGLProgram(f,[h,c],h.dtype);d.push(g);let y=CZ({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}var $C=CG({opSnippet:"return float(a > b);",packedOpSnippet:`
  return vec4(greaterThan(a, b));
`,cpuKernelImpl:_D,dtype:"bool"}),$E=CG({opSnippet:"return float(a >= b);",packedOpSnippet:`
  return vec4(greaterThanEqual(a, b));
`,dtype:"bool",cpuKernelImpl:_M}),$$=CU({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),$A=CU({opSnippet:"return float(isinf(x));",dtype:"bool"}),$F=CU({opSnippet:"return float(isnan(x));",dtype:"bool"}),$R=CG({opSnippet:"return float(a < b);",packedOpSnippet:`
  return vec4(lessThan(a, b));
`,cpuKernelImpl:_O,dtype:"bool"}),$D=CG({opSnippet:"return float(a <= b);",packedOpSnippet:`
  return vec4(lessThanEqual(a, b));
`,cpuKernelImpl:_L,dtype:"bool"}),$M=CU({opSnippet:CV+`
  return x < 0.0 ? 0./0. : log(x);
`,packedOpSnippet:`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cpuKernelImpl:_P}),$O=CU({opSnippet:CV+`
  return log(1.0 + x);
`}),$L=CG({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dtype:"bool"}),$z=CU({opSnippet:"return float(!(x >= 1.0));"}),$P=CG({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dtype:"bool"}),$B=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=e[3]-1;this.outputShape=e;let i,o=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${o})`:1===a?`1.0/(${o})`:`exp(log(${o}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${t}; j <= ${t}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${s}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}},$W=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=e[3]-1;this.outputShape=e;let i,o=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${o})`:1===a?`1.0/(${o})`:`exp(log(${o}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${t};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${t}; j <= ${t}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}},$V=class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${a})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};function $U(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{reductionIndices:i,keepDims:o}=a,l=s.shape.length,u=at.parseAxisParam(i,s.shape),p=u,d=hR.getAxesPermutation(p,l),h=null!=d,c=r.shouldExecuteOnCPU([s]),m=s;if(h){if(c){let e=r.texData.get(m.dataId).values,t=Array(l);for(let e=0;e<t.length;e++)t[e]=s.shape[d[e]];let n=Ca(e,s.shape,s.dtype,d,t);m=r.makeTensorInfo(t,s.dtype),r.texData.get(m.dataId).values=n}else m=C3(s,d,r);p=hR.getInnerMostAxes(p.length,l)}hR.assertAxesAreInnerMostDims("max",p,l);let[f,g]=hR.computeOutAndReduceShapes(m.shape,p),y=f;if(o&&(y=hR.expandShapeToKeepDim(f,u)),c){let e=_B(r.texData.get(m.dataId).values,at.sizeFromShape(g),y,s.dtype);t=r.makeTensorInfo(y,s.dtype),r.texData.get(t.dataId).values=e}else{var b,x;let e,n,a,s,i;b=m,x=y,e=at.sizeFromShape(g),n=at.sizeFromShape(b.shape)/e,s=C0(a=CZ({inputs:{x:b},attrs:{shape:[n,e]},backend:r}),b.dtype,"max",r),i=CZ({inputs:{x:s},attrs:{shape:x},backend:r}),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),t=i}return h&&r.disposeIntermediateTensorInfo(m),t}var $G=CG({opSnippet:CF+`
  return max(a, b);
`,packedOpSnippet:`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+CD+`
  return result;
`,cpuKernelImpl:_W}),$H=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${a*s-1} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},$j=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,p=o-1-e.padInfo.front,d=l-1-e.padInfo.top,h=u-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${d}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${o*l*u-1} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}},$q=CG({opSnippet:CF+`
  return min(a, b);
`,packedOpSnippet:`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+CD+`
  return result;
`,cpuKernelImpl:_V}),$K=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let r=e.length,a=Tq(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;if(1===r){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},$X=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let r=e.length,a=Tq(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=Co("rc",r),l=Co("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,p=1===r?"source":`vec2(${l.slice(-2).join()})`,d="reflect"===n?0:1,h="";if(1===r){let e=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;h=`
        ${a} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${l.join()}), ${p});
        ${o[r-1]} += 1;
        if(${u}) {
          ${e}
          result[1] = getChannel(getX(${l.join()}), ${p});
        }
      `}else{let e=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;h=`
        ${a} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${l.join()}), ${p});
        ${o[r-1]} += 1;
        if(${u}) {
          ${e}
          result[1] = getChannel(getX(${l.join()}), ${p});
        }
        rc = outputLoc;
        ${o[r-2]} += 1;
        if(${o[r-2]} < ${this.outputShape[r-2]}) {
          ${e}
          result[2] = getChannel(getX(${l.join()}), ${p});
          ${o[r-1]} += 1;
          if(${u}) {
            ${e}
            result[3] = getChannel(getX(${l.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},$Y=CG({opSnippet:`if (b == 0.0) return NAN;
  return mod(a, b);`,packedOpSnippet:`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+CD+`
  return result;
`}),$Z=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},$J=CG({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),$Q="return a - b;",$0=CG({opSnippet:$Q,packedOpSnippet:$Q,supportsComplex:!0,cpuKernelImpl:Ct});function $1(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=at.parseAxisParam([s],a.shape),o=$U({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=hR.expandShapeToKeepDim(o.shape,i),u=CZ({inputs:{x:o},backend:n,attrs:{shape:l}}),p=$0({inputs:{a:a,b:u},backend:n}),d=$u({inputs:{x:p},backend:n}),h=C4({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),c=CZ({inputs:{x:h},backend:n,attrs:{shape:l}}),m=$J({inputs:{a:d,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),m}var $2=Cf+`
  return -x;
`,$3=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,$4=cN.nonMaxSuppressionV3Impl,$6=cN.nonMaxSuppressionV4Impl,$5=cN.nonMaxSuppressionV5Impl,$8=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${n}),
                      float(index == coords.y)));
      }
    `}};function $7(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"!==r.dtype)return $g({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n});{let e=EN({inputs:{input:r},backend:n}),t=$7({inputs:{x:e},backend:n}),a=EM({inputs:{input:r},backend:n}),s=$7({inputs:{x:a},backend:n}),i=CL({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}}var $9=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let r=e.length,a=Tq(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(1===r){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},Ae=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let r=e.length,a=Tq(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=Co("rc",r),l=Co("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,p=1===r?"source":`vec2(${l.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;
       if(${u}) {
      `,1===r?"":`}
       rc = outputLoc;
       ${o[r-2]} += 1;
       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;
         if(${u}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let e=0,t=1===r?2:4;e<t;e++)c+=`
        ${d[e]}
        if (${h}) {
          result[${e}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${e}] = getChannel(getX(${l.join()}), ${p});
        }
      `;c+=1===r?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}},At=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===at.sizeFromShape(a.shape))return $g({backend:n,attrs:{shape:s.map((e,t)=>e[0]+a.shape[t]+e[1]),value:i,dtype:a.dtype}});let o=e8.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ae(a.shape,s,i):new $9(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},An=CG({opSnippet:`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,packedOpSnippet:`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+CD+`
  return result;
`}),Ar=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=_Y(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},Aa=CU({opSnippet:"return 1.0 / x;"}),As=CU({opSnippet:Cf+`
  return (x < 0.0) ? 0.0 : x;
`,packedOpSnippet:`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),Ai=CU({opSnippet:Cf+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,packedOpSnippet:`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),Ao=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/p[0]},
          ${u[1]/p[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},Al=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/p[0]},
          ${u[1]/p[1]},
          ${u[1]/p[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}},Au=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],p=o[1]/l[1],d=1/u,h=1/p,c=2*Math.ceil(d)+2,m=2*Math.ceil(h)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${p});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${h});

        const int winHeight = int(${c});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}},Ap=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d;d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/p[0]},
          ${u[1]/p[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},Ad=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d;d=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/p[0]},
          ${u[1]/p[1]},
          ${u[1]/p[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}},Ah=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],p=o[1]/l[1],d=1/u,h=1/p,c=2*Math.ceil(d)+2,m=2*Math.ceil(h)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${p});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${h});

        const int winHeight = int(${c});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}},Ac=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let r=n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`,a=e.map((e,t)=>r(t)).join(","),s=Tq(n);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}},Am=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=Co("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Tq(n);function o(n){let r=e.map((r,a)=>-1!==t.indexOf(a)&&1!==e[a]?`${e[a]} - ${n[a]} - 1`:`${n[a]}`),a=r.join(","),s=r.slice(-2).join(",");return`getChannel(getX(${a}), vec2(${s}))`}1===n?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(r.slice())};
          if(${a}){
            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};
          }
          if(${s}) {
            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};
            if(${a}) {
              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};
            }
          }
          setOutput(result);
        }
    `}},Af=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Ag=CU({opSnippet:`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`}),Ay=CU({opSnippet:"return inversesqrt(x);",cpuKernelImpl:_Z}),Ab=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let l=Tq(a.length),u=Tq(s.length),p="";1===n?p="i":2===n&&(p="i, j");let d=`getIndices(${p})`,h="";1===r?h="i":2===r&&(h="i, coords[1]");let c=`getUpdates(${h})`,m="";o&&(m="coords[0], coords[1]");let f=`getDefaultValue(${m})`;this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${t>1?"strides[j]":"strides"};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${c};
              found = true;
            }
          }
          setOutput(mix(${f}, sum, float(found)));
        }
      `}},Ax=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let l=Tq(a.length),u=Tq(s.length),p="";1===n?p="i":2===n&&(p="i, j");let d=`getIndices(${p})`,h="";1===r?h="i":2===r&&(h="i, coords[1]");let c=`getUpdates(${h})`,m="";o&&(m="coords[0], coords[1]");let f=`getDefaultValue(${m})`;this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${t>1?"strides[j]":"strides"};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${t>1?"strides[j + 1]":"strides"};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${c};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${f}, sum, found));
        }
      `}},Av=class{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,s=2===e8.getNumber("WEBGL_VERSION")?"while (left < right) {":a;this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${s}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${"left"===r?"<":"<="} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}},Aw=class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}let s=Tq(n);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}},Ak=CU({opSnippet:`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${hR.SELU_SCALEALPHA};
  float scale = ${hR.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`}),AI=CU({opSnippet:CV+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,packedOpSnippet:`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:_Q}),AS=CU({opSnippet:`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`}),AN=CU({opSnippet:CV+`
  return sin(x);
`,packedOpSnippet:`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${CD}
  return result;
`}),AT=CU({opSnippet:`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`}),A_=CU({opSnippet:`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`}),AC="return sqrt(x);",AE=CU({opSnippet:AC,packedOpSnippet:AC,cpuKernelImpl:_6}),A$=CU({opSnippet:"return x * x;"}),AA="return (a - b) * (a - b);",AF=CG({opSnippet:AA,packedOpSnippet:AA}),AR=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=Tq(n.length),s=Tq(n.length),i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${e});
      ${a} strides = ${a}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}},AD=CU({opSnippet:"return tan(x);"}),AM=CU({opSnippet:`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`}),AO=class{constructor(e,t){this.variableNames=["A"];let n=Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;let r=Tq(this.rank),a=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}};function AL(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map(e=>at.decodeString(e)):e,r=Cn(im(a.shape,a.dtype,t),s);return n.makeTensorInfo(r.shape,r.dtype,r.values)}let i=new AO(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var Az=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},AP=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function AB(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function AW(e){let t=1;for(;t<e;)t*=2;return t}var AV=class{constructor(e,t,n,r,a,s){let i;switch(this.variableNames=["Image","Transforms"],this.outputShape=s,r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${"nearest"===n?1:2} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}},AU=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o=4*Math.floor(n/4),l=n%4,u=`
        sumValue += dot(values, segFilter);
    `,p="";a%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let d="";a%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${d}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${u}
        }

        int inIdx = inOffset + ${o};
        if (${1===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${u}
        } else if (${2===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${u}
        } else if (${3===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${u}
        }
        setOutput(sumValue);
      }
    `}};for(let e of[{kernelName:rX,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:d}=r;return C5({a:a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:p})}},{kernelName:te,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=_0(r.texData.get(a.dataId).values);return r.makeTensorInfo(a.shape,a.dtype,e)}return t=e8.getBool("WEBGL_PACK_UNARY_OPERATIONS")?new CI(a.shape,C8):new Cm(a.shape,C8),r.runWebGLProgram(t,[a],a.dtype)}},{kernelName:tt,backendName:"webgl",kernelFunc:C7},{kernelName:tn,backendName:"webgl",kernelFunc:C9},{kernelName:tr,backendName:"webgl",kernelFunc:Et},{kernelName:ta,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t;if(1===n.length)return CO({inputs:{x:n[0]},backend:r});if(n.length>e8.getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(n.length/2),a=e({inputs:n.slice(0,t),backend:r}),s=e({inputs:n.slice(t),backend:r});return e({inputs:[a,s],backend:r})}let a=n.map(e=>e.dtype).reduce((e,t)=>aL(e,t)),s=n.map(e=>e.shape),i=e8.getBool("WEBGL_PACK")?new Er(n[0].shape,s):new En(n[0].shape,s);return r.runWebGLProgram(i,n,a)}},{kernelName:ts,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=at.parseAxisParam(s,a.shape),u=l,p=hR.getAxesPermutation(u,o),d=a;null!=p&&(d=C6({inputs:{x:a},backend:n,attrs:{perm:p}}),u=hR.getInnerMostAxes(u.length,o)),hR.assertAxesAreInnerMostDims("all",u,o);let[h,c]=hR.computeOutAndReduceShapes(d.shape,u),m=CZ({inputs:{x:d},backend:n,attrs:{shape:[-1,at.sizeFromShape(c)]}}),f=C0(m,m.dtype,"all",n),g;return g=i?CZ({inputs:{x:f},backend:n,attrs:{shape:hR.expandShapeToKeepDim(h,l)}}):CZ({inputs:{x:f},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),null!=p&&n.disposeIntermediateTensorInfo(d),g}},{kernelName:ti,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=at.parseAxisParam(s,a.shape),u=l,p=hR.getAxesPermutation(u,o),d=a;null!=p&&(d=C6({inputs:{x:a},backend:n,attrs:{perm:p}}),u=hR.getInnerMostAxes(u.length,o)),hR.assertAxesAreInnerMostDims("any",u,o);let[h,c]=hR.computeOutAndReduceShapes(d.shape,u),m=CZ({inputs:{x:d},backend:n,attrs:{shape:[-1,at.sizeFromShape(c)]}}),f=C0(m,m.dtype,"any",n),g;return g=i?CZ({inputs:{x:f},backend:n,attrs:{shape:hR.expandShapeToKeepDim(h,l)}}):CZ({inputs:{x:f},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),null!=p&&n.disposeIntermediateTensorInfo(d),g}},{kernelName:to,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=at.parseAxisParam(s,a.shape),o=hR.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(u.push(l=C6({inputs:{x:a},backend:n,attrs:{perm:o}})),i=hR.getInnerMostAxes(i.length,l.shape.length)),hR.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let p=Ei(n,l,i[0],"max");return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},{kernelName:tl,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=at.parseAxisParam(s,a.shape),o=hR.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(u.push(l=C6({inputs:{x:a},backend:n,attrs:{perm:o}})),i=hR.getInnerMostAxes(i.length,l.shape.length)),hR.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let p=Ei(n,l,i[0],"min");return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},{kernelName:tu,backendName:"webgl",kernelFunc:Eo},{kernelName:tp,backendName:"webgl",kernelFunc:El},{kernelName:td,backendName:"webgl",kernelFunc:Eu},{kernelName:tc,backendName:"webgl",kernelFunc:Ep},{kernelName:th,backendName:"webgl",kernelFunc:Ed},{kernelName:tm,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;TA(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;at.assert(hR.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let u=hR.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&at.arraysEqual(u.inShape,u.outShape))return CO({inputs:{x:a},backend:n});let p=new Eh(u,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}},{kernelName:tg,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,p=new Ec(hR.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),"avg",!1);return n.runWebGLProgram(p,[a],"float32")}},{kernelName:ty,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=new Ef(hR.computePool3DInfo(s.shape,i,o,[1,1,1],l,u));return n.runWebGLProgram(p,[a],s.dtype)}},{kernelName:tf,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t;TA([a,s],"avgPoolGrad");let{filterSize:i,strides:o,pad:l}=r,u=new Em(hR.computePool2DInfo(s.shape,i,o,1,l));return n.runWebGLProgram(u,[a],s.dtype)}},{kernelName:tb,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return C5({a:a,b:s,transposeA:i,transposeB:o,backend:n})}},{kernelName:nt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;at.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),at.assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),at.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[r,a,s],p=null;null!=i&&(p=i.shape,u.push(i));let d=null;null!=o&&(d=o.shape,u.push(o));let h=e8.getBool("WEBGL_PACK_NORMALIZATION")?new Ey(r.shape,a.shape,s.shape,p,d,l):new Eg(r.shape,a.shape,s.shape,p,d,l);return t.runWebGLProgram(h,u,u[0].dtype)}},{kernelName:tx,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;at.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((e,t)=>e*t),l=hR.getReshaped(a.shape,s,o),u=hR.getPermuted(l.length,s.length),p=hR.getReshapedPermuted(a.shape,s,o),d=hR.getSliceBeginCoords(i,s.length),h=hR.getSliceSize(p,i,s.length),c=[],m=CZ({inputs:{x:a},backend:n,attrs:{shape:l}}),f=C6({inputs:{x:m},backend:n,attrs:{perm:u}}),g=CZ({inputs:{x:f},backend:n,attrs:{shape:p}}),y=Ew({inputs:{x:g},backend:n,attrs:{begin:d,size:h}});return c.push(m),c.push(f),c.push(g),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}},{kernelName:tv,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=_k(n.readSync(a.dataId),n.readSync(s.dataId),s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},{kernelName:tw,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{a,b:s}=n,i=e8.getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=e8.getNumber("WEBGL_VERSION");if(r.shouldExecuteOnCPU([a,s])||1===o){let e=r.texData.get(a.dataId).values,t=r.texData.get(s.dataId).values,[n,i]=_S(a.shape,s.shape,e,t,a.dtype),o=r.makeTensorInfo(i,a.dtype);return r.texData.get(o.dataId).values=n,o}return t=i?new CM(Ek,a.shape,s.shape,!1):new CR(EI,a.shape,s.shape),r.runWebGLProgram(t,[a,s],a.dtype)}},{kernelName:tI,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=hR.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},{kernelName:tS,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return CO({inputs:{x:s},backend:r});let t=lz(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=CL({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){let t=EN({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!at.hasEncodingLoss(s.dtype,i)){let e=CO({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([s])){let[e,t,n]=_N(r.texData.get(s.dataId).values,s.shape,s.dtype,i);return r.makeTensorInfo(e,t,n)}if("int32"===i){let e,t;return e=new Cm(s.shape,"return float(int(x));"),{dataId:(t=r.runWebGLProgram(e,[s],"int32")).dataId,shape:t.shape,dtype:t.dtype}}if("bool"===i){let e=r.makeTensorInfo([],"bool",at.getTypedArrayFromDType("bool",1)),t=ES({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},{kernelName:tN,backendName:"webgl",kernelFunc:E_},{kernelName:tT,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o;return o=e8.getBool("WEBGL_PACK_CLIP")?new EE(a.shape):new EC(a.shape),n.runWebGLProgram(o,[a],a.dtype,[[s],[i]])}},{kernelName:t_,backendName:"webgl",kernelFunc:CL},{kernelName:tC,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new E$(r.shape),i=[EA(r,a.complexTensorInfos.real),EA(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}},{kernelName:tE,backendName:"webgl",kernelFunc:EO},{kernelName:t$,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:p}=r,d=hR.convertConv2DDataFormat(l),h=hR.computeConv2DInfo(a.shape,s.shape,i,u,o,p,!1,d),c;if(1===h.filterHeight&&1===h.filterWidth&&1===h.dilationHeight&&1===h.dilationWidth&&1===h.strideHeight&&1===h.strideWidth&&("SAME"===h.padInfo.type||"VALID"===h.padInfo.type))c=EV({x:a,filter:s,convInfo:h,backend:n});else if(h.strideWidth<=2&&"channelsLast"===d&&e8.getBool("WEBGL_EXP_CONV")){let e=new EP(h),t=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];c=n.runWebGLProgram(e,[a,s],"float32",t)}else if(e8.getBool("WEBGL_CONV_IM2COL"))c=EU({x:a,filter:s,convInfo:h,backend:n});else{let e=new EL(h);c=n.runWebGLProgram(e,[a,s],"float32")}let m=CZ({inputs:{x:c},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(c),m}},{kernelName:tA,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:p}=r,d=hR.convertConv2DDataFormat(l),h=new EY(hR.computeConv2DInfo(a.shape,p,i,1,o,u,!1,d));return n.runWebGLProgram(h,[a,s],"float32")}},{kernelName:tF,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=r,d=hR.convertConv2DDataFormat(u),h=hR.computeConv2DInfo(i,s.shape,o,1,l,p,!1,d);if(e8.getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===d){let e=[[h.strideHeight,h.strideWidth]],t=new E0(h);return n.runWebGLProgram(t,[a,s],"float32",e)}{let e=new EZ(h);return n.runWebGLProgram(e,[a,s],"float32")}}},{kernelName:tR,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=new Ez(hR.computeConv3DInfo(a.shape,s.shape,i,l,o));return n.runWebGLProgram(u,[a,s],"float32")}},{kernelName:tD,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=new EJ(hR.computeConv3DInfo(a.shape,l,i,1,o));return n.runWebGLProgram(u,[a,s],"float32")}},{kernelName:tM,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=new EQ(hR.computeConv3DInfo(l,s.shape,o,1,i));return n.runWebGLProgram(u,[a,s],"float32")}},{kernelName:tO,backendName:"webgl",kernelFunc:E1},{kernelName:tL,backendName:"webgl",kernelFunc:E2},{kernelName:tB,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,p=new E3(a.shape,s.shape,o,l,u);return n.runWebGLProgram(p,[a,s,i],"float32")}},{kernelName:tz,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return E8(EX.Prod,a,n,s,i,o)}},{kernelName:tP,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return E8(EX.Sum,a,n,s,i,o)}},{kernelName:tW,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=_k(n.readSync(a.dataId),n.readSync(s.dataId),s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){let e=_I(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},{kernelName:tV,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],p="NHWC"===i?a.shape[3]:a.shape[1],d=l*s,h=u*s,c=p/(s*s),m=new E7("NHWC"===i?[o,d,h,c]:[o,c,d,h],s,i);return n.runWebGLProgram(m,[a],a.dtype)}},{kernelName:tU,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,p=l;null==p&&(p=[1,1]),at.assert(hR.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let d=hR.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!0),h;h=e8.getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new $e(d):new E9(d);let c=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(h,[a,s],"float32",c)}},{kernelName:tG,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:p}=r,d=new $t(hR.computeConv2DInfo(a.shape,p,i,o,l,u,!0));return n.runWebGLProgram(d,[a,s],"float32")}},{kernelName:tH,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:p}=r,d=new $n(hR.computeConv2DInfo(p,s.shape,i,o,l,u,!0));return n.runWebGLProgram(d,[a,s],"float32")}},{kernelName:tj,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=at.sizeFromShape(r.shape),i=CZ({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new $r(s),l=n.runWebGLProgram(o,[i],i.dtype),u=CZ({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}},{kernelName:tq,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=hR.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),p,d=new $a(u),h=CZ({inputs:{x:p=n.runWebGLProgram(d,[a,s],"float32")},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(p),h}},{kernelName:tJ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,{allDims:s,summedDims:i,idDims:o}=hR.decodeEinsumEquation(a,t.length);hR.checkEinsumDimSizes(s.length,o,t);let{path:l,steps:u}=hR.getEinsumComputePath(i,o),p=u.length,d=null,h=s.length,c=[];for(let e=0;e<p;++e){for(let r of u[e]){let{permutationIndices:e,expandDims:a}=hR.getEinsumPermutation(h,o[r]),s;hR.isIdentityPermutation(e)?s=t[r]:(s=C6({inputs:{x:t[r]},backend:n,attrs:{perm:e}}),c.push(s));let i=s.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);at.arraysEqual(s.shape,i)||(s=CZ({inputs:{x:s},backend:n,attrs:{shape:i}}),c.push(s)),null===d?d=s:(d=CY({inputs:{a:s,b:d},backend:n}),c.push(d))}e<p-1&&(l[e]>=0&&(d=C4({inputs:{x:d},backend:n,attrs:{axis:l[e]-(s.length-h),keepDims:!1}}),c.push(d)),h--)}for(let e of c)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},{kernelName:tQ,backendName:"webgl",kernelFunc:$s},{kernelName:t0,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=e8.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CM($i,r.shape,a.shape):new CR("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},{kernelName:t2,backendName:"webgl",kernelFunc:$o},{kernelName:t1,backendName:"webgl",kernelFunc:$l},{kernelName:t3,backendName:"webgl",kernelFunc:$u},{kernelName:t4,backendName:"webgl",kernelFunc:$p},{kernelName:t6,backendName:"webgl",kernelFunc:$h},{kernelName:t5,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return $m(r,!1,n)}},{kernelName:t8,backendName:"webgl",kernelFunc:$g},{kernelName:t7,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=new $b(n.shape);return t.runWebGLProgram(r,[n],n.dtype)}},{kernelName:t9,backendName:"webgl",kernelFunc:$v},{kernelName:ne,backendName:"webgl",kernelFunc:$w},{kernelName:rq,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[u,l],d=[u,l,s];if(o||i){let e=e8.getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==$y||e!==$S)&&($S=e,$y=document.createElement("canvas").getContext("2d",{willReadFrequently:$S})),$y.canvas.width=l,$y.canvas.height=u,$y.drawImage(a,0,0,l,u),a=$y.canvas}let h=n.makeTensorInfo(p,"int32");n.texData.get(h.dataId).usage=EH.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),a);let c=e8.getBool("WEBGL_PACK")?new $I(d):new $k(d),m=n.runWebGLProgram(c,[h],"int32");return n.disposeData(h.dataId),m}},{kernelName:rY,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:d,dimRoundingMode:h,activation:c,leakyreluAlpha:m}=r,f=hR.convertConv2DDataFormat(p),g=hR.computeConv2DInfo(a.shape,s.shape,l,d,u,h,!1,f),y,b=[],x=null!=i,v=null!=o,w="leakyrelu"===c,k=()=>{let e=[a,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=CZ({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(i,p)),v&&e.push(t(o,p)),w){let t=n.makeTensorInfo([],"float32",at.createScalarValue(m,"float32"));e.push(t),b.push(t)}return e};if(1===g.filterHeight&&1===g.filterWidth&&1===g.dilationHeight&&1===g.dilationWidth&&1===g.strideHeight&&1===g.strideWidth&&("SAME"===g.padInfo.type||"VALID"===g.padInfo.type))y=EV({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:m});else if(g.strideWidth<=2&&"channelsLast"===f&&e8.getBool("WEBGL_EXP_CONV")){let e=new EP(g,x,c?CH(c,!0):null,v,w),t=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=k();y=n.runWebGLProgram(e,r,"float32",t)}else if(e8.getBool("WEBGL_CONV_IM2COL"))y=EU({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:m});else{let e=new EL(g,x,c?CH(c,!1):null,v,w),t=k();y=n.runWebGLProgram(e,t,"float32")}let I=CZ({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach(e=>n.disposeIntermediateTensorInfo(e)),I}},{kernelName:rZ,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:p,dilations:d,dimRoundingMode:h,activation:c,leakyreluAlpha:m}=a,f=[],g=d;null==g&&(g=[1,1]),at.assert(hR.eitherStridesOrDilationsAreOne(u,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`);let y=hR.computeConv2DInfo(s.shape,i.shape,u,g,p,h,!0),b=e8.getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=c?CH(c,b):null,v=[s,i],w=null!=o,k=null!=l,I="leakyrelu"===c;if(w&&v.push(o),k&&v.push(l),I){let e=r.makeTensorInfo([],"float32",at.createScalarValue(m,"float32"));v.push(e),f.push(e)}t=b?new $e(y,w,x,k,I):new E9(y,w,x,k,I);let S=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],N=r.runWebGLProgram(t,v,"float32",S);return f.forEach(e=>r.disposeIntermediateTensorInfo(e)),N}},{kernelName:nr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=at.sizeFromShape(r.shape),[l,u,p,d]=hR.prepareAndValidate(r,a),h=CZ({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=CZ({inputs:{x:r},backend:n,attrs:{shape:[at.sizeFromShape(r.shape)/p,p]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=_F(n.readSync(a.dataId),n.bufferSync(r),r.dtype,u,i,p,d,r.shape,o);return n.makeTensorInfo(l,r.dtype,e.values)}let m=new $N(i,d,[u,p],r.shape),f=n.runWebGLProgram(m,[c,h],c.dtype),g=CZ({inputs:{x:f},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),g}},{kernelName:nn,backendName:"webgl",kernelFunc:$_},{kernelName:na,backendName:"webgl",kernelFunc:$C},{kernelName:ns,backendName:"webgl",kernelFunc:$E},{kernelName:ni,backendName:"webgl",kernelFunc:CO},{kernelName:no,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return $m(r,!0,n)}},{kernelName:nl,backendName:"webgl",kernelFunc:EM},{kernelName:nu,backendName:"webgl",kernelFunc:$$},{kernelName:np,backendName:"webgl",kernelFunc:$A},{kernelName:nd,backendName:"webgl",kernelFunc:$F},{kernelName:nh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",at.createScalarValue(s,"float32")),o=e8.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CM(CP,a.shape,i.shape):new CR(Cz,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},{kernelName:nc,backendName:"webgl",kernelFunc:$R},{kernelName:nm,backendName:"webgl",kernelFunc:$D},{kernelName:nf,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=_z(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},{kernelName:ng,backendName:"webgl",kernelFunc:$M},{kernelName:ny,backendName:"webgl",kernelFunc:$O},{kernelName:nb,backendName:"webgl",kernelFunc:$L},{kernelName:nx,backendName:"webgl",kernelFunc:$z},{kernelName:nv,backendName:"webgl",kernelFunc:$P},{kernelName:nS,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=e8.getBool("WEBGL_PACK_NORMALIZATION")?new $W(a.shape,s,i,o,l):new $B(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)}},{kernelName:nN,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r,d=new $V(a.shape,o,l,u,p);return n.runWebGLProgram(d,[a,s,i],a.dtype)}},{kernelName:n_,backendName:"webgl",kernelFunc:$U},{kernelName:nC,backendName:"webgl",kernelFunc:$G},{kernelName:nE,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;TA(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;at.assert(hR.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let u=hR.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&at.arraysEqual(u.inShape,u.outShape))return CO({inputs:{x:a},backend:n});let p=new Eh(u,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}},{kernelName:nA,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,p=new Ec(hR.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}},{kernelName:nF,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=hR.computePool3DInfo(s.shape,i,o,[1,1,1],l,u),d=new Ec(p,"max",!0),h=n.runWebGLProgram(d,[s],s.dtype),c=new $j(p),m=n.runWebGLProgram(c,[a,h],s.dtype);return n.disposeIntermediateTensorInfo(h),m}},{kernelName:n$,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t;TA([s,i],"maxPoolGrad");let{filterSize:o,strides:l,pad:u,dimRoundingMode:p}=r,d=hR.computePool2DInfo(s.shape,o,l,1,u,p),h=new Eh(d,"max",!0),c=n.runWebGLProgram(h,[s],s.dtype),m=new $H(d),f=n.runWebGLProgram(m,[a,c],s.dtype);return n.disposeIntermediateTensorInfo(c),f}},{kernelName:nR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t;at.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let l=[1,1];at.assert(hR.eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);let u=hR.computePool2DInfo(r.shape,a,s,l,i),[p,d]=function(e,t,n,r){let a=new Eh(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");return a=new Eh(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,u,n);return[p,d]}},{kernelName:nD,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=r.shape.length,o=at.parseAxisParam(s,r.shape),l=o,u=hR.getAxesPermutation(l,i),p=null!=u,d=n.shouldExecuteOnCPU([r]),h=[],c=r;if(p){if(d){let e=n.texData.get(c.dataId).values,t=Array(i);for(let e=0;e<t.length;e++)t[e]=r.shape[u[e]];let a=Ca(e,r.shape,r.dtype,u,t);c=n.makeTensorInfo(t,r.dtype),n.texData.get(c.dataId).values=a}else c=C3(r,u,n);h.push(c),l=hR.getInnerMostAxes(l.length,i)}hR.assertAxesAreInnerMostDims("sum",l,i);let[m,f]=hR.computeOutAndReduceShapes(c.shape,l),g=m;a&&(g=hR.expandShapeToKeepDim(m,o));let y=function(e,t,n,r){let a=at.sizeFromShape(t),s=at.sizeFromShape(e.shape)/a,i=CZ({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=C0(i,"float32","mean",r),l=CZ({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}(c,f,g,n);for(let e of h)n.disposeIntermediateTensorInfo(e);return y}},{kernelName:nM,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=at.parseAxisParam(s,a.shape),u=l,p=hR.getAxesPermutation(u,o),d=a;null!=p&&(d=C6({inputs:{x:a},backend:n,attrs:{perm:p}}),u=hR.getInnerMostAxes(u.length,a.shape.length)),hR.assertAxesAreInnerMostDims("min",u,o);let[h,c]=hR.computeOutAndReduceShapes(d.shape,u),m=CZ({inputs:{x:d},backend:n,attrs:{shape:[-1,at.sizeFromShape(c)]}}),f=C0(m,m.dtype,"min",n),g;return g=i?CZ({inputs:{x:f},backend:n,attrs:{shape:hR.expandShapeToKeepDim(h,l)}}):CZ({inputs:{x:f},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),null!=p&&n.disposeIntermediateTensorInfo(d),g}},{kernelName:nO,backendName:"webgl",kernelFunc:$q},{kernelName:nL,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=e8.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $X(r.shape,a,s):new $K(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},{kernelName:nz,backendName:"webgl",kernelFunc:$Y},{kernelName:nP,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:$1({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=new $Z(l.shape[0],l.shape[1],s),p=n.runWebGLProgram(u,[l],"int32",[[i]]);return o||n.disposeIntermediateTensorInfo(l),p}},{kernelName:nB,backendName:"webgl",kernelFunc:CY},{kernelName:nW,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])){let[e,t]=_G(r.texData.get(a.dataId).values,a.shape,a.dtype);return r.makeTensorInfo(t,a.dtype,e)}return t=e8.getBool("WEBGL_PACK_UNARY_OPERATIONS")?new CI(a.shape,$3):new Cm(a.shape,$2),r.runWebGLProgram(t,[a],a.dtype)}},{kernelName:nU,backendName:"webgl",kernelFunc:function(e){hR.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,{selectedIndices:u}=$4(n.readSync(a.dataId),n.readSync(s.dataId),i,o,l);return n.makeTensorInfo([u.length],"int32",new Int32Array(u))}},{kernelName:nG,backendName:"webgl",kernelFunc:function(e){hR.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,{selectedIndices:p,validOutputs:d}=$6(n.readSync(a.dataId),n.readSync(s.dataId),i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},{kernelName:nH,backendName:"webgl",kernelFunc:function(e){hR.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,{selectedIndices:p,selectedScores:d}=$5(n.readSync(a.dataId),n.readSync(s.dataId),i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([d.length],"float32",new Float32Array(d))]}},{kernelName:nV,backendName:"webgl",kernelFunc:ES},{kernelName:nq,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=at.sizeFromShape(a.shape),p=new $8(u,i,o,l),d=CZ({inputs:{x:a},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(p,[d],s);n.disposeIntermediateTensorInfo(d);let c=CZ({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,i]}});return n.disposeIntermediateTensorInfo(h),c}},{kernelName:nj,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw Error("onesLike is not supported under string dtype");if("complex64"!==a.dtype)return $g({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r});{let t=EN({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=EM({inputs:{input:a},backend:r}),i=$7({inputs:{x:s},backend:r}),o=CL({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}}},{kernelName:nK,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return $p({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{at.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),at.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=EO({inputs:t.map(e=>{let t=$p({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}},{kernelName:nX,backendName:"webgl",kernelFunc:At},{kernelName:nZ,backendName:"webgl",kernelFunc:An},{kernelName:nJ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=e8.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CM(CW,r.shape,a.shape):new CR(CB,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}},{kernelName:nQ,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],p=at.parseAxisParam(i,s.shape),d=p,h=hR.getAxesPermutation(d,l),c=s;if(null!=h&&(c=C6({inputs:{x:s},backend:r,attrs:{perm:h}}),d=hR.getInnerMostAxes(d.length,l),u.push(c)),hR.assertAxesAreInnerMostDims("prod",d,l),r.shouldExecuteOnCPU([c])){let e=r.texData.get(c.dataId).values,{outVals:n,outShape:a,outDtype:s}=_j(c.shape,c.dtype,e,d);t=r.makeTensorInfo(a,s,n)}else{let[e,n]=hR.computeOutAndReduceShapes(c.shape,d),a=CZ({inputs:{x:c},backend:r,attrs:{shape:[-1,at.sizeFromShape(n)]}}),i=C0(a,az(s.dtype),"prod",r);t=CZ({inputs:{x:i},backend:r,attrs:{shape:e}}),u.push(a),u.push(i)}if(o){u.push(t);let e=hR.expandShapeToKeepDim(t.shape,p);t=CZ({inputs:{x:t},backend:r,attrs:{shape:e}})}return u.forEach(e=>r.disposeIntermediateTensorInfo(e)),t}},{kernelName:n0,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(e=>n.readSync(e.dataId)),u=a.map(e=>e.shape),p=n.readSync(s.dataId),d=n.readSync(i.dataId),[h,c,m]=_q(l,u,p,s.shape,s.dtype,d,i.shape,o),f=h.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(m,s.dtype,c);return f.concat([g])}},{kernelName:n1,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=_K(i,r.shape,r.dtype,o,a.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([p.length],r.dtype,p)]}},{kernelName:n2,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(a.dataId),p=n.readSync(s.dataId),d=n.readSync(i.dataId),h=o.map(e=>n.readSync(e.dataId)),c=o.map(e=>e.shape),[m,f]=_X(u,a.shape,p,s.shape,s.dtype,d,i.shape,h,c,l);return n.makeTensorInfo(m,s.dtype,f)}},{kernelName:n3,backendName:"webgl",kernelFunc:Ar},{kernelName:n4,backendName:"webgl",kernelFunc:EN},{kernelName:tZ,backendName:"webgl",kernelFunc:$J},{kernelName:n6,backendName:"webgl",kernelFunc:Aa},{kernelName:n5,backendName:"webgl",kernelFunc:As},{kernelName:rn,backendName:"webgl",kernelFunc:Ai},{kernelName:n8,backendName:"webgl",kernelFunc:CZ},{kernelName:re,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,p=e8.getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Al(a.shape,l,u,s,i):new Ao(a.shape,l,u,s,i);return n.runWebGLProgram(p,[a],"float32")}},{kernelName:rt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Au(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},{kernelName:n7,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,p=e8.getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ad(a.shape,l,u,s,i):new Ap(a.shape,l,u,s,i);return n.runWebGLProgram(p,[a],a.dtype)}},{kernelName:n9,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Ah(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},{kernelName:rr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=at.parseAxisParam(s,a.shape);if(0===i)return CO({inputs:{x:a},backend:n});let l=e8.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Am(a.shape,o):new Ac(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}},{kernelName:rK,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=new Af(r.shape,s),[l,u]=hR.getImageCenter(i,r.shape[1],r.shape[2]),p=[[l,u,Math.sin(a),Math.cos(a)]];return n.runWebGLProgram(o,[r],r.dtype,p)}},{kernelName:ra,backendName:"webgl",kernelFunc:Ag},{kernelName:rs,backendName:"webgl",kernelFunc:Ay},{kernelName:ri,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:d}=hR.calculateShapes(s,a,i),h=[d/u,u];if(0===d)return n.makeTensorInfo(i,a.dtype);let c=CZ({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),m=CZ({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),f=n.makeTensorInfo([],"float32",new Float32Array([0])),g;g=e8.getBool("WEBGL_PACK")?new Ax(l,o,c.shape.length,m.shape.length,p,h):new Ab(l,o,c.shape.length,m.shape.length,p,h);let y=n.runWebGLProgram(g,[m,c,f],m.dtype),b=CZ({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(f),b}},{kernelName:rl,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new Av(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}},{kernelName:ru,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new Aw(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],aL(a.dtype,s.dtype))}},{kernelName:rp,backendName:"webgl",kernelFunc:Ak},{kernelName:rf,backendName:"webgl",kernelFunc:AI},{kernelName:rm,backendName:"webgl",kernelFunc:AS},{kernelName:rh,backendName:"webgl",kernelFunc:AN},{kernelName:rc,backendName:"webgl",kernelFunc:AT},{kernelName:rd,backendName:"webgl",kernelFunc:Ew},{kernelName:rw,backendName:"webgl",kernelFunc:$1},{kernelName:rg,backendName:"webgl",kernelFunc:A_},{kernelName:rx,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;at.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((e,t)=>e*t),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],p=At({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=hR.getReshaped(p.shape,s,o,!1),h=hR.getPermuted(d.length,s.length,!1),c=hR.getReshapedPermuted(p.shape,s,o,!1),m=CZ({inputs:{x:p},backend:n,attrs:{shape:d}}),f=C6({inputs:{x:m},backend:n,attrs:{perm:h}}),g=CZ({inputs:{x:f},backend:n,attrs:{shape:c}});return u.push(p),u.push(m),u.push(f),u.forEach(e=>n.disposeIntermediateTensorInfo(e)),g}},{kernelName:rk,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(2!==r.shape.length)throw Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(1!==a.shape.length)throw Error(`Values must be a vector, saw:
         ${a.shape}`);if(0!==i.shape.length)throw Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),p=n.readSync(i.dataId)[0],[d,h,c,m,f]=_2(o,r.shape,r.dtype,l,a.dtype,u,p);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,c),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(e=>Number(e)))),n.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}},{kernelName:rI,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,p,d]=_3(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(p,r.dtype,u),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}},{kernelName:rS,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
              ${a.shape}`);if(1!==s.shape.length)throw Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=_4(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(p,r.dtype,u)}},{kernelName:rN,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
             ${a.shape}`);if(1!==s.shape.length)throw Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,p]=_4(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(p,r.dtype,u)}},{kernelName:rT,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:p,strides:d,outputSize:h}=hR.calculateShapes(s,a,o);if("string"===s.dtype){let e=_J(n.bufferSync(a),n.bufferSync(s),o,h,p,u,l,d,at.decodeString(n.readSync(i.dataId)[0]),!1);return n.makeTensorInfo(o,e.dtype,e.values)}let c=new Ab(u,l,a.shape.length,s.shape.length,d,[h,1],!1),m=n.runWebGLProgram(c,[s,a,i],s.dtype),f=CZ({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),f}},{kernelName:rv,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=at.parseAxisParam(i,a.shape)[0],l=hR.prepareSplitSize(a,s,o),u=Array(a.shape.length).fill(0),p=a.shape.slice();return l.map(e=>{let t=[...p];t[o]=e;let r=Ew({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r})}},{kernelName:ry,backendName:"webgl",kernelFunc:AE},{kernelName:rC,backendName:"webgl",kernelFunc:A$},{kernelName:r_,backendName:"webgl",kernelFunc:AF},{kernelName:rE,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if("string"!==a.dtype)throw Error("Input must be of datatype string");let s=n.readSync(a.dataId),i=_5(hR.fromUint8ToStringArray(s),"string",r);return n.makeTensorInfo(a.shape,"string",i)}},{kernelName:rj,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=Cf+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new Cm(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}},{kernelName:r$,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=hd.sliceInfo(a.shape,s,i,o,l,u,p,d,h),w;if(f)w=CZ({inputs:{x:a},backend:n,attrs:{shape:m}});else if(g||y){at.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let e=hd.computeOutShape(b,x,v),t=Ew({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});w=CZ({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([a])){let e=n.readSync(a.dataId),t=_8(c,im(a.shape,a.dtype,e),v,b);w=n.makeTensorInfo(m,a.dtype,t.values)}else{let e=new AR(b,v,c);w=n.runWebGLProgram(e,[a],a.dtype)}let k=CZ({inputs:{x:w},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(w),k}},{kernelName:rA,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:p,dataSplits:d}=t,[h,c]=_7(n.readSync(p.dataId),n.readSync(d.dataId),a,s,i,o,l,u);return[n.makeTensorInfo([h.length],"string",h),n.makeTensorInfo(d.shape,"int32",c)]}},{kernelName:rF,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");if(1!==s.shape.length)throw Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let[o,l,u]=_9(n.readSync(s.dataId),n.readSync(i.dataId)[0],a),p=l.length;return[n.makeTensorInfo([p,2],"int32",o),n.makeTensorInfo([p],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(u))]}},{kernelName:rR,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");if(a<=0)throw Error("Number of buckets must be at least 1");let i=Ce(n.readSync(s.dataId),a);return n.makeTensorInfo(s.shape,"int32",i)}},{kernelName:rD,backendName:"webgl",kernelFunc:$0},{kernelName:rb,backendName:"webgl",kernelFunc:C4},{kernelName:rM,backendName:"webgl",kernelFunc:AD},{kernelName:rO,backendName:"webgl",kernelFunc:AM},{kernelName:ro,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=t,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:d}=hR.calculateShapes(i,s,a.shape),h=[d/u,u];if(0===d)return n.makeTensorInfo(a.shape,s.dtype);let c=CZ({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),m=CZ({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),f=CZ({inputs:{x:a},backend:n,attrs:{shape:h}}),g=new Ab(l,o,c.shape.length,m.shape.length,p,h,!1,!0),y=n.runWebGLProgram(g,[m,c,f],f.dtype),b=CZ({inputs:{x:y},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),b}},{kernelName:rL,backendName:"webgl",kernelFunc:AL},{kernelName:rz,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=e8.getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=e8.getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,p=u[u.length-1];if(n.shouldExecuteOnCPU([a])||p<o||s>l){let[e,t]=Cr(n.readSync(a.dataId),u,a.dtype,s,i);return[n.makeTensorInfo(e.shape,e.dtype,e.values),n.makeTensorInfo(t.shape,t.dtype,t.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===p)return[a,$g({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let d=n.texData.get(a.dataId),h=null!==d&&d.isPacked,c=h?n.unpackTensor(a):a,m=at.sizeFromShape(u)/p,f=CZ({inputs:{x:c},attrs:{shape:[m,p]},backend:n});h&&AB(n,c);let g=AW(s),y=AW(p),b=null,x=()=>null===b?[f,f]:[f,b],v=(e,t,r)=>{let a=x(),s=new Az(r),i=[[p],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),AB(n,o)};for(let e=1;e<g;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[m,y])}for(let e=y;e>g;e/=2){let t=x(),r=new AP([m,e/2]),a=[[p],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),AB(n,s);let i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,b.shape)}let w=b;b=Ew({inputs:{x:b},backend:n,attrs:{begin:0,size:[m,s]}}),AB(n,w);let k=$_({inputs:{x:f,indices:b},backend:n,attrs:{axis:1,batchDims:1}});AB(n,f);let I=u.slice(0,-1);I.push(s),w=b,b=CZ({inputs:{x:b},attrs:{shape:I},backend:n}),AB(n,w);let S=k;return k=CZ({inputs:{x:k},attrs:{shape:I},backend:n}),AB(n,S),[k,b]}},{kernelName:rP,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[p,d,h,c]=a.shape,[m,f]=null!=u?u:[d,h],g=new AV(d,h,i,o,l,[p,m,f,c]);return n.runWebGLProgram(g,[a,s],"float32")}},{kernelName:rB,backendName:"webgl",kernelFunc:C6},{kernelName:rW,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;TA(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let{outputValues:i,outputShape:o,indices:l}=Cs(r.readSync(s.dataId),a,s.shape,s.dtype);return[r.makeTensorInfo(o,s.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:rV,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let p=[],d=Array(i).fill(0),h=a.shape.slice();h[s]=1;let c=Array(o);for(let e=0;e<c.length;e++){d[s]=e;let t=Ew({inputs:{x:a},backend:n,attrs:{begin:d,size:h}}),r=CZ({inputs:{x:t},backend:n,attrs:{shape:l}});c[e]=r,p.push(t)}return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},{kernelName:rU,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,p=hR.getAxesPermutation([u],o),d=a;null!=p&&(d=C6({inputs:{x:a},backend:n,attrs:{perm:p}}),l.push(d),u=hR.getInnerMostAxes(1,o)[0]);let h=hR.segment_util.computeOutShape(d.shape,u,i),c=at.sizeFromShape([d.shape[u]]),m=CZ({inputs:{x:d},backend:n,attrs:{shape:[-1,c]}});l.push(m);let f=az(a.dtype),g=(e,t,r,a,s)=>{let i=e.shape[0],o=e.shape[1],u=hR.segment_util.segOpComputeOptimalWindowSize(o,s),p=new AU({windowSize:u,inSize:o,batchSize:i,numSegments:s},t),d=n.compileAndRun(p,[e,r],a);if(l.push(d),d.shape[1]===s)return d;let h=Ar({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),c=AL({inputs:{x:h},backend:n,attrs:{reps:[o/u]}});return l.push(h),l.push(c),g(d,t,c,a,s)},y=CZ({inputs:{x:g(m,"unsortedSegmentSum",s,f,i)},backend:n,attrs:{shape:h}}),b=y;return null!=p&&(l.push(y),b=C6({inputs:{x:b},backend:n,attrs:{perm:hR.getUndoAxesPermutation(p)}})),l.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}},{kernelName:rH,backendName:"webgl",kernelFunc:$7}])r6(e);function AG(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){let{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===at.sizeFromShape(i.shape)||n(s,AX[a.dtype],o),i}}}(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(AX||(AX={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(AY||(AY={}));var AH=AG(te),Aj=AG(tt),Aq=AG(tn);function AK(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,p=hR.assertAndGetBroadcastShape(s.shape,i.shape),d=t.makeOutput(p,u);if(0===at.sizeFromShape(p))return d;let h=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(i.shape).buffer),m=t.dataIdMap.get(d.dataId).id;return r(o,h,s.shape.length,l,c,i.shape.length,AX[s.dtype],m),d}}}var AX,AY,AZ,AJ,AQ=AK(tr,!0);function A0(e){let{inputs:{x:t},backend:n}=e;if("string"===t.dtype)return se(n.readSync(t.dataId),t.shape,t.dtype);let r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}function A1(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm),i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);let o=function(e,t){let n=Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let e=A0({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),p=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(u.dataId).id,h=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return A4(p,c,l.shape.length,AX[l.dtype],d,h,s.length),u}function A2(e,t,n){let r=e.shape,a=e.shape.length,s=at.parseAxisParam(t,r),i=s,o=hR.getAxesPermutation(i,a),l=null,u=!1;if(null!=o){let t=Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=hR.getInnerMostAxes(i.length,a),l=A1({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}function A3(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number","number","number","number"])},kernelFunc:function(e){let{backend:n,inputs:r,attrs:a}=e,{axis:s}=a,{x:i}=r,o=n.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:d,inputWasTransposed:h}=A2(i,s,n);if(h){let e=n.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e)}let c=u.shape.slice(0,-1),m=n.makeOutput(c,"int32"),f=n.dataIdMap.get(m.dataId).id,g=at.sizeFromShape(m.shape),y=u.shape[d[0]];return t(l,AX[u.dtype],g,y,f),h&&n.disposeData(p.dataId),m}}}var A4,A6,A5,A8,A7=A3(to),A9=A3(tl),Fe=AG(tu),Ft=AG(tp),Fn=AG(td),Fr=AK(tc,!1),Fa=AG(th);function Fs(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=at.sizeFromShape(r.shape),i=at.inferFromImplicitShape(a,s);return at.assert(s===at.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}function Fi(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=hd.parseSliceParams(t,n,r),o=hd.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),p=at.computeStrides(t.shape),d=a.dataIdMap.get(u.dataId);if(o){let e=hd.computeFlatOffset(s,p);return"string"===t.dtype?d.stringBytes=l.slice(e,e+at.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(e,e+at.sizeFromShape(i))),u}if("string"===t.dtype){let e=Sp(l,s,i,t.shape,t.dtype);return d.stringBytes=e,u}let h=a.typedArrayFromHeap(u),c=t.shape.length;if(2===c)(function(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let r=i;r<l;r++){let i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}})(l,p[0],h,s,i);else if(3===c)(function(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],p=o+s[0],d=l+s[1];for(let a=o;a<p;a++)for(let o=l;o<d;o++){let l=a*t+o*n+u;r.set(e.subarray(l,l+s[2]),i),i+=s[2]}})(l,p[0],p[1],h,s,i);else if(4===c)(function(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],p=s[2],d=l+i[0],h=u+i[1],c=p+i[2],m=s[3];for(let s=l;s<d;s++)for(let l=u;l<h;l++)for(let u=p;u<c;u++){let p=s*t+l*n+u*r+m;a.set(e.subarray(p,p+i[3]),o),o+=i[3]}})(l,p[0],p[1],p[2],h,s,i);else{let e=Sp(l,s,i,t.shape,t.dtype);h.set(e)}return u}var Fo=AK(tw,!0);function Fl(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var Fu,Fp,Fd,Fh,Fc,Fm,Ff=AG(tN);function Fg(e){let{inputs:t,backend:n}=e,r=at.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=t.map(e=>e.shape);hR.assertParamsConsistent(a,r);let s=hR.computeOutShape(t.map(e=>e.shape),r),i=t.filter(e=>at.sizeFromShape(e.shape)>0);if(1===i.length)return A0({inputs:{x:i[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(0===at.sizeFromShape(s))return o;if("string"===i[0].dtype){let e=i.map(e=>{let t=[-1,at.sizeFromShape(e.shape.slice(r))];return Fs({inputs:{x:e},backend:n,attrs:{shape:t}})}),a=e.map(e=>({vals:n.readSync(e.dataId),shape:e.shape}));s=hR.computeOutShape(e.map(e=>e.shape),1);let l=1===e[0].shape[0],u=II(a,s,t[0].dtype,l),p=hR.computeOutShape(i.map(e=>e.shape),r);return o.shape=p,n.dataIdMap.get(o.dataId).stringBytes=hR.fromStringArrayToUint8(u),e.forEach(e=>n.disposeData(e.dataId)),o}let l=at.sizeFromShape(i[0].shape.slice(0,r)),u=0,p=i.map(e=>{let t=at.sizeFromShape(e.shape.slice(r));return u+=t,t}),d=i.map(e=>n.typedArrayFromHeap(e)),h=n.typedArrayFromHeap(o);for(let e=0;e<l;e++){let t=e*u;for(let n=0;n<d.length;n++){let r=p[n],a=e*r,s=d[n].subarray(a,a+r);h.set(s,t),t+=r}}return o}var Fy,Fb,Fx,Fv,Fw,Fk,FI=AG(tO),FS=AG(tL);!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(Fk||(Fk={}));var FN,FT,F_,FC,FE,F$,FA,FF,FR,FD,FM,FO=AG(tQ),FL=AK(t2,!1,"bool"),Fz=AG(t1),FP=AG(t3,"float32");function FB(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(at.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),Fs({inputs:{x:a},backend:r,attrs:{shape:o}})}var FW=AG(t6,"float32");function FV(e){let{attrs:{shape:t,value:n},backend:r}=e,{attrs:{dtype:a}}=e;a=a||at.inferDtype(n);let s=r.makeOutput(t,a);return r.typedArrayFromHeap(s).fill(n),s}var FU,FG,FH,Fj,Fq,FK,FX,FY,FZ,FJ,FQ,F0,F1,F2,F3,F4,F6,F5,F8,F7=AG(t9),F9=AK(ne,!1),Re=AK(na,!1,"bool"),Rt=AK(ns,!1,"bool"),Rn=AG(nu,"bool"),Rr=AG(np,"bool"),Ra=AG(nd,"bool"),Rs=AK(nc,!1,"bool"),Ri=AK(nm,!1,"bool"),Ro=AG(ng),Rl=AG(ny),Ru=AK(nb,!1,"bool"),Rp=AG(nx),Rd=AK(nv,!1,"bool"),Rh=AK(nw,!1,"bool"),Rc=AK(nC,!1),Rm=AK(nO,!1);function Rf(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=at.sizeFromShape(n.shape)/o;return 0===at.sizeFromShape(s.shape)||Rw(a,i,o,l),s}!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(F8||(F8={}));var Rg=AK(nz,!0),Ry=AK(nB,!0),Rb=AG(nW);function Rx(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var Rv,Rw,Rk,RI,RS,RN,RT,R_,RC,RE=AK(nV,!1,"bool"),R$={kernelName:nX,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map((e,n)=>e[0]+t.shape[n]+e[1]);if(0===at.sizeFromShape(t.shape))return FV({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),p=r.map(e=>e[0]),d=r.map(e=>e[1]),h=new Uint8Array(new Int32Array(p).buffer),c=new Uint8Array(new Int32Array(d).buffer);return R_(i,u,t.shape.length,AX[t.dtype],h,c,a,l),o},setupFunc:function(e){R_=e.wasm.cwrap(nX,null,["number","array","number","number","array","array","number","number"])}};function RA(e){g=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function RF(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw Error(hR.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=a.shape.slice();p[0]=u;let d=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,m=n.makeOutput(p,a.dtype),f=n.dataIdMap.get(m.dataId).id,y=n.makeOutput([4],"int32"),b=n.dataIdMap.get(y.dataId).id;g(d,AX[a.dtype],a.shape[0],h,c,f,b,t,0);let x=n.readSync(y.dataId),v;switch(x[0]){case 0:v=hR.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:v=hR.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:v=hR.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:v=hR.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:v=""}if(n.disposeData(y.dataId),v)throw n.disposeData(m.dataId),Error(v);return m}for(let e of[{kernelName:rX,backendName:"wasm",setupFunc:function(e){AZ=e.wasm.cwrap(rX,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:d}=r,h=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,m=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);m=e.id}let f=null==o?0:n.dataIdMap.get(o.dataId).id,g=AY[p];if(null==g)throw Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],b=u?s.shape[1]:s.shape[2],x=oC.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),v=n.makeOutput([...x,y,b],a.dtype),w=n.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return AZ(h,k,a.shape.length,c,I,s.shape.length,l,u,g,m,f,d||0,w),v}},AH,Aj,Aq,AQ,{kernelName:ta,backendName:"wasm",setupFunc:function(e){AJ=e.wasm.cwrap(ta,null,["array","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===at.sizeFromShape(r.shape))return r;let a=t.map(e=>n.dataIdMap.get(e.dataId).id),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return AJ(s,a.length,AX[r.dtype],i),r}},{kernelName:ts,backendName:"wasm",setupFunc:function(e){A6=e.wasm.cwrap(ts,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:d,inputWasTransposed:h}=A2(i,a,t);if(h){let e=t.dataIdMap.get(u.dataId).id;l=u,o=e}let c=l.shape.length;hR.assertAxesAreInnerMostDims("all",p,c);let[m,f]=hR.computeOutAndReduceShapes(l.shape,p),g=at.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(0!==at.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;A6(o,g,e)}if(h&&t.disposeData(u.dataId),s){let e=hR.expandShapeToKeepDim(y.shape,d);y.shape=e}return y}},{kernelName:ti,backendName:"wasm",setupFunc:function(e){A5=e.wasm.cwrap(ti,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:d,inputWasTransposed:h}=A2(i,a,t);if(h){let e=t.dataIdMap.get(u.dataId).id;l=u,o=e}let c=l.shape.length;hR.assertAxesAreInnerMostDims("any",p,c);let[m,f]=hR.computeOutAndReduceShapes(l.shape,p),g=at.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(0!==at.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;A5(o,g,e)}if(h&&t.disposeData(u.dataId),s){let e=hR.expandShapeToKeepDim(y.shape,d);y.shape=e}return y}},A7,A9,Fe,Ft,Fn,Fr,Fa,{kernelName:tm,backendName:"wasm",setupFunc:function(e){A8=e.wasm.cwrap(tm,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,p=hR.computePool2DInfo(a.shape,i,o,1,l,u),d=p.filterHeight,h=p.filterWidth,c=p.padInfo.top,m=p.padInfo.right,f=p.padInfo.bottom,g=p.padInfo.left,y=p.strideHeight,b=p.strideWidth,x=p.inChannels;if("channelsLast"!==p.dataFormat)throw Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(1!==p.dilationWidth||1!==p.dilationHeight)throw Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);let v=r.makeOutput(p.outShape,"float32"),w=r.dataIdMap.get(v.dataId).id;return A8(s,a.shape[0],a.shape[1],a.shape[2],d,h,c,m,f,g,y,b,x,w),v}},{kernelName:tf,backendName:"wasm",setupFunc:function(e){Fd=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l}=r,u=hR.computePool2DInfo(s.shape,i,o,1,l),p=n.makeOutput(s.shape,s.dtype);return Fd(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left,u.filterHeight,u.filterWidth),p}},{kernelName:tg,backendName:"wasm",setupFunc:function(e){Fu=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,p=hR.computePool3DInfo(a.shape,s,i,1,o,l,u),d=n.makeOutput(p.outShape,a.dtype);return Fu(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),d}},{kernelName:ty,backendName:"wasm",setupFunc:function(e){Fp=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=hR.computePool3DInfo(s.shape,i,o,1,l,u),d=n.makeOutput(s.shape,s.dtype);return Fp(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left,p.filterDepth,p.filterHeight,p.filterWidth),d}},{kernelName:tb,backendName:"wasm",setupFunc:function(e){Fh=e.wasm.cwrap(tb,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,p=i?a.shape[l-2]:a.shape[l-1],d=o?s.shape[u-1]:s.shape[u-2],h=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],m=a.shape.slice(0,-2),f=s.shape.slice(0,-2),g=at.sizeFromShape(m),y=at.sizeFromShape(f),b=oC.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,c]);at.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=Fs({inputs:{x:a},backend:n,attrs:{shape:i?[g,p,h]:[g,h,p]}}),v=Fs({inputs:{x:s},backend:n,attrs:{shape:o?[y,c,d]:[y,d,c]}}),w=n.dataIdMap.get(x.dataId).id,k=n.dataIdMap.get(v.dataId).id,I=i?x.shape[2]:x.shape[1],S=o?v.shape[1]:v.shape[2],N=Math.max(g,y),T=n.makeOutput([N,I,S],x.dtype),_=n.dataIdMap.get(T.dataId).id,C=new Uint8Array(new Int32Array(x.shape).buffer),E=new Uint8Array(new Int32Array(v.shape).buffer);return Fh(w,C,x.shape.length,k,E,v.shape.length,i,o,_),n.disposeData(x.dataId),n.disposeData(v.dataId),T.shape=b,T}},{kernelName:tx,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce((e,t)=>e*t),l=hR.getReshaped(a.shape,s,o),u=hR.getPermuted(l.length,s.length),p=hR.getReshapedPermuted(a.shape,s,o),d=hR.getSliceBeginCoords(i,s.length),h=hR.getSliceSize(p,i,s.length),c=Fs({inputs:{x:a},backend:n,attrs:{shape:l}}),m=A1({inputs:{x:c},backend:n,attrs:{perm:u}}),f=Fs({inputs:{x:m},backend:n,attrs:{shape:p}}),g=Fi({inputs:{x:f},backend:n,attrs:{begin:d,size:h}});return n.disposeData(c.dataId),n.disposeData(m.dataId),n.disposeData(f.dataId),g}},{kernelName:tv,backendName:"wasm",setupFunc:function(e){Fc=e.wasm.cwrap(tv,null,["number","number","boolean","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i}=r,o=0!==s.shape.reduce((e,t)=>e*t,1),l=1===a.shape.length?[i]:[a.shape[0],i],u=t.makeOutput(l,s.dtype);function p(e){return t.dataIdMap.get(e.dataId).id}return Fc(p(a),i,o,p(s),AX[s.dtype],p(u)),u}},Fo,{kernelName:tI,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.typedArrayFromHeap(r),i=n.typedArrayFromHeap(a),o=hR.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeOutput([o.length],"int32",void 0,new Int32Array(o))}},{kernelName:tS,backendName:"wasm",kernelFunc:Fl},Ff,{kernelName:tT,backendName:"wasm",setupFunc:function(e){Fm=e.wasm.cwrap(tT,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return Fm(o,s,i,u),l}},{kernelName:tE,backendName:"wasm",kernelFunc:Fg},{kernelName:t$,backendName:"wasm",setupFunc:function(e){Fy=e.wasm.cwrap(t$,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:p,dimRoundingMode:d,dataFormat:h}=n,c=hR.convertConv2DDataFormat(h),m=hR.computeConv2DInfo(a.shape,s.shape,l,u,p,d,!1,c),f=m.filterHeight,g=m.filterWidth,y=m.padInfo.top,b=m.padInfo.right,x=m.padInfo.bottom,v=m.padInfo.left,w=m.dilationHeight,k=m.dilationWidth,I=m.strideHeight,S=m.strideWidth,N=m.inChannels,T=m.outChannels,_="SAME"===m.padInfo.type?1:0;if("channelsLast"!==m.dataFormat)throw Error(`wasm backend Conv2D does not support dataFormat:'${m.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(m.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return Fy(i,a.shape[0],a.shape[1],a.shape[2],o,f,g,y,b,x,v,_,w,k,I,S,N,T,E),C}},{kernelName:tF,backendName:"wasm",setupFunc:function(e){Fb=e.wasm.cwrap(tF,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:p}=r,d=hR.convertConv2DDataFormat(l),h=hR.computeConv2DInfo(p,s.shape,i,1,o,u,!1,d),{batchSize:c,filterHeight:m,filterWidth:f,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:v,outWidth:w,strideHeight:k,strideWidth:I}=h,S=m-1-h.padInfo.top,N=f-1-h.padInfo.left,T="channelsLast"===h.dataFormat,_=at.computeStrides(h.inShape),C=at.computeStrides(a.shape),[E,$,A]=at.computeStrides(s.shape),F=_[0],R=T?_[1]:_[2],D=T?_[2]:1,M=T?1:_[1],O=C[0],L=T?C[1]:C[2],z=T?C[2]:1,P=T?1:C[1],B=t.makeOutput(h.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return Fb(V,U,c,m,f,y,b,g,v,w,x,k,I,S,N,E,$,A,F,R,D,M,O,L,z,P,W),B}},{kernelName:tR,backendName:"wasm",setupFunc:function(e){Fx=e.wasm.cwrap(tR,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if("float32"!==a.dtype)throw Error(`Tensor x must have dtype float32, got ${a.dtype}`);if("float32"!==s.dtype)throw Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=hR.computeConv3DInfo(a.shape,s.shape,i,l,o),p=n.makeOutput(u.outShape,a.dtype);return Fx(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),p}},{kernelName:tD,backendName:"wasm",setupFunc:function(e){Fv=e.wasm.cwrap(tD,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;if("float32"!==a.dtype)throw Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if("float32"!==s.dtype)throw Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=hR.computeConv3DInfo(a.shape,l,i,1,o),p=n.makeOutput(u.filterShape,s.dtype);return Fv(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),p}},{kernelName:tM,backendName:"wasm",setupFunc:function(e){Fw=e.wasm.cwrap(tM,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;if("float32"!==a.dtype)throw Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if("float32"!==s.dtype)throw Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=hR.computeConv3DInfo(l,s.shape,o,1,i),p=n.makeOutput(u.inShape,a.dtype);return Fw(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(p.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),p}},FI,FS,{kernelName:tB,backendName:"wasm",setupFunc:function(e){FN=e.wasm.cwrap(tB,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:l,boxInd:u}=n,p=l.shape[0],[d,h]=i,c=[p,d,h,o.shape[3]],m=t.dataIdMap.get(o.dataId),f;"float32"!==o.dtype&&(f=Fl({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));let g=m.id,y=t.dataIdMap.get(l.dataId).id,b=t.dataIdMap.get(u.dataId).id,x=t.makeOutput(c,"float32"),v=t.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(o.shape).buffer);return FN(g,y,b,p,w,d,h,Fk[a],s,v),null!=f&&t.disposeData(f.dataId),x}},{kernelName:tz,backendName:"wasm",setupFunc:function(e){FT=e.wasm.cwrap(tz,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;at.assert("float32"===a.dtype||"int32"===a.dtype,()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`);let u=hR.getAxesPermutation([s],l),p=a;null!==u&&(p=A1({inputs:{x:a},attrs:{perm:u},backend:n}));let d=hR.getInnerMostAxes(1,l)[0];hR.assertAxesAreInnerMostDims("cumprod",[d],l);let h=n.makeOutput(p.shape,p.dtype),c=p.shape[d],m=n.dataIdMap.get(p.dataId).id,f=n.dataIdMap.get(h.dataId).id;FT(m,i?1:0,o?1:0,c,f,AX[a.dtype]);let g=h;return null!==u&&(g=A1({inputs:{x:h},attrs:{perm:hR.getUndoAxesPermutation(u)},backend:n}),n.disposeData(p.dataId),n.disposeData(h.dataId)),g}},{kernelName:tP,backendName:"wasm",setupFunc:function(e){F_=e.wasm.cwrap(tP,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;at.assert("float32"===a.dtype||"int32"===a.dtype,()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`);let u=hR.getAxesPermutation([s],l),p=a;null!==u&&(p=A1({inputs:{x:a},attrs:{perm:u},backend:n}));let d=hR.getInnerMostAxes(1,l)[0];hR.assertAxesAreInnerMostDims("cumsum",[d],l);let h=n.makeOutput(p.shape,p.dtype),c=p.shape[d],m=n.dataIdMap.get(p.dataId).id,f=n.dataIdMap.get(h.dataId).id;F_(m,i?1:0,o?1:0,c,f,AX[a.dtype]);let g=h;return null!==u&&(g=A1({inputs:{x:h},attrs:{perm:hR.getUndoAxesPermutation(u)},backend:n}),n.disposeData(p.dataId),n.disposeData(h.dataId)),g}},{kernelName:tW,backendName:"wasm",setupFunc:function(e){FC=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i,binaryOutput:o}=r,l=0!==s.shape.reduce((e,t)=>e*t,1),u=1===a.shape.length?[i]:[a.shape[0],i],p=t.makeOutput(u,s.dtype);function d(e){return t.dataIdMap.get(e.dataId).id}return FC(d(a),new Uint8Array(new Int32Array(a.shape).buffer),a.shape.length,i,l,d(s),AX[s.dtype],o,d(p)),p}},{kernelName:tV,backendName:"wasm",setupFunc:function(e){FE=e.wasm.cwrap(tV,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],p="NHWC"===i?a.shape[3]:a.shape[1],d=l*s,h=u*s,c=p/(s*s),m="NHWC"===i?[o,d,h,c]:[o,c,d,h],f=t.makeOutput(m,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(at.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(m).buffer),x=new Uint8Array(new Int32Array(at.computeStrides(m)).buffer),v=t.dataIdMap.get(f.dataId).id;return FE(g,s,"NHWC"===i?1:0,y,a.shape.length-1,b,x,m.length,v),f}},{kernelName:tU,backendName:"wasm",setupFunc:function(e){F$=e.wasm.cwrap(tU,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:p,dimRoundingMode:d}=n,h=hR.computeConv2DInfo(a.shape,s.shape,l,null==u?[1,1]:u,p,d,!0),c=h.filterHeight,m=h.filterWidth,f=h.padInfo.top,g=h.padInfo.right,y=h.padInfo.bottom,b=h.padInfo.left,x=h.dilationHeight,v=h.dilationWidth,w=h.strideHeight,k=h.strideWidth,I=h.inChannels,S=h.outChannels,N="SAME"===h.padInfo.type?1:0;if("channelsLast"!==h.dataFormat)throw Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let T=r.makeOutput(h.outShape,"float32"),_=r.dataIdMap.get(T.dataId).id;return F$(i,a.shape[0],a.shape[1],a.shape[2],o,c,m,f,g,y,b,N,x,v,w,k,I,S,_),T}},{kernelName:tj,backendName:"wasm",setupFunc:function(e){FA=e.wasm.cwrap("Diag",null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=at.sizeFromShape(r.shape),s=n.makeOutput([...r.shape,...r.shape],r.dtype);return FA(n.dataIdMap.get(r.dataId).id,AX[r.dtype],a,n.dataIdMap.get(s.dataId).id),s}},{kernelName:tq,backendName:"wasm",setupFunc:function(e){FF=e.wasm.cwrap(tq,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;if(a.dtype!==s.dtype)throw Error(`Dilation2D error: x must have the same dtype as filter. Got ${a.dtype} and ${s.dtype}`);let u=hR.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),p=n.makeOutput(u.outShape,a.dtype);return FF(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,AX[a.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),p}},{kernelName:tX,backendName:"wasm",setupFunc:function(e){FR=e.wasm.cwrap(tX,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let p=hR.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u),d=n.makeOutput(s.shape,s.dtype);return FR(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,AX[a.dtype],p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.filterHeight,p.filterWidth,p.padInfo.top,p.padInfo.left),d}},{kernelName:tK,backendName:"wasm",setupFunc:function(e){FD=e.wasm.cwrap(tK,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let p=hR.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u),d=n.makeOutput(a.shape,a.dtype);return FD(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,AX[a.dtype],p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.filterHeight,p.filterWidth,p.padInfo.top,p.padInfo.left),d}},FO,{kernelName:t0,backendName:"wasm",setupFunc:function(e){FM=e.wasm.cwrap(t0,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=n.makeOutput(a.shape,"float32");return FM(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(s.dataId).id),s}},FL,Fz,FP,{kernelName:t4,backendName:"wasm",kernelFunc:FB},FW,{kernelName:t8,backendName:"wasm",kernelFunc:FV},{kernelName:t7,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,p]=r.shape;return FU(s,o,l,u,p,i),a},setupFunc:function(e){FU=e.wasm.cwrap(t7,null,["number","number","number","number","number","number"])}},F7,F9,{kernelName:nt,backendName:"wasm",setupFunc:function(e){FG=e.wasm.cwrap(nt,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,p=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(i.dataId).id,h=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,m=null!=u?t.dataIdMap.get(u.dataId).id:0,f=t.makeOutput(s.shape,s.dtype);if(0===at.sizeFromShape(s.shape))return f;let g=t.dataIdMap.get(f.dataId).id;return FG(p,d,h,c,m,a,g),f}},{kernelName:rY,backendName:"wasm",setupFunc:function(e){FH=e.wasm.cwrap(rY,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dataFormat:d,dimRoundingMode:h,activation:c,leakyreluAlpha:m}=n,f=hR.computeConv2DInfo(a.shape,s.shape,l,p,u,h),g=AY[c];if(null==g)throw Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=f.outChannels,v=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=f.filterHeight,k=f.filterWidth,I=f.padInfo.top,S=f.padInfo.right,N=f.padInfo.bottom,T=f.padInfo.left,_=f.dilationHeight,C=f.dilationWidth,E=f.strideHeight,$=f.strideWidth,A=f.inChannels,F="SAME"===f.padInfo.type?1:0,R=f.batchSize,D=f.inHeight,M=f.inWidth;if("NHWC"!==d)throw Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let O=r.makeOutput(f.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return FH(y,R,D,M,b,w,k,v,I,S,N,T,F,_,C,E,$,A,x,g,z,m||0,L),O}},{kernelName:rZ,backendName:"wasm",setupFunc:function(e){Fj=e.wasm.cwrap(rZ,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dataFormat:d,dimRoundingMode:h,activation:c,leakyreluAlpha:m}=n,f=hR.computeConv2DInfo(a.shape,s.shape,l,p,u,h,!0),g=AY[c];if(null==g)throw Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=f.outChannels,v=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=f.filterHeight,k=f.filterWidth,I=f.padInfo.top,S=f.padInfo.right,N=f.padInfo.bottom,T=f.padInfo.left,_=f.dilationHeight,C=f.dilationWidth,E=f.strideHeight,$=f.strideWidth,A=f.inChannels,F="SAME"===f.padInfo.type?1:0,R=f.batchSize,D=f.inHeight,M=f.inWidth;if("NHWC"!==d)throw Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let O=r.makeOutput(f.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return Fj(y,R,D,M,b,w,k,v,I,S,N,T,F,_,C,E,$,A,x,g,z,m||0,L),O}},{kernelName:nr,backendName:"wasm",setupFunc:function(e){Fq=e.wasm.cwrap(nr,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=hu.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;let p=a.shape,d=p[p.length-1],h=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(l).buffer),f=t.dataIdMap.get(u.dataId).id;return Fq(h,AX[r.dtype],c,i,d,o,m,f),u}},{kernelName:nn,backendName:"wasm",setupFunc:function(e){FK=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=at.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),p=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];at.assert(t<=p-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${p-1}]`)}let d=hR.segment_util.collectGatherOpShapeInfo(a,s,l,o),h=Fs({inputs:{x:a},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),c=at.sizeFromShape(s.shape),m=Fs({inputs:{x:s},attrs:{shape:[d.batchSize,c/d.batchSize]},backend:t}),f=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],g=t.makeOutput(f,a.dtype);if(0===at.sizeFromShape(a.shape))return g;let y=h.shape.length-1,b=t.dataIdMap.get(h.dataId).id,x=t.dataIdMap.get(m.dataId).id,v=t.dataIdMap.get(g.dataId).id,w=new Uint8Array(new Int32Array(at.computeStrides(h.shape)).buffer),k=new Uint8Array(new Int32Array(at.computeStrides(f)).buffer);return FK(b,AX[a.dtype],w,y,x,d.batchSize,k,v),t.disposeData(h.dataId),t.disposeData(m.dataId),g.shape=d.outputShape,g}},Re,Rt,{kernelName:ni,backendName:"wasm",kernelFunc:A0},Rn,Rr,Ra,{kernelName:nh,backendName:"wasm",setupFunc:function(e){FX=e.wasm.cwrap(nh,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==at.sizeFromShape(t.shape)){let e=r.dataIdMap.get(s.dataId).id;FX(a,AX[t.dtype],n,e)}return s}},Rs,Ri,{kernelName:nf,backendName:"wasm",setupFunc:function(e){FY=e.wasm.cwrap(nf,null,["number","number","number","number"])},kernelFunc:function(e){let{attrs:t,backend:n}=e,{start:r,stop:a,num:s}=t,i=Math.floor(s),o=n.makeOutput([i],"float32");return FY(n.dataIdMap.get(o.dataId).id,r,a,i),o}},Rl,Ro,Ru,Rp,Rd,Rh,{kernelName:nS,backendName:"wasm",setupFunc:function(e){FZ=e.wasm.cwrap(nS,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;if("float32"!==a.dtype)throw Error("LRN error: x must have dtype float32");let u=n.makeOutput(a.shape,a.dtype);return FZ(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(u.dataId).id,a.shape[3],s,i,o,l),u}},{kernelName:nN,backendName:"wasm",setupFunc:function(e){FJ=e.wasm.cwrap(nN,null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=r;if("float32"!==a.dtype||"float32"!==s.dtype||"float32"!==i.dtype)throw Error("LRNGrad error: x, y, and dy must have dtype float32");let d=n.makeOutput(a.shape,a.dtype);return FJ(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,i.shape[3],o,l,u,p),d}},{kernelName:n_,backendName:"wasm",setupFunc:function(e){FQ=e.wasm.cwrap(n_,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:d,inputWasTransposed:h}=A2(i,a,t);if(h){let e=t.dataIdMap.get(u.dataId).id;l=u,o=e}let c=l.shape.length;hR.assertAxesAreInnerMostDims("max",p,c);let[m,f]=hR.computeOutAndReduceShapes(l.shape,p),g=at.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(0!==at.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;FQ(o,AX[i.dtype],g,e)}if(h&&t.disposeData(u.dataId),s){let e=hR.expandShapeToKeepDim(y.shape,d);y.shape=e}return y}},Rc,{kernelName:nE,backendName:"wasm",setupFunc:function(e){F0=e.wasm.cwrap(nE,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;at.assert("float32"===a.dtype,()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`);let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,p=hR.computePool2DInfo(a.shape,i,o,1,l,u),d=p.filterHeight,h=p.filterWidth,c=p.padInfo.top,m=p.padInfo.right,f=p.padInfo.bottom,g=p.padInfo.left,y=p.dilationHeight,b=p.dilationWidth,x=p.strideHeight,v=p.strideWidth,w=p.inChannels,k=p.outChannels;if("channelsLast"!==p.dataFormat)throw Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let I=r.makeOutput(p.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return F0(s,a.shape[0],a.shape[1],a.shape[2],d,h,c,m,f,g,y,b,x,v,w,k,S),I}},{kernelName:nA,backendName:"wasm",setupFunc:function(e){F1=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,p=hR.computePool3DInfo(a.shape,s,i,1,o,l,u),d=n.makeOutput(p.outShape,a.dtype);return F1(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),d}},{kernelName:nF,backendName:"wasm",setupFunc:function(e){F2=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=hR.computePool3DInfo(s.shape,i,o,1,l,u),d=n.makeOutput(s.shape,s.dtype);return F2(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,p.batchSize,p.inChannels,p.inDepth,p.inHeight,p.inWidth,p.outDepth,p.outHeight,p.outWidth,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),d}},{kernelName:n$,backendName:"wasm",setupFunc:function(e){F3=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,p=hR.computePool2DInfo(s.shape,i,o,1,l,u),d=n.makeOutput(s.shape,s.dtype);return F3(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.top,p.padInfo.left),d}},{kernelName:nR,backendName:"wasm",setupFunc:function(e){F4=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=r;at.assert(4===a.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);let u=[1,1];at.assert(hR.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let p=hR.computePool2DInfo(a.shape,s,i,[1,1],o),d=n.makeOutput(p.outShape,a.dtype),h=n.makeOutput(p.outShape,"int32");return F4(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,n.dataIdMap.get(h.dataId).id,AX[a.dtype],l,p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.top,p.padInfo.left),[d,h]}},{kernelName:nD,backendName:"wasm",setupFunc:function(e){F6=e.wasm.cwrap(nD,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:d,originalAxes:h,inputWasTransposed:c}=A2(i,a,t),m=d;if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e,m=hR.getInnerMostAxes(m.length,u.shape.length))}hR.assertAxesAreInnerMostDims("mean",m,u.shape.length);let[f,g]=hR.computeOutAndReduceShapes(u.shape,m),y=at.sizeFromShape(g),b=u;"float32"!==u.dtype&&(b=Fl({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(f,"float32");if(0!==at.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;F6(l,y,e)}if(c&&t.disposeData(p.dataId),s){let e=hR.expandShapeToKeepDim(x.shape,h);x.shape=e}return"float32"!==u.dtype&&t.disposeData(b.dataId),x}},{kernelName:nM,backendName:"wasm",setupFunc:function(e){F5=e.wasm.cwrap(nM,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:d,originalAxes:h,inputWasTransposed:c}=A2(i,a,t);if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e)}let m=u.shape.length;hR.assertAxesAreInnerMostDims("min",d,m);let[f,g]=hR.computeOutAndReduceShapes(u.shape,d),y=at.sizeFromShape(g),b=t.makeOutput(f,u.dtype);if(0!==at.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;F5(l,AX[i.dtype],y,e)}if(c&&t.disposeData(p.dataId),s){let e=hR.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}},Rm,{kernelName:nL,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map((e,n)=>e[0]+t.shape[n]+e[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),p=r.map(e=>e[0]),d=r.map(e=>e[1]),h=new Uint8Array(new Int32Array(p).buffer),c=new Uint8Array(new Int32Array(d).buffer);return Rv(i,u,t.shape.length,AX[t.dtype],h,c,F8[a],l),o},setupFunc:function(e){Rv=e.wasm.cwrap(nL,null,["number","array","number","number","array","array","number","number"])}},{kernelName:nP,backendName:"wasm",setupFunc:function(e){Rk=e.wasm.cwrap(nP,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;if("float32"!==a.dtype)throw Error(`Tensor logits must have dtype float32, got ${a.dtype}`);let l=o?a:Rf({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),[u,p]=l.shape,d=n.makeOutput([u,s],"int32");return Rk(n.dataIdMap.get(l.dataId).id,u,p,s,i,n.dataIdMap.get(d.dataId).id),o||n.disposeData(l.dataId),d}},Rg,Ry,Rb,{kernelName:nU,backendName:"wasm",setupFunc:function(e){RI=e.wasm.cwrap(nU,"number",["number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(l.dataId).id,{pSelectedIndices:d,selectedSize:h,pSelectedScores:c,pValidOutputs:m}=Rx(t,RI(u,p,s,a,i));return t.wasm._free(c),t.wasm._free(m),t.makeOutput([h],"int32",d)}},{kernelName:nG,backendName:"wasm",setupFunc:function(e){RS=e.wasm.cwrap(nG,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,p=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(u.dataId).id,{pSelectedIndices:h,selectedSize:c,pSelectedScores:m,pValidOutputs:f}=Rx(t,RS(p,d,s,a,i,o));return t.wasm._free(m),[t.makeOutput([c],"int32",h),t.makeOutput([],"int32",f)]}},{kernelName:nH,backendName:"wasm",setupFunc:function(e){RN=e.wasm.cwrap(nH,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,p=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(u.dataId).id,{pSelectedIndices:h,selectedSize:c,pSelectedScores:m,pValidOutputs:f}=Rx(t,RN(p,d,s,a,i,o));return t.wasm._free(f),[t.makeOutput([c],"int32",h),t.makeOutput([c],"float32",m)]}},RE,{kernelName:nq,backendName:"wasm",setupFunc:function(e){RT=e.wasm.cwrap(nq,null,["number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=n.makeOutput([...a.shape,i],s),p=n.dataIdMap.get(u.dataId).id,d=n.dataIdMap.get(a.dataId).id;return RT(d,i,o,l,p),u}},{kernelName:nj,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},{kernelName:nK,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return FB({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{at.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),at.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=Fg({inputs:t.map(e=>{let t=FB({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeData(e.dataId)),l}},R$,AK(nZ,!1),{kernelName:nJ,backendName:"wasm",setupFunc:function(e){RC=e.wasm.cwrap(nJ,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r;"float32"!==r.dtype&&(l=Fl({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(l.dataId).id);let u=n.makeOutput(r.shape,"float32"),p=n.dataIdMap.get(u.dataId).id;return RC(o,i,p),"float32"!==r.dtype&&n.disposeData(l.dataId),u}},{kernelName:nQ,backendName:"wasm",setupFunc:function(e){r=e.wasm.cwrap(nQ,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:s,keepDims:i}=a,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,u=l,p=o,{transposed:d,axes:h,originalAxes:c,inputWasTransposed:m}=A2(o,s,t),f=h;if(m){let e=t.dataIdMap.get(d.dataId).id;e!==l&&(p=d,u=e,f=hR.getInnerMostAxes(f.length,p.shape.length))}hR.assertAxesAreInnerMostDims("prod",f,p.shape.length);let[g,y]=hR.computeOutAndReduceShapes(p.shape,f),b=at.sizeFromShape(y),x=t.makeOutput(g,p.dtype);if(0!==at.sizeFromShape(p.shape)){let e=t.dataIdMap.get(x.dataId).id;r(u,b,AX[x.dtype],e)}if(m&&t.disposeData(d.dataId),i){let e=hR.expandShapeToKeepDim(x.shape,c);x.shape=e}return x}},{kernelName:n3,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=Sa(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},AK(tZ,!0),AG(n6),AG(n5),AG(rn),{kernelName:n8,backendName:"wasm",kernelFunc:Fs},{kernelName:re,backendName:"wasm",setupFunc:function(e){a=e.wasm.cwrap(re,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{images:s}=n,{alignCorners:i,halfPixelCenters:o,size:l}=r,[u,p]=l,[d,h,c,m]=s.shape,f=[d,u,p,m],g=t.dataIdMap.get(s.dataId),y;"float32"!==g.dtype&&(y=Fl({backend:t,inputs:{x:s},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(y.dataId));let b=g.id,x=t.makeOutput(f,"float32");if(0===at.sizeFromShape(s.shape))return x;let v=t.dataIdMap.get(x.dataId).id;return a(b,d,h,c,m,u,p,i?1:0,o?1:0,v),null!=y&&t.disposeData(y.dataId),x}},{kernelName:rt,backendName:"wasm",setupFunc:function(e){s=e.wasm.cwrap(rt,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:o}=r,l=n.makeOutput(a.shape,"float32"),u=n.dataIdMap.get(a.dataId),p;return"float32"!==u.dtype&&(p=Fl({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),u=n.dataIdMap.get(p.dataId)),s(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(l.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(i.shape).buffer),o),null!=p&&n.disposeData(p.dataId),l}},{kernelName:n7,backendName:"wasm",setupFunc:function(e){i=e.wasm.cwrap(n7,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:o,size:l}=r,[u,p]=l,[d,h,c,m]=a.shape,f=t.makeOutput([d,u,p,m],"float32");if(0===at.sizeFromShape(a.shape))return f;let g=t.dataIdMap.get(a.dataId),y;"float32"!==g.dtype&&(y=Fl({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(y.dataId));let b=g.id,x=t.dataIdMap.get(f.dataId).id;return i(b,d,h,c,m,u,p,s?1:0,o?1:0,x),null!=y&&t.disposeData(y.dataId),f}},{kernelName:n9,backendName:"wasm",setupFunc:function(e){o=e.wasm.cwrap(n9,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,l=n.makeOutput(a.shape,"float32"),u=n.dataIdMap.get(a.dataId),p;return"float32"!==u.dtype&&(p=Fl({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),u=n.dataIdMap.get(p.dataId)),o(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(l.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),null!=p&&n.disposeData(p.dataId),l}},{kernelName:rr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=at.parseAxisParam(s,a.shape);if(0===a.shape.length)return A0({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);l(u,d,i.length,h,a.shape.length,p);let c=Fs({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),c},setupFunc:function(e){l=e.wasm.cwrap(rr,null,["number","array","number","array","number","number"])}},{kernelName:rK,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),p=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(l.dataId).id,[h,c,m,f]=a.shape,[g,y]=hR.getImageCenter(o,c,m),b="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],x=new Uint8Array(new Int32Array(b).buffer);return u(p,h,c,m,f,s,g,y,x,b.length,d),l},setupFunc:function(e){u=e.wasm.cwrap(rK,null,["number","number","number","number","number","number","number","number","array","number","number"])}},AG(ra),AG(rs),{kernelName:ri,backendName:"wasm",setupFunc:function(e){p=e.wasm.cwrap(ri,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===at.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:c}=u7.calculateShapes(s,a,i),m=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,g=new Uint8Array(new Int32Array(h).buffer),y=t.dataIdMap.get(o.dataId).id;return p(m,f,AX[s.dtype],l,u,d,g,c,y),o}},{kernelName:rl,backendName:"wasm",setupFunc:function(e){d=e.wasm.cwrap(rl,null,["number","number","number","number","number","number","bool","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r;if(a.dtype!==s.dtype)throw Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${a.dtype} and ${s.dtype}`);let o=n.makeOutput(s.shape,"int32");function l(e){return n.dataIdMap.get(e.dataId).id}return d(l(a),l(s),a.shape[0],a.shape[1],s.shape[1],AX[a.dtype],"left"===i,l(o)),o}},{kernelName:ru,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),p=n.dataIdMap.get(u.dataId).id,d=r.shape.length,c=a.shape.length,m=0===d||d>1||1===c?1:at.sizeFromShape(a.shape.slice(1));return h(i,o,l,m,p),u},setupFunc:function(e){h=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},AG(rp),{kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){c=e.wasm.cwrap(rf,null,["number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===at.sizeFromShape(a.shape)||c(r,s),a}},AG(rm),AG(rh),AG(rc),{kernelName:rd,backendName:"wasm",kernelFunc:Fi},{kernelName:rw,backendName:"wasm",setupFunc:function(e){Rw=e.wasm.cwrap(rw,null,["number","number","number","number"])},kernelFunc:Rf},AG(rg),{kernelName:rx,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=at.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=R$.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=hR.getReshaped(u.shape,s,o,!1),d=hR.getPermuted(p.length,s.length,!1),h=hR.getReshapedPermuted(u.shape,s,o,!1),c=Fs({inputs:{x:u},backend:n,attrs:{shape:p}}),m=A1({inputs:{x:c},backend:n,attrs:{perm:d}}),f=Fs({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(m.dataId),f}},{kernelName:rk,backendName:"wasm",setupFunc:function(e){m=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=n,o=r.shape[0],l=r.shape[1],u=t.readSync(s.dataId)[0],p=[o+u,l],d=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(p,r.dtype),g=t.dataIdMap.get(f.dataId).id,y=t.makeOutput(p.slice(0,1),a.dtype),b=t.dataIdMap.get(y.dataId).id,x=t.makeOutput([u],"bool"),v=t.dataIdMap.get(x.dataId).id,w=t.makeOutput([o],r.dtype),k=t.dataIdMap.get(w.dataId).id,I=t.makeOutput([4],"int32"),S=t.dataIdMap.get(I.dataId).id,N=m(d,h,AX[a.dtype],o,u,l,c,g,b,v,k,S),T=t.readSync(I.dataId),_;switch(T[0]){case 1:_=hR.getSparseFillEmptyRowsIndicesDenseShapeMismatch(T[1]);break;case 2:_=hR.getSparseFillEmptyRowsNegativeIndexErrorMessage(T[1],T[2]);break;case 3:_=hR.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(T[1],T[2],T[3]);break;default:_=""}if(t.disposeData(I.dataId),_)throw t.disposeData(f.dataId),t.disposeData(y.dataId),t.disposeData(x.dataId),t.disposeData(w.dataId),Error(_);let C=f,E=y;return N!==p[0]&&(C=Fi({inputs:{x:f},attrs:{begin:0,size:[N,l]},backend:t}),E=Fi({inputs:{x:y},attrs:{begin:0,size:N},backend:t}),t.disposeData(f.dataId),t.disposeData(y.dataId)),[C,E,x,w]}},{kernelName:rI,backendName:"wasm",setupFunc:function(e){f=e.wasm.cwrap(rI,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(1!==a.shape.length)throw Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(1!==s.shape.length)throw Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],p=at.sizeFromShape(s.shape),d=t.makeOutput([u,p],r.dtype),h=t.dataIdMap.get(d.dataId).id,c=t.makeOutput([p],s.dtype),m=t.dataIdMap.get(c.dataId).id,g=t.makeOutput([3],"int32"),y=t.dataIdMap.get(g.dataId).id;f(i,o,l,u,h,m,y);let b=t.readSync(g.dataId),x;switch(b[0]){case 0:x=hR.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break;case 1:x=hR.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break;case 2:x=hR.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));x=hR.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));x=hR.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:x=""}if(t.disposeData(g.dataId),x)throw t.disposeData(d.dataId),t.disposeData(c.dataId),Error(x);return[d,c]}},{kernelName:rS,backendName:"wasm",setupFunc:RA,kernelFunc:function(e){return RF(e,!0)}},{kernelName:rN,backendName:"wasm",setupFunc:RA,kernelFunc:function(e){return RF(e,!1)}},{kernelName:rT,backendName:"wasm",setupFunc:function(e){y=e.wasm.cwrap(rT,null,["number","number","number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=n,{outputShape:o}=r,l=t.makeOutput(o,i.dtype);if(0===at.sizeFromShape(o))return l;let{sliceRank:u,numUpdates:p,sliceSize:d,strides:h,outputSize:c}=hR.calculateShapes(s,a,o),m=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(i.dataId).id,b=new Uint8Array(new Int32Array(h).buffer),x=t.dataIdMap.get(l.dataId).id;return y(m,f,s.shape.length,g,AX[i.dtype],u,p,d,b,c,x),l}},{kernelName:rv,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=at.parseAxisParam(i,a.shape)[0],l=hR.prepareSplitSize(a,s,o),u=Array(a.shape.length).fill(0),p=a.shape.slice();return l.map(e=>{let t=[...p];t[o]=e;let n=Fi({inputs:{x:a},attrs:{begin:u,size:t},backend:r});return u[o]+=e,n})}},AG(ry),AG(rC),AK(r_,!0),{kernelName:rj,backendName:"wasm",setupFunc:function(e){b=e.wasm.cwrap(rj,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return b(i,a,AX[s.dtype],l),o}},{kernelName:r$,backendName:"wasm",setupFunc:function(e){x=e.wasm.cwrap(r$,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:v,strides:w}=hd.sliceInfo(a.shape,s,i,o,l,u,p,d,h),k;if(f)k=Fs({inputs:{x:a},backend:t,attrs:{shape:m}});else if(g||y){at.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let e=hd.computeOutShape(b,v,w),n=Fi({inputs:{x:a},backend:t,attrs:{begin:b,size:e}});k=Fs({inputs:{x:n},backend:t,attrs:{shape:m}}),t.disposeData(n.dataId)}else{let e=t.makeOutput(c,"float32"),n=t.dataIdMap.get(a.dataId).id,r=new Uint8Array(new Int32Array(at.computeStrides(a.shape)).buffer),s=new Uint8Array(new Int32Array(b).buffer),i=new Uint8Array(new Int32Array(v).buffer),o=new Uint8Array(new Int32Array(w).buffer),l=new Uint8Array(new Int32Array(c).buffer),u=new Uint8Array(new Int32Array(at.computeStrides(c)).buffer),p=t.dataIdMap.get(e.dataId).id;x(n,r,a.shape.length,s,i,o,l,u,c.length,p),k=Fs({inputs:{x:e},backend:t,attrs:{shape:m}}),t.disposeData(e.dataId)}return k}},{kernelName:rA,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:l,rightPad:u,padWidth:p,preserveShortSequences:d}=r,[h,c]=SI(t.readSync(a.dataId),t.readSync(s.dataId),i,o,l,u,p,d),m=t.makeOutput([h.length],"string");t.dataIdMap.get(m.dataId).stringBytes=h;let f=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(f).set(c),[m,f]}},{kernelName:rF,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,[o,l,u]=SS(t.readSync(a.dataId),t.readSync(s.dataId)[0],i),p=l.length,d=t.makeOutput([p,2],"int32");t.typedArrayFromHeap(d).set(o);let h=t.makeOutput([p],"string");t.dataIdMap.get(h.dataId).stringBytes=l;let c=t.makeOutput([2],"int32");return t.typedArrayFromHeap(c).set(u),[d,h,c]}},{kernelName:rR,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,i=SN(t.readSync(a.dataId),s),o=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(o).set(i),o}},AK(rD,!0),{kernelName:rb,backendName:"wasm",setupFunc:function(e){v=e.wasm.cwrap(rb,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:d,originalAxes:h,inputWasTransposed:c}=A2(i,a,t),m=d;if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e,m=hR.getInnerMostAxes(m.length,u.shape.length))}hR.assertAxesAreInnerMostDims("sum",m,u.shape.length);let[f,g]=hR.computeOutAndReduceShapes(u.shape,m),y=at.sizeFromShape(g),b=t.makeOutput(f,u.dtype);if(0!==at.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;v(l,y,AX[b.dtype],e)}if(c&&t.disposeData(p.dataId),s){let e=hR.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}},AG(rM),AG(rO),{kernelName:ro,backendName:"wasm",setupFunc:function(e){w=e.wasm.cwrap(ro,null,["number","number","number","number","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=n,{}=r,o=t.makeOutput(a.shape,a.dtype);if(0===at.sizeFromShape(a.shape))return o;let{sliceRank:l,numUpdates:u,sliceSize:p,strides:d,outputSize:h}=u7.calculateShapes(i,s,a.shape),c=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(i.dataId).id,f=t.dataIdMap.get(a.dataId).id,g=new Uint8Array(new Int32Array(d).buffer),y=t.dataIdMap.get(o.dataId).id;return w(c,m,AX[i.dtype],l,u,p,g,h,y,f),o}},{kernelName:rL,backendName:"wasm",setupFunc:function(e){k=e.wasm.cwrap(rL,null,["number","array","number","array","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),p=n.makeOutput(o,a.dtype),d=n.dataIdMap.get(p.dataId).id;return k(s,l,a.shape.length,u,o.length,AX[p.dtype],d),p}},{kernelName:rz,backendName:"wasm",setupFunc:function(e){I=e.wasm.cwrap(rz,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,r.dtype),p=t.dataIdMap.get(u.dataId).id,d=t.makeOutput(l,"int32"),h=t.dataIdMap.get(d.dataId).id;return I(i,o,r.shape.length,AX[r.dtype],a,s,p,h),[u,d]}},{kernelName:rP,backendName:"wasm",setupFunc:function(e){S=e.wasm.cwrap(rP,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[p,d,h,c]=a.shape,[m,f]=null!=u?u:[d,h],g=[p,m,f,c],y=new Uint8Array(new Int32Array(at.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(at.computeStrides(g)).buffer),x=t.makeOutput(g,a.dtype),v=t.dataIdMap.get(x.dataId).id,w=t.dataIdMap.get(a.dataId).id,k=t.dataIdMap.get(s.dataId).id,I;switch(o){case"constant":default:I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4}return S(w,k,s.shape[0]>1,p,m,f,c,h,d,y,a.shape.length-1,b,g.length-1,"nearest"===i?1:2,I,l,v),x}},{kernelName:rB,backendName:"wasm",kernelFunc:A1,setupFunc:function(e){A4=e.wasm.cwrap(rB,null,["number","array","number","number","number","array","number"])}},{kernelName:rW,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t,{outputValues:i,outputShape:o,indices:l}=SA(r.readSync(s.dataId),a,s.shape,s.dtype);return[r.makeOutput(o,s.dtype,void 0,i),r.makeOutput([l.length],"int32",void 0,l)]}},{kernelName:rV,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=Array(o-1),u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=a.shape[e]);let p=Array(i),d=Array(o).fill(0),h=a.shape.slice();h[s]=1;for(let e=0;e<p.length;e++)d[s]=e,p[e]=Fi({inputs:{x:a},attrs:{begin:d,size:h},backend:n});return p.map(({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l}))}},{kernelName:rH,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}])r6(e);var RR=e8;RR.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}}),RR.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(RR.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var RD=P(ea()),RM=P(es()),RO=P(ei()),RL=RD.default||RD,Rz=RO.default||RO,RP=class extends el{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(RY),RZ=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new eo(this,aX)}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=at.now();return e(),{kernelMs:at.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if("string"===r){this.dataIdMap.set(e,{id:s,stringBytes:t,shape:n,dtype:r,memoryOffset:null,refCount:a});return}let i=at.sizeFromShape(n),o=i*at.bytesPerElement(r),l=this.wasm._malloc(o)>>>0;this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return(null==t||0===t)&&(null==n||n>=i.length)?i:i.slice(t,n);t=t||0,n=n||at.sizeFromShape(s);let o=at.bytesPerElement(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,r){let a;if(null==n)a=this.write(null!=r?r:null,e,t);else{let r=this.dataIdNextNumber++;a={id:r},this.dataIdMap.set(a,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=at.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,s,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=at.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw Error(`Unknown dtype ${t}`)}}};function RB(e,t,n){if(null!=RU)return RU;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=RH&&null!=RH[r]?RH[r]:n+r}async function RW(){let[e,t]=await Promise.all([e8.getAsync("WASM_HAS_SIMD_SUPPORT"),e8.getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,r)=>{var a;let s,i={};i.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){let e=new Blob([RM.wasmWorkerContents.replace(/\n/g,"\\n")],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?RB(e,t,null!=RG?RG:r):r+n},Rq&&(i.instantiateWasm=(a=RB(e,t,null!=RG?RG:""),(e,t)=>(at.fetch(a,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${a}'`),n.arrayBuffer().then(n=>{WebAssembly.instantiate(n,e).then(e=>{t(e.instance,e.module)})})}),{})));let o=!1;i.onAbort=()=>{o||Rj||(Rj=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==RU?(i.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+RL.toString()],{type:"text/javascript"}),s=RL(i)):s=Rz(i),s.then(e=>{o=!0,Rj=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}).catch(r)})}var RV=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],RU=null,RG=null,RH={},Rj=!1,Rq=!1;function RK(e,t=!1){if(si("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Rj)throw Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");RU=e,Rq=t}function RX(e,t=!1){if(Rj)throw Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)RG=e;else{RH=e;let t=RV.filter(e=>null==RH[e]);if(t.length>0)throw Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Rq=t}var RY=-1,RZ=-1;function RJ(e){RY=e}function RQ(){if(-1===RZ)throw Error("WASM backend not initialized.");return RZ}var R0="4.22.0";sw("wasm",async()=>{let{wasm:e}=await RW();return new RP(e)},2);var R1="4.22.0",R2={tfjs:R1,"tfjs-core":R1,"tfjs-converter":"4.22.0","tfjs-backend-cpu":"4.22.0","tfjs-backend-webgl":"4.22.0","tfjs-backend-wasm":"4.22.0"},R3={};function R4(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:n,y:r},a)=>{let s=t[a];e.moveTo(s.x,s.y),e.lineTo(n,r)}),n){let n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}C(R3,{AnchorPosition:()=>DU,DrawBox:()=>Dq,DrawBoxOptions:()=>Dj,DrawFaceLandmarks:()=>MM,DrawFaceLandmarksOptions:()=>MD,DrawTextField:()=>DH,DrawTextFieldOptions:()=>DG,drawContour:()=>R4,drawDetections:()=>DK,drawFaceExpressions:()=>MA,drawFaceLandmarks:()=>MO});var R6={};C(R6,{computeReshapedDimensions:()=>Di,getCenterPoint:()=>Do,isDimensions:()=>Ds,isEven:()=>Dr,isFloat:()=>Dn,isTensor:()=>R8,isTensor1D:()=>R7,isTensor2D:()=>R9,isTensor3D:()=>De,isTensor4D:()=>Dt,isValidNumber:()=>Du,isValidProbablitiy:()=>Dp,range:()=>Dl,round:()=>Da});var R5=class e{constructor(e,t){if(!Du(e)||!Du(t))throw Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new e(1/this.width,1/this.height)}};function R8(e,t){return e instanceof aF&&e.shape.length===t}function R7(e){return R8(e,1)}function R9(e){return R8(e,2)}function De(e){return R8(e,3)}function Dt(e){return R8(e,4)}function Dn(e){return e%1!=0}function Dr(e){return e%2==0}function Da(e,t=2){let n=10**t;return Math.floor(e*n)/n}function Ds(e){return e&&e.width&&e.height}function Di({width:e,height:t},n){let r=n/Math.max(t,e);return new R5(Math.round(e*r),Math.round(t*r))}function Do(e){return e.reduce((e,t)=>e.add(t),new Dd(0,0)).div(new Dd(e.length,e.length))}function Dl(e,t,n){return Array(e).fill(0).map((e,r)=>t+r*n)}function Du(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function Dp(e){return Du(e)&&e>=0&&e<=1}var Dd=class e{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(t){return new e(this.x+t.x,this.y+t.y)}sub(t){return new e(this.x-t.x,this.y-t.y)}mul(t){return new e(this.x*t.x,this.y*t.y)}div(t){return new e(this.x/t.x,this.y/t.y)}abs(){return new e(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new e(Math.floor(this.x),Math.floor(this.y))}},Dh=class e{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(Du)}static assertIsValidBox(t,n,r=!1){if(!e.isRect(t))throw Error(`${n} - invalid box: ${JSON.stringify(t)}, expected object with properties x, y, width, height`);if(!r&&(t.width<0||t.height<0))throw Error(`${n} - width (${t.width}) and height (${t.height}) must be positive numbers`)}constructor(t,n=!0){let r=t||{},a=[r.left,r.top,r.right,r.bottom].every(Du),s=[r.x,r.y,r.width,r.height].every(Du);if(!s&&!a)throw Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(r)}`);let[i,o,l,u]=s?[r.x,r.y,r.width,r.height]:[r.left,r.top,r.right-r.left,r.bottom-r.top];e.assertIsValidBox({x:i,y:o,width:l,height:u},"Box.constructor",n),this._x=i,this._y=o,this._width=l,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new Dd(this.left,this.top)}get topRight(){return new Dd(this.right,this.top)}get bottomLeft(){return new Dd(this.left,this.bottom)}get bottomRight(){return new Dd(this.right,this.bottom)}round(){let[t,n,r,a]=[this.x,this.y,this.width,this.height].map(e=>Math.round(e));return new e({x:t,y:n,width:r,height:a})}floor(){let[t,n,r,a]=[this.x,this.y,this.width,this.height].map(e=>Math.floor(e));return new e({x:t,y:n,width:r,height:a})}toSquare(){let{x:t,y:n,width:r,height:a}=this,s=Math.abs(r-a);return r<a&&(t-=s/2,r+=s),a<r&&(n-=s/2,a+=s),new e({x:t,y:n,width:r,height:a})}rescale(t){let n=Ds(t)?t.width:t,r=Ds(t)?t.height:t;return new e({x:this.x*n,y:this.y*r,width:this.width*n,height:this.height*r})}pad(t,n){let[r,a,s,i]=[this.x-t/2,this.y-n/2,this.width+t,this.height+n];return new e({x:r,y:a,width:s,height:i})}clipAtImageBorders(t,n){let{x:r,y:a,right:s,bottom:i}=this,o=Math.max(r,0),l=Math.max(a,0),u=Math.min(s-o,t-o),p=Math.min(i-l,n-l);return new e({x:o,y:l,width:u,height:p}).floor()}shift(t,n){let{width:r,height:a}=this;return new e({x:this.x+t,y:this.y+n,width:r,height:a})}padAtBorders(e,t){let n=this.width+1,r=this.height+1,a=n,s=r,i=this.left,o=this.top,l=this.right,u=this.bottom;return l>t&&(a=-l+t+n,l=t),u>e&&(s=-u+e+r,u=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:u,x:i,ex:l,w:n,h:r}}calibrate(t){return new e({left:this.left+t.left*this.width,top:this.top+t.top*this.height,right:this.right+t.right*this.width,bottom:this.bottom+t.bottom*this.height}).toSquare().round()}},Dc=class extends Dh{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},Dm=class e{constructor(e,t,n,r,a){this._imageDims=new R5(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new Dh(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new Dh(this._box).rescale(this.imageDims.reverse())}forSize(t,n){return new e(this.score,this.classScore,this.className,this.relativeBox,{width:t,height:n})}},Df=class e extends Dm{constructor(e,t,n){super(e,e,"",t,n)}forSize(t,n){let{score:r,relativeBox:a,imageDims:s}=super.forSize(t,n);return new e(r,a,s)}};function Dg(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left))*Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top));return n?r/(e.area+t.area-r):r/Math.min(e.area,t.area)}function Dy(e){let t=e.map(e=>e.x),n=e.map(e=>e.y);return new Dc(t.reduce((e,t)=>t<e?t:e,1/0),n.reduce((e,t)=>t<e?t:e,1/0),t.reduce((e,t)=>e<t?t:e,0),n.reduce((e,t)=>e<t?t:e,0))}function Db(e,t,n,r=!0){let a=t.map((e,t)=>({score:e,boxIndex:t})).sort((e,t)=>e.score-t.score).map(e=>e.boxIndex),s=[];for(;a.length>0;){let t=a.pop();s.push(t);let i=a,o=[];for(let n=0;n<i.length;n++){let a=i[n],s=e[t],l=e[a];o.push(Dg(s,l,r))}a=a.filter((e,t)=>o[t]<=n)}return s}function Dx(e,t){return sd(()=>{let[n,r,a]=t,s=i0([oi([...e.shape.slice(0,3),1],n,"float32"),oi([...e.shape.slice(0,3),1],r,"float32"),oi([...e.shape.slice(0,3),1],a,"float32")],3);return lS(e,s)})}function Dv(e,t=!1){return sd(()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=n>r?2:1,i=t=>{let n=e.shape.slice();return n[s]=t,oi(n,0,"float32")},o=i(Math.round(a*(t?.5:1))),l=a-o.shape[s];return i0([t&&l?i(l):null,e,o].filter(e=>!!e).map(e=>ig(e,"float32")),s)})}function Dw(e){let t=e.slice();for(let e=t.length-1;e>0;e--){let n=Math.floor(Math.random()*(e+1)),r=t[e];t[e]=t[n],t[n]=r}return t}function Dk(e){return 1/(1+Math.exp(-e))}function DI(e){return Math.log(e/(1-e))}var DS=class extends Dh{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},DN=class{constructor(e,t,n=new Dd(0,0)){let{width:r,height:a}=t;this._imgDims=new R5(r,a),this._shift=n,this._positions=e.map(e=>e.mul(new Dd(r,a)).add(n))}get shift(){return new Dd(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(e=>e.sub(this._shift).div(new Dd(this.imageWidth,this.imageHeight)))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new Dd(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let n=e instanceof Df?e.box.floor():new Dh(e);return this.shiftBy(n.x,n.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=Math.floor((a(t)+a(n))/2/.45),i=Do(e),o=Math.floor(Math.max(0,i.x-.5*s)),l=Math.floor(Math.max(0,i.y-.43*s));return new DS(o,l,Math.min(s,this.imageWidth+o),Math.min(s,this.imageHeight+l))}alignMinBbox(e){let t=Dy(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw Error("getRefPointsForAlignment not implemented by base class")}},DT=class extends DN{getRefPointsForAlignment(){let e=this.positions;return[e[0],e[1],Do([e[3],e[4]])]}},D_=class extends DN{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(Do)}},DC=class{constructor(e,t){this._label=e,this._distance=t}get label(){return this._label}get distance(){return this._distance}toString(e=!0){return`${this.label}${e?` (${Da(this.distance)})`:""}`}},DE=class extends Dh{static assertIsValidLabeledBox(e,t){if(Dh.assertIsValidBox(e,t),!Du(e.label))throw Error(`${t} - expected property label (${e.label}) to be a number`)}constructor(e,t){super(e),this._label=t}get label(){return this._label}},D$=class e{constructor(e,t){if("string"!=typeof e)throw Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(t)||t.some(e=>!(e instanceof Float32Array)))throw Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=e,this._descriptors=t}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map(e=>Array.from(e))}}static fromJSON(t){let n=t.descriptors.map(e=>new Float32Array(e));return new e(t.label,n)}},DA=class extends DE{static assertIsValidPredictedBox(e,t){if(DE.assertIsValidLabeledBox(e,t),!Dp(e.score)||!Dp(e.classScore))throw Error(`${t} - expected properties score (${e.score}) and (${e.classScore}) to be a number between [0, 1]`)}constructor(e,t,n,r){super(e,t),this._score=n,this._classScore=r}get score(){return this._score}get classScore(){return this._classScore}};function DF(e){return e.detection instanceof Df}function DR(e,t){return{...e,detection:t}}function DD(){let e=window.fetch;if(!e)throw Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw Error("readFile - filesystem not available for browser environment")}}}function DM(){return"object"==typeof global&&"undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node}function DO(e){let t="";if(!e&&DM())try{e=_("fs")}catch(e){t=e.toString()}return{readFile:e?t=>new Promise((n,r)=>{e.readFile(t,(e,t)=>e?r(e):n(t))}):()=>{throw Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function DL(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=global.Video||global.HTMLVideoElement,r=global.fetch,a=DO();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw Error("createImageElement - missing Image implementation for nodejs environment")},createVideoElement:()=>{if(n)return new n;throw Error("createVideoElement - missing Video implementation for nodejs environment")},fetch:r,...a}}function Dz(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function DP(){return Dz()?void(N=DD()):DM()?void(N=DL()):null}var DB={getEnv:function(){if(!N)throw Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return N},setEnv:function(e){N=e},initialize:DP,createBrowserEnv:DD,createFileSystem:DO,createNodejsEnv:DL,monkeyPatch:function(e){if(N||DP(),!N)throw Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=N.Canvas,Image:n=N.Image}=e;N.Canvas=t,N.Image=n,N.createCanvasElement=e.createCanvasElement||(()=>new t),N.createImageElement=e.createImageElement||(()=>new n),N.ImageData=e.ImageData||N.ImageData,N.Video=e.Video||N.Video,N.fetch=e.fetch||N.fetch,N.readFile=e.readFile||N.readFile},isBrowser:Dz,isNodejs:DM};function DW(e){return DB.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function DV(e){let{Canvas:t,CanvasRenderingContext2D:n}=DB.getEnv();if(e instanceof n)return e;let r=DW(e);if(!(r instanceof t))throw Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d",{willReadFrequently:!0});if(!a)throw Error("resolveContext2d - canvas 2d context is null");return a}DP();var DU=(e=>(e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT",e))(DU||{}),DG=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},DH=class e{constructor(t,n,r={}){this.text="string"==typeof t?[t]:t instanceof e?t.text:t,this.anchor=n,this.options=new DG(r)}measureWidth(e){let{padding:t}=this.options;return this.text.map(t=>e.measureText(t).width).reduce((e,t)=>e<t?t:e,0)+2*t}measureHeight(){let{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){let{anchorPosition:n}=this.options,r=this.measureWidth(e),a=this.measureHeight(),s="BOTTOM_RIGHT"===n||"TOP_RIGHT"===n?this.anchor.x-r:this.anchor.x,i="BOTTOM_LEFT"===n||"BOTTOM_RIGHT"===n?this.anchor.y-a:this.anchor.y;if(t){let{width:e,height:n}=t;return{x:Math.max(Math.min(s,e-r),0),y:Math.max(Math.min(i,n-a),0)}}return{x:s,y:i}}draw(e){let t=DW(e),n=DV(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;let l=this.measureWidth(n),u=this.measureHeight();n.fillStyle=r;let p=this.getUpperLeft(n,t);n.fillRect(p.x,p.y,l,u),n.fillStyle=a,this.text.forEach((e,t)=>{let r=o+p.x,a=o+p.y+(t+1)*s;n.fillText(e,r,a)})}},Dj=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new DG({...s,...a})}},Dq=class{constructor(e,t={}){this.box=new Dh(e),this.options=new Dj(t)}draw(e){let t=DV(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new DH([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function DK(e,t){(Array.isArray(t)?t:[t]).forEach(t=>{let n=t instanceof Df?t.score:DF(t)?t.detection.score:void 0;new Dq(t instanceof Df?t.box:DF(t)?t.detection.box:new Dh(t),{label:n?`${Da(n)}`:void 0}).draw(e)})}function DX(e){let{Image:t,Video:n}=DB.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function DY(e){return new Promise((t,n)=>{if(e instanceof DB.getEnv().Canvas||DX(e)){t(null);return}function r(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),t(e))}e.addEventListener("load",a),e.addEventListener("error",r)})}function DZ(e){return new Promise((t,n)=>{e instanceof Blob||n(Error("bufferToImage - expected buf to be of type: Blob"));let r=new FileReader;r.onload=()=>{"string"!=typeof r.result&&n(Error("bufferToImage - expected reader.result to be a string, in onload"));let e=DB.getEnv().createImageElement();e.onload=()=>t(e),e.onerror=n,e.src=r.result},r.onerror=n,r.readAsDataURL(e)})}function DJ(e){let{Image:t,Video:n}=DB.getEnv();return e instanceof t?new R5(e.naturalWidth,e.naturalHeight):e instanceof n?new R5(e.videoWidth,e.videoHeight):new R5(e.width,e.height)}function DQ({width:e,height:t}){let{createCanvasElement:n}=DB.getEnv(),r=n();return r.width=e,r.height=t,r}function D0(e,t){let{ImageData:n}=DB.getEnv();if(!(e instanceof n)&&!DX(e))throw Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||DJ(e),s=DQ({width:r,height:a});return e instanceof n?DV(s).putImageData(e,0,0):DV(s).drawImage(e,0,0,r,a),s}async function D1(e,t){let n=t||DB.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(Dt(e)?1:0),i=sd(()=>e.as3D(r,a,s).toInt());return await he.toPixels(i,n),i.dispose(),n}function D2(e){let{Image:t,Canvas:n,Video:r}=DB.getEnv();return e instanceof t||e instanceof n||e instanceof r}function D3(e,t,n=!1){let{Image:r,Canvas:a}=DB.getEnv();if(!(e instanceof r||e instanceof a))throw Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return DQ({width:1,height:1});let s=DJ(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=DQ({width:t,height:t}),p=e instanceof a?e:D0(e),d=Math.abs(o-l)/2,h=n&&o<l?d:0,c=n&&l<o?d:0;return p.width>0&&p.height>0&&DV(u).drawImage(p,h,c,o,l),u}var D4=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach((e,t)=>{if(De(e)){this._imageTensors[t]=e,this._inputDimensions[t]=e.shape;return}if(Dt(e)){let n=e.shape[0];if(1!==n)throw Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);this._imageTensors[t]=e,this._inputDimensions[t]=e.shape.slice(1);return}let n=e instanceof DB.getEnv().Canvas?e:D0(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return Dl(this.batchSize,0,1).map((e,t)=>this.getReshapedInputDimensions(t))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return Di({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,sd(()=>uJ(Dl(this.batchSize,0,1).map(n=>{let r=this.getInput(n);if(r instanceof aF){let n=Dt(r)?r:o6(r);return((n=Dv(n,t)).shape[1]!==e||n.shape[2]!==e)&&(n=dv.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof DB.getEnv().Canvas)return he.fromPixels(D3(r,e,t));throw Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)}).map(e=>ig(e,"float32"))).as4D(this.batchSize,e,e,3))}};async function D6(e){if(e instanceof D4)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw Error("toNetInput - empty array passed as input");let n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(DW);return r.forEach((e,r)=>{if(!D2(e)&&!De(e)&&!Dt(e))throw"string"==typeof t[r]?Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`):Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(Dt(e)){let t=e.shape[0];if(1!==t)throw Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}}),await Promise.all(r.map(e=>D2(e)&&DY(e))),new D4(r,Array.isArray(e))}async function D5(e,t){let{Canvas:n}=DB.getEnv(),r=e;if(!(e instanceof n)){let t=await D6(e);if(t.batchSize>1)throw Error("extractFaces - batchSize > 1 not supported");let a=t.getInput(0);r=a instanceof n?a:await D1(a)}let a=DV(r);return t.map(e=>e instanceof Df?e.forSize(r.width,r.height).box.floor():e).map(e=>e.clipAtImageBorders(r.width,r.height)).map(({x:e,y:t,width:n,height:r})=>{let s=DQ({width:n,height:r});return n>0&&r>0&&DV(s).putImageData(a.getImageData(e,t,n,r),0,0),s})}async function D8(e,t){if(!De(e)&&!Dt(e))throw Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(Dt(e)&&e.shape[0]>1)throw Error("extractFaceTensors - batchSize > 1 not supported");return sd(()=>{let[n,r,a]=e.shape.slice(Dt(e)?1:0);return t.map(e=>e instanceof Df?e.forSize(r,n).box:e).map(e=>e.clipAtImageBorders(r,n)).filter(e=>e.width>0&&e.height>0).map(({x:t,y:s,width:i,height:o})=>uV(e.as3D(n,r,a),[s,t,0],[o,i,a]))})}async function D7(e,t){let{fetch:n}=DB.getEnv(),r=await n(e,t);if(!(r.status<400))throw Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}async function D9(e){let t=await D7(e),n=await t.blob();if(!n.type.startsWith("image/"))throw Error(`fetchImage - expected blob type to be of type image/*, instead have: ${n.type}, for url: ${t.url}`);return DZ(n)}async function Me(e){return(await D7(e)).json()}async function Mt(e){return new Float32Array(await (await D7(e)).arrayBuffer())}async function Mn(e){let t=await D7(e),n=await t.blob();if(!n.type.startsWith("video/"))throw Error(`fetchVideo - expected blob type to be of type video/*, instead have: ${n.type}, for url: ${t.url}`);return new Promise((e,t)=>{n instanceof Blob||t(Error("bufferToVideo - expected buf to be of type: Blob"));let r=DB.getEnv().createVideoElement();r.oncanplay=()=>e(r),r.onerror=t,r.playsInline=!0,r.muted=!0,r.src=URL.createObjectURL(n),r.play()})}function Mr(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter(e=>e),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return{modelBaseUri:i=e.startsWith("/")?`/${i}`:i,manifestUri:"/"===i?`/${s}`:`${i}/${s}`}}async function Ma(e,t){let{manifestUri:n,modelBaseUri:r}=Mr(e,t),a=await Me(n);return dW.loadWeights(a,r)}function Ms(e,t,n=!1){let{width:r,height:a}=n?DJ(t):t;return e.width=r,e.height=a,{width:r,height:a}}var Mi=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map(({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)}))}getTrainableParams(){return this.getParamList().filter(e=>e.tensor instanceof aD)}getFrozenParams(){return this.getParamList().filter(e=>!(e.tensor instanceof aD))}variable(){this.getFrozenParams().forEach(({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())})}freeze(){this.getTrainableParams().forEach(({path:e,tensor:t})=>{let n=se(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)})}dispose(e=!0){this.getParamList().forEach(t=>{if(e&&t.tensor.isDisposed)throw Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:e})=>Array.from(e.dataSync())).reduce((e,t)=>e.concat(t)))}async load(e){if(e instanceof Float32Array){this.extractWeights(e);return}await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw Error(`${this._name}.loadFromUri - expected model uri`);let t=await Ma(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=DB.getEnv(),{manifestUri:n,modelBaseUri:r}=Mr(e,this.getDefaultModelName()),a=dW.weightsLoaderFactory(e=>Promise.all(e.map(e=>t(e).then(e=>"string"==typeof e?Buffer.from(e):e.buffer)))),s=JSON.parse((await t(n)).toString()),i=await a(s,r);this.loadFromWeightMap(i)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw Error("traversePropertyPath - model has no loaded params");let{obj:t,objProp:n}=e.split("/").reduce((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}},{nextObj:this.params});if(!t||!n||!(t[n]instanceof aF))throw Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:t,objProp:n}}};function Mo(e,t,n){return sd(()=>ix(uM(e,t.depthwise_filter,t.pointwise_filter,n,"same"),t.bias))}function Ml(e,t,n=!1){return sd(()=>{let r=uN(n?ix(oh(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):Mo(e,t.conv0,[2,2])),a=Mo(r,t.conv1,[1,1]),s=Mo(uN(ix(r,a)),t.conv2,[1,1]);return uN(ix(r,ix(a,s)))})}function Mu(e,t,n=!1,r=!0){return sd(()=>{let a=uN(n?ix(oh(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):Mo(e,t.conv0,r?[2,2]:[1,1])),s=Mo(a,t.conv1,[1,1]),i=Mo(uN(ix(a,s)),t.conv2,[1,1]),o=Mo(uN(ix(a,ix(s,i))),t.conv3,[1,1]);return uN(ix(a,ix(s,ix(i,o))))})}function Mp(e,t,n="same",r=!1){return sd(()=>{let a=ix(oh(e,t.filters,[1,1],n),t.bias);return r?uN(a):a})}function Md(e,t){Object.keys(e).forEach(n=>{t.some(e=>e.originalPath===n)||e[n].dispose()})}function Mh(e,t){return(n,r,a,s)=>{let i=u6(e(n*r*a*a),[a,a,n,r]),o=u2(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function Mc(e,t){return(n,r,a)=>{let s=u3(e(n*r),[n,r]),i=u2(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var Mm=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function Mf(e,t){return(n,r,a)=>{let s=u6(e(9*n),[3,3,n,1]),i=u6(e(n*r),[1,1,n,r]),o=u2(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new Mm(s,i,o)}}function Mg(e){return t=>new Mm(e(`${t}/depthwise_filter`,4),e(`${t}/pointwise_filter`,4),e(`${t}/bias`,1))}function My(e,t){return(n,r,a)=>{let s=e[n];if(!R8(s,r))throw Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function Mb(e){let t=e;return{extractWeights:function(e){let n=t.slice(0,e);return t=t.slice(e),n},getRemainingWeights:function(){return t}}}function Mx(e,t){let n=Mh(e,t),r=Mf(e,t);function a(e,t,s,i=!1){return{conv0:i?n(e,t,3,`${s}/conv0`):r(e,t,`${s}/conv0`),conv1:r(t,t,`${s}/conv1`),conv2:r(t,t,`${s}/conv2`)}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function(e,t,n,s=!1){let{conv0:i,conv1:o,conv2:l}=a(e,t,n,s);return{conv0:i,conv1:o,conv2:l,conv3:r(t,t,`${n}/conv3`)}}}}function Mv(e){return t=>({filters:e(`${t}/filters`,4),bias:e(`${t}/bias`,1)})}function Mw(e,t){let n=My(e,t),r=Mv(n),a=Mg(n);return{extractDenseBlock3Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`)}},extractDenseBlock4Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`),conv3:a(`${e}/conv3`)}}}}var Mk=class extends Mi{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw Error("FaceFeatureExtractor - load model before inference");return sd(()=>{let n=Mu(Dx(ig(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=Mu(n,t.dense1),n=Mu(n,t.dense2),n=iJ(n=Mu(n,t.dense3),[7,7],[2,2],"valid")})}async forward(e){return this.forwardInput(await D6(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock4Params:n}=Mw(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return Md(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=Mb(e),{extractDenseBlock4Params:a}=Mx(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(0!==r().length)throw Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}(e)}};function MI(e,t){return sd(()=>ix(i1(e,t.weights),t.bias))}function MS(e){let t={},n={};return Object.keys(e).forEach(r=>{(r.startsWith("fc")?n:t)[r]=e[r]}),{featureExtractorMap:t,classifierMap:n}}var MN=class extends Mi{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw Error(`${this._name} - load model before inference`);return sd(()=>{let n=e instanceof D4?this.faceFeatureExtractor.forwardInput(e):e;return MI(n.as2D(n.shape[0],-1),t.fc)})}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=Mb(e),i=Mc(a,r)(t,n,"fc");if(0!==s().length)throw Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let t,n,r,{featureExtractorMap:a,classifierMap:s}=MS(e);return this.faceFeatureExtractor.loadFromWeightMap(a),r={fc:{weights:(n=My(s,t=[]))("fc/weights",2),bias:n("fc/bias",1)}},Md(s,t),{params:r,paramMappings:t}}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},MT=["neutral","happy","sad","angry","fearful","disgusted","surprised"],M_=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,7!==e.length)throw Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);MT.forEach((t,n)=>{this[t]=e[n]})}asSortedArray(){return MT.map(e=>({expression:e,probability:this[e]})).sort((e,t)=>t.probability-e.probability)}},MC=class extends MN{constructor(e=new Mk){super("FaceExpressionNet",e)}forwardInput(e){return sd(()=>uG(this.runNet(e)))}async forward(e){return this.forwardInput(await D6(e))}async predictExpressions(e){let t=await D6(e),n=await this.forwardInput(t),r=await Promise.all(po(n).map(async e=>{let t=e.dataSync();return e.dispose(),t}));n.dispose();let a=r.map(e=>new M_(e));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function ME(e){return e.expressions instanceof M_}function M$(e,t){return{...e,expressions:t}}function MA(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach(t=>{let a=t instanceof M_?t:ME(t)?t.expressions:void 0;if(!a)throw Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let s=a.asSortedArray().filter(e=>e.probability>n),i=DF(t)?t.detection.box.bottomLeft:r||new Dd(0,0);new DH(s.map(e=>`${e.expression} (${Da(e.probability)})`),i).draw(e)})}function MF(e){return DF(e)&&e.landmarks instanceof DN&&e.unshiftedLandmarks instanceof DN&&e.alignedRect instanceof Df}function MR(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new Df(e.detection.score,a.rescale(s.reverse()),s),o=function(e){var t,n,r,a,s,i,o,l;let u,p,d,h=(e,t)=>Math.sqrt((e.x-t.x)**2+(e.y-t.y)**2),c={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e.positions||68!==e.positions.length)return c;let m=e.positions;return c.roll=(t=m[27],u=Math.hypot((n=m[66]).x-t.x,n.y-t.y),Math.floor(90-180*Math.asin((n.y-t.y)/u)/Math.PI)*(n.x-t.x<0?-1:1)),c.pitch=(r=m[14],a=m[30],p=h(r,s=m[2]),Math.floor(180*Math.atan(h(a,d=new Dd((r.x+s.x)/2,(r.y+s.y)/2))/p)/Math.PI)*(d.y-a.y<0?-1:1)),c.yaw=(i=m[14],o=m[33],l=m[2],Math.floor(i.x-o.x)-Math.floor(o.x-l.x)),c}(t);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o}}var MD=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},MM=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new MD(t)}draw(e){let t=DV(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;n&&this.faceLandmarks instanceof D_&&(t.strokeStyle=s,t.lineWidth=a,R4(t,this.faceLandmarks.getJawOutline()),R4(t,this.faceLandmarks.getLeftEyeBrow()),R4(t,this.faceLandmarks.getRightEyeBrow()),R4(t,this.faceLandmarks.getNose()),R4(t,this.faceLandmarks.getLeftEye(),!0),R4(t,this.faceLandmarks.getRightEye(),!0),R4(t,this.faceLandmarks.getMouth(),!0)),r&&(t.strokeStyle=o,t.fillStyle=o,this.faceLandmarks.positions.forEach(e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()}))}};function MO(e,t){(Array.isArray(t)?t:[t]).forEach(t=>{let n=t instanceof DN?t:MF(t)?t.landmarks:void 0;if(!n)throw Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new MM(n).draw(e)})}function ML(e,t,n){return ix(oh(e,t.filters,n,"same"),t.bias)}function Mz(e,t,n=!0){let r=n?uN(e):e;return r=Mo(r,t.separable_conv0,[1,1]),r=ix(r=lR(r=Mo(uN(r),t.separable_conv1,[1,1]),[3,3],[2,2],"same"),ML(e,t.expansion_conv,[2,2]))}var MP=class extends Mi{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw Error("TinyXception - load model before inference");return sd(()=>{let n=uN(ML(Dx(ig(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.entry_flow.conv_in,[2,2]));return n=Mz(n,t.entry_flow.reduction_block_0,!1),n=Mz(n,t.entry_flow.reduction_block_1),Dl(this._numMainBlocks,0,1).forEach(e=>{var r,a;let s;r=n,a=t.middle_flow[`main_block_${e}`],s=Mo(uN(r),a.separable_conv0,[1,1]),s=Mo(uN(s),a.separable_conv1,[1,1]),n=s=ix(s=Mo(uN(s),a.separable_conv2,[1,1]),r)}),n=uN(Mo(n=Mz(n,t.exit_flow.reduction_block),t.exit_flow.separable_conv,[1,1]))})}async forward(e){return this.forwardInput(await D6(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return function(e,t){let n,r,a;let s=[],{extractConvParams:i,extractSeparableConvParams:o,extractReductionBlockParams:l,extractMainBlockParams:u}={extractConvParams:r=Mv(n=My(e,s)),extractSeparableConvParams:a=Mg(n),extractReductionBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),expansion_conv:r(`${e}/expansion_conv`)}},extractMainBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),separable_conv2:a(`${e}/separable_conv2`)}}},p=i("entry_flow/conv_in"),d=l("entry_flow/reduction_block_0"),h=l("entry_flow/reduction_block_1"),c={};Dl(t,0,1).forEach(e=>{c[`main_block_${e}`]=u(`middle_flow/main_block_${e}`)});let m=l("exit_flow/reduction_block"),f=o("exit_flow/separable_conv");return Md(e,s),{params:{entry_flow:{conv_in:p,reduction_block_0:d,reduction_block_1:h},middle_flow:c,exit_flow:{reduction_block:m,separable_conv:f}},paramMappings:s}}(e,this._numMainBlocks)}extractParams(e){return function(e,t){let n,r;let a=[],{extractWeights:s,getRemainingWeights:i}=Mb(e),{extractConvParams:o,extractSeparableConvParams:l,extractReductionBlockParams:u,extractMainBlockParams:p}={extractConvParams:n=Mh(s,a),extractSeparableConvParams:r=Mf(s,a),extractReductionBlockParams:function(e,t,a){return{separable_conv0:r(e,t,`${a}/separable_conv0`),separable_conv1:r(t,t,`${a}/separable_conv1`),expansion_conv:n(e,t,1,`${a}/expansion_conv`)}},extractMainBlockParams:function(e,t){return{separable_conv0:r(e,e,`${t}/separable_conv0`),separable_conv1:r(e,e,`${t}/separable_conv1`),separable_conv2:r(e,e,`${t}/separable_conv2`)}}},d=o(3,32,3,"entry_flow/conv_in"),h=u(32,64,"entry_flow/reduction_block_0"),c=u(64,128,"entry_flow/reduction_block_1"),m={};Dl(t,0,1).forEach(e=>{m[`main_block_${e}`]=p(128,`middle_flow/main_block_${e}`)});let f=u(128,256,"exit_flow/reduction_block"),g=l(256,512,"exit_flow/separable_conv");if(0!==i().length)throw Error(`weights remaing after extract: ${i().length}`);return{paramMappings:a,params:{entry_flow:{conv_in:d,reduction_block_0:h,reduction_block_1:c},middle_flow:m,exit_flow:{reduction_block:f,separable_conv:g}}}}(e,this._numMainBlocks)}},MB=(e=>(e.FEMALE="female",e.MALE="male",e))(MB||{}),MW=class extends Mi{constructor(e=new MP(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw Error(`${this._name} - load model before inference`);return sd(()=>{let n=e instanceof D4?this.faceFeatureExtractor.forwardInput(e):e,r=iJ(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:MI(r,t.fc.age).as1D(),gender:MI(r,t.fc.gender)}})}forwardInput(e){return sd(()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:uG(n)}})}async forward(e){return this.forwardInput(await D6(e))}async predictAgeAndGender(e){let t=await D6(e),n=await this.forwardInput(t),r=po(n.age),a=po(n.gender),s=r.map((e,t)=>({ageTensor:e,genderTensor:a[t]})),i=await Promise.all(s.map(async({ageTensor:e,genderTensor:t})=>{let n=e.dataSync()[0],r=t.dataSync()[0],a=r>.5;return e.dispose(),t.dispose(),{age:n,gender:a?"male":"female",genderProbability:a?r:1-r}}));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=Mb(e),a=Mc(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=MS(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=My(e,t);function r(e){return{weights:n(`${e}/weights`,2),bias:n(`${e}/bias`,1)}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return Md(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}},MV=class extends MN{postProcess(e,t,n){let r=n.map(({width:e,height:n})=>{let r=t/Math.max(n,e);return{width:e*r,height:n*r}}),a=r.length;return sd(()=>{let n=(e,t)=>uJ([oi([68],e,"float32"),oi([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{let{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0},i=e=>s(e,(e,t)=>e<t),o=e=>s(e,(e,t)=>t<e);return e.mul(oi([a,136],t,"float32")).sub(uJ(Array.from(Array(a),(e,t)=>n(i(t),o(t))))).div(uJ(Array.from(Array(a),(e,t)=>n(r[t].width,r[t].height))))})}forwardInput(e){return sd(()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map(([e,t])=>({height:e,width:t})))})}async forward(e){return this.forwardInput(await D6(e))}async detectLandmarks(e){let t=await D6(e),n=sd(()=>po(this.forwardInput(t))),r=await Promise.all(n.map(async(e,n)=>{let r=Array.from(e.dataSync()),a=r.filter((e,t)=>Dr(t)),s=r.filter((e,t)=>!Dr(t));return new D_(Array(68).fill(0).map((e,t)=>new Dd(a[t],s[t])),{height:t.getInputHeight(n),width:t.getInputWidth(n)})}));return n.forEach(e=>e.dispose()),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},MU=class extends MV{constructor(e=new Mk){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}},MG=class extends Mi{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw Error("TinyFaceFeatureExtractor - load model before inference");return sd(()=>{let n=Ml(Dx(ig(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=Ml(n,t.dense1),n=iJ(n=Ml(n,t.dense2),[14,14],[2,2],"valid")})}async forward(e){return this.forwardInput(await D6(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock3Params:n}=Mw(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return Md(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=Mb(e),{extractDenseBlock3Params:a}=Mx(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}},MH=class extends MV{constructor(e=new MG){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},Mj=class extends MU{};function Mq(e,t,n,r,a="same"){var s;let{filters:i,bias:o}=t.conv,l=oh(e,i,n,a);return l=ix(l,o),l=ix(ik(l,(s=t.scale).weights),s.biases),r?uN(l):l}function MK(e,t){return Mq(e,t,[1,1],!1)}function MX(e,t){return Mq(e,t,[2,2],!0,"valid")}function MY(e,t){let n=Mq(e,t.conv1,[1,1],!0);return uN(n=ix(n=MK(n,t.conv2),e))}function MZ(e,t){let n=MX(e,t.conv1);n=MK(n,t.conv2);let r=iJ(e,2,2,"valid"),a=lz(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let e=[...n.shape];e[1]=1;let t=[...(n=i0([n,lz(e)],1)).shape];t[2]=1,n=i0([n,lz(t)],2)}return uN(n=ix(r=s?i0([r,a],3):r,n))}var MJ=class extends Mi{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw Error("FaceRecognitionNet - load model before inference");return sd(()=>{let n=MX(Dx(ig(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div(255),t.conv32_down);return n=MY(n=lR(n,3,2,"valid"),t.conv32_1),n=MY(n,t.conv32_2),n=MZ(n=MY(n,t.conv32_3),t.conv64_down),n=MY(n,t.conv64_1),n=MY(n,t.conv64_2),n=MZ(n=MY(n,t.conv64_3),t.conv128_down),n=MY(n,t.conv128_1),n=MZ(n=MY(n,t.conv128_2),t.conv256_down),n=MY(n,t.conv256_1),i1((n=MZ(n=MY(n,t.conv256_2),t.conv256_down_out)).mean([1,2]),t.fc)})}async forward(e){return this.forwardInput(await D6(e))}async computeFaceDescriptor(e){var t;if(null!=(t=null==e?void 0:e.shape)&&t.some(e=>e<=0))return new Float32Array(128);let n=await D6(e),r=sd(()=>po(this.forwardInput(n))),a=await Promise.all(r.map(e=>e.data()));return r.forEach(e=>e.dispose()),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=function(e,t){let n=My(e,t);function r(e){return{conv:{filters:n(`${e}/conv/filters`,4),bias:n(`${e}/conv/bias`,1)},scale:{weights:n(`${e}/scale/weights`,1),biases:n(`${e}/scale/biases`,1)}}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(`${e}/conv1`),conv2:r(`${e}/conv2`)}}}}(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),u=r("conv64_1"),p=r("conv64_2"),d=r("conv64_3"),h=r("conv128_down"),c=r("conv128_1"),m=r("conv128_2"),f=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!R9(x))throw Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);return Md(e,t),{params:{conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:p,conv64_3:d,conv128_down:h,conv128_1:c,conv128_2:m,conv256_down:f,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x},paramMappings:t}}(e)}extractParams(e){return function(e){let{extractWeights:t,getRemainingWeights:n}=Mb(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=function(e,t){function n(n,r,a,s){var i,o;let l,u,p,d;return{conv:(i=`${s}/conv`,l=function(t,n,r){let a=e(t),s=a.length/(n*r*r);if(Dn(s))throw Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return sd(()=>pc(u6(a,[n,s,r,r]),[2,3,1,0]))}(n,r,a),u=u2(e(r)),t.push({paramPath:`${i}/filters`},{paramPath:`${i}/bias`}),{filters:l,bias:u}),scale:(o=`${s}/scale`,p=u2(e(r)),d=u2(e(r)),t.push({paramPath:`${o}/weights`},{paramPath:`${o}/biases`}),{weights:p,biases:d})}}return{extractConvLayerParams:n,extractResidualLayerParams:function(e,t,r,a,s=!1){return{conv1:n((s?.5:1)*e,t,r,`${a}/conv1`),conv2:n(e,t,r,`${a}/conv2`)}}}}(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),p=s(36864,64,3,"conv64_down",!0),d=s(36864,64,3,"conv64_1"),h=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),m=s(147456,128,3,"conv128_down",!0),f=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),w=sd(()=>pc(u3(t(32768),[128,256]),[1,0]));if(r.push({paramPath:"fc"}),0!==n().length)throw Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:p,conv64_1:d,conv64_2:h,conv64_3:c,conv128_down:m,conv128_1:f,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:w},paramMappings:r}}(e)}};function MQ(e){let t=new MJ;return t.extractWeights(e),t}function M0(e,t){return{...e,descriptor:t}}function M1(e){return"number"==typeof e.age}function M2(e,t){return{...e,age:t}}function M3(e){return("male"===e.gender||"female"===e.gender)&&Dp(e.genderProbability)}function M4(e,t,n){return{...e,gender:t,genderProbability:n}}function M6(e,t,n){return sd(()=>{let r=oh(e,t.filters,n,"same");return oo(r=ix(r,t.batch_norm_offset),0,6)})}function M5(e,t){return sd(()=>{let n=e.shape[0];return{boxPredictionEncoding:iZ(Mp(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:iZ(Mp(e,t.class_predictor),[n,-1,3])}})}var M8=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if("number"!=typeof this._maxResults)throw Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},M7=class extends Mi{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw Error("SsdMobilenetv1 - load model before inference");return sd(()=>{var n,r,a,s,i,o;let l=(n=lS(iw(ig(e.toBatchTensor(512,!1),"float32"),127.5),1),r=t.mobilenetv1,sd(()=>{let e,t=M6(n,r.conv_0,[2,2]);if([r.conv_1,r.conv_2,r.conv_3,r.conv_4,r.conv_5,r.conv_6,r.conv_7,r.conv_8,r.conv_9,r.conv_10,r.conv_11,r.conv_12,r.conv_13].forEach((n,r)=>{var a,s;let i=r+1,o=[2,4,6,12].some(e=>e===i)?[2,2]:[1,1];a=t,s=n.depthwise_conv,t=M6(t=sd(()=>{let e=oN(a,s.filters,o,"same");return oo(e=i8(e,s.batch_norm_mean,s.batch_norm_variance,s.batch_norm_offset,s.batch_norm_scale,.0010000000474974513),0,6)}),n.pointwise_conv,[1,1]),11===i&&(e=t)}),null===e)throw Error("mobileNetV1 - output of conv layer 11 is null");return{out:t,conv11:e}})),{boxPredictions:u,classPredictions:p}=(a=l.out,s=l.conv11,i=t.prediction_layer,sd(()=>{let e=M6(a,i.conv_0,[1,1]),t=M6(e,i.conv_1,[2,2]),n=M6(t,i.conv_2,[1,1]),r=M6(n,i.conv_3,[2,2]),o=M6(r,i.conv_4,[1,1]),l=M6(o,i.conv_5,[2,2]),u=M6(l,i.conv_6,[1,1]),p=M6(u,i.conv_7,[2,2]),d=M5(s,i.box_predictor_0),h=M5(a,i.box_predictor_1),c=M5(t,i.box_predictor_2),m=M5(r,i.box_predictor_3),f=M5(l,i.box_predictor_4),g=M5(p,i.box_predictor_5);return{boxPredictions:i0([d.boxPredictionEncoding,h.boxPredictionEncoding,c.boxPredictionEncoding,m.boxPredictionEncoding,f.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:i0([d.classPrediction,h.classPrediction,c.classPrediction,m.classPrediction,f.classPrediction,g.classPrediction],1)}}));return o=t.output_layer,sd(()=>{let e=u.shape[0],t=function(e,t){let n,r,a;let{sizes:s,centers:i}=(r=[lS((n=po(pc(e,[1,0])))[2],n[0]),lS(n[3],n[1])],a=[ix(n[0],iw(r[0],2)),ix(n[1],iw(r[1],2))],{sizes:r,centers:a}),o=po(pc(t,[1,0])),l=iw(ik(o4(iw(o[2],5)),s[0]),2),u=ix(ik(iw(o[0],10),s[0]),i[0]),p=iw(ik(o4(iw(o[3],5)),s[1]),2),d=ix(ik(iw(o[1],10),s[1]),i[1]);return pc(uJ([lS(u,l),lS(d,p),ix(u,l),ix(d,p)]),[1,0])}(iZ(o8(o.extra_dim,[e,1,1]),[-1,4]),iZ(u,[-1,4]));t=iZ(t,[e,t.shape[0]/e,4]);let n=i2(i3(p,[0,0,1],[-1,-1,-1])),r=i3(n,[0,0,0],[-1,-1,1]);return r=iZ(r,[e,r.shape[1]]),{boxes:po(t),scores:po(r)}})})}async forward(e){return this.forwardInput(await D6(e))}async locateFaces(e,t={}){let n,r,a,s,{maxResults:i,minConfidence:o}=new M8(t),l=await D6(e),{boxes:u,scores:p}=this.forwardInput(l),d=u[0],h=p[0];for(let e=1;e<u.length;e++)u[e].dispose(),p[e].dispose();let c=Array.from(h.dataSync()),m=(n=Math.min(i,d.shape[0]),r=c.map((e,t)=>({score:e,boxIndex:t})).filter(e=>e.score>o).sort((e,t)=>t.score-e.score),a=e=>e<=.5?1:0,s=[],r.forEach(e=>{if(s.length>=n)return;let t=e.score;for(let t=s.length-1;t>=0;--t){let n=function(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),p=Math.max(r[n][0],r[n][2]),d=Math.max(r[n][1],r[n][3]),h=(i-a)*(o-s),c=(p-l)*(d-u);if(h<=0||c<=0)return 0;let m=Math.max(Math.min(i,p)-Math.max(a,l),0)*Math.max(Math.min(o,d)-Math.max(s,u),0);return m/(h+c-m)}(d,e.boxIndex,s[t]);if(0!==n&&(e.score*=a(n),e.score<=o))break}t===e.score&&s.push(e.boxIndex)}),s),f=l.getReshapedInputDimensions(0),g=l.inputSize,y=g/f.width,b=g/f.height,x=d.arraySync(),v=m.map(e=>{let[t,n]=[Math.max(0,x[e][0]),Math.min(1,x[e][2])].map(e=>e*b),[r,a]=[Math.max(0,x[e][1]),Math.min(1,x[e][3])].map(e=>e*y);return new Df(c[e],new DS(r,t,a-r,n-t),{height:l.getInputHeight(0),width:l.getInputWidth(0)})});return d.dispose(),h.dispose(),v}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function(e,t){let n=My(e,t);function r(e,t,r){return{filters:n(`${e}/Conv2d_${t}_pointwise/weights`,4,`${r}/filters`),batch_norm_offset:n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,`${r}/batch_norm_offset`)}}function a(e){let t=`mobilenetv1/conv_${e}`,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=`${t}/depthwise_conv`,i=`${t}/pointwise_conv`;return{depthwise_conv:{filters:n(`${a}/depthwise_weights`,4,`${s}/filters`),batch_norm_scale:n(`${a}/BatchNorm/gamma`,1,`${s}/batch_norm_scale`),batch_norm_offset:n(`${a}/BatchNorm/beta`,1,`${s}/batch_norm_offset`),batch_norm_mean:n(`${a}/BatchNorm/moving_mean`,1,`${s}/batch_norm_mean`),batch_norm_variance:n(`${a}/BatchNorm/moving_variance`,1,`${s}/batch_norm_variance`)},pointwise_conv:r("MobilenetV1",e,i)}}function s(e,t){return{filters:n(`${e}/weights`,4,`${t}/filters`),bias:n(`${e}/biases`,1,`${t}/bias`)}}function i(e){return{box_encoding_predictor:s(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),class_predictor:s(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`)}}return{extractMobilenetV1Params:function(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!De(a))throw Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return Md(e,t),{params:s,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=Mb(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=function(e,t){function n(n,r,a,s,i){let o=u6(e(n*r*a*a),[a,a,n,r]),l=u2(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:l}}function r(e,t,r,a){let{filters:s,bias:i}=n(e,t,r,a,!0);return{filters:s,batch_norm_offset:i}}function a(n,a,s){var i;let o,l,u,p,d;return{depthwise_conv:(i=`${s}/depthwise_conv`,o=u6(e(9*n),[3,3,n,1]),l=u2(e(n)),u=u2(e(n)),p=u2(e(n)),d=u2(e(n)),t.push({paramPath:`${i}/filters`},{paramPath:`${i}/batch_norm_scale`},{paramPath:`${i}/batch_norm_offset`},{paramPath:`${i}/batch_norm_mean`},{paramPath:`${i}/batch_norm_variance`}),{filters:o,batch_norm_scale:l,batch_norm_offset:u,batch_norm_mean:p,batch_norm_variance:d}),pointwise_conv:r(n,a,1,`${s}/pointwise_conv`)}}return{extractMobilenetV1Params:function(){return{conv_0:r(3,32,3,"mobilenetv1/conv_0"),conv_1:a(32,64,"mobilenetv1/conv_1"),conv_2:a(64,128,"mobilenetv1/conv_2"),conv_3:a(128,128,"mobilenetv1/conv_3"),conv_4:a(128,256,"mobilenetv1/conv_4"),conv_5:a(256,256,"mobilenetv1/conv_5"),conv_6:a(256,512,"mobilenetv1/conv_6"),conv_7:a(512,512,"mobilenetv1/conv_7"),conv_8:a(512,512,"mobilenetv1/conv_8"),conv_9:a(512,512,"mobilenetv1/conv_9"),conv_10:a(512,512,"mobilenetv1/conv_10"),conv_11:a(512,512,"mobilenetv1/conv_11"),conv_12:a(512,1024,"mobilenetv1/conv_12"),conv_13:a(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:r(1024,256,1,"prediction_layer/conv_0"),conv_1:r(256,512,3,"prediction_layer/conv_1"),conv_2:r(512,128,1,"prediction_layer/conv_2"),conv_3:r(128,256,3,"prediction_layer/conv_3"),conv_4:r(256,128,1,"prediction_layer/conv_4"),conv_5:r(128,256,3,"prediction_layer/conv_5"),conv_6:r(256,64,1,"prediction_layer/conv_6"),conv_7:r(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:n(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:n(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:n(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}(n,t),i=a(),o=s(),l={extra_dim:u4(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}(e)}};function M9(e){let t=new M7;return t.extractWeights(e),t}function Oe(e){return M9(e)}var Ot=class extends M7{},On=[new Dd(.738768,.874946),new Dd(2.42204,2.65704),new Dd(4.30971,7.04493),new Dd(10.246,4.59428),new Dd(12.6868,11.8741)],Or=[new Dd(1.603231,2.094468),new Dd(6.041143,7.080126),new Dd(2.882459,3.518061),new Dd(4.266906,5.178857),new Dd(9.041765,10.66308)],Oa=[117.001,114.697,97.404],Os=e=>"number"==typeof e;function Oi(e){if(!e)throw Error(`invalid config: ${e}`);if("boolean"!=typeof e.withSeparableConvs)throw Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!Os(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(e=>"string"==typeof e))throw Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(e=>e||{}).every(e=>Os(e.x)&&Os(e.y)))throw Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(Os)))throw Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function Oo(e){return sd(()=>{let t=ik(e,oJ(.10000000149011612));return ix(uN(lS(e,t)),t)})}function Ol(e,t){return sd(()=>{let n=lZ(e,[[0,0],[1,1],[1,1],[0,0]]);return Oo(n=ix(n=ik(n=lS(n=oh(n,t.conv.filters,[1,1],"valid"),t.bn.sub),t.bn.truediv),t.conv.bias))})}function Ou(e,t){return sd(()=>{let n=lZ(e,[[0,0],[1,1],[1,1],[0,0]]);return Oo(n=ix(n=uM(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),t.bias))})}var Op=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw Error(`${this._name} - expected inputSize to be a number divisible by 32`);if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},Od=class e extends Mi{constructor(e){super("TinyYolov2"),Oi(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=Ol(e,t.conv0);return n=Ol(n=lR(n,[2,2],[2,2],"same"),t.conv1),n=Ol(n=lR(n,[2,2],[2,2],"same"),t.conv2),n=Ol(n=lR(n,[2,2],[2,2],"same"),t.conv3),n=Ol(n=lR(n,[2,2],[2,2],"same"),t.conv4),n=Ol(n=lR(n,[2,2],[2,2],"same"),t.conv5),n=Ol(n=lR(n,[2,2],[1,1],"same"),t.conv6),Mp(n=Ol(n,t.conv7),t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?Oo(Mp(e,t.conv0,"valid",!1)):Ou(e,t.conv0);return n=Ou(n=lR(n,[2,2],[2,2],"same"),t.conv1),n=Ou(n=lR(n,[2,2],[2,2],"same"),t.conv2),n=Ou(n=lR(n,[2,2],[2,2],"same"),t.conv3),n=Ou(n=lR(n,[2,2],[2,2],"same"),t.conv4),n=Ou(n=lR(n,[2,2],[2,2],"same"),t.conv5),n=lR(n,[2,2],[1,1],"same"),n=t.conv6?Ou(n,t.conv6):n,Mp(n=t.conv7?Ou(n,t.conv7):n,t.conv8,"valid",!1)}forwardInput(e,t){let{params:n}=this;if(!n)throw Error("TinyYolov2 - load model before inference");return sd(()=>{let r=ig(e.toBatchTensor(t,!1),"float32");return r=(r=this.config.meanRgb?Dx(r,this.config.meanRgb):r).div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)})}async forward(e,t){return this.forwardInput(await D6(e),t)}async detect(e,t={}){let{inputSize:n,scoreThreshold:r}=new Op(t),a=await D6(e),s=await this.forwardInput(a,n),i=sd(()=>po(s)[0].expandDims()),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},l=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();let u=l.map(e=>e.box),p=l.map(e=>e.score),d=l.map(e=>e.classScore),h=l.map(e=>this.config.classes[e.label]);return Db(u.map(e=>e.rescale(n)),p,this.config.iouThreshold,!0).map(e=>new Dm(p[e],d[e],h[e],u[e],o))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function(e,t){let n=[],{extractConvParams:r,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}=function(e,t){let n=My(e,t);function r(e){return{filters:n(`${e}/filters`,4),bias:n(`${e}/bias`,1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){var t;return{conv:r(`${e}/conv`),bn:(t=`${e}/bn`,{sub:n(`${t}/sub`,1),truediv:n(`${t}/truediv`,1)})}},extractSeparableConvParams:Mg(n)}}(e,n),i;if(t.withSeparableConvs){let e=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?r("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:e>7?s("conv6"):void 0,conv7:e>8?s("conv7"):void 0,conv8:r("conv8")}}else i={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:r("conv8")};return Md(e,n),{params:i,paramMappings:n}}(e,this.config)}extractParams(t){let n=this.config.filterSizes||e.DEFAULT_FILTER_SIZES,r=n?n.length:void 0;if(7!==r&&8!==r&&9!==r)throw Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${r} filterSizes in config`);return function(e,t,n,r){let a;let{extractWeights:s,getRemainingWeights:i}=Mb(e),o=[],{extractConvParams:l,extractConvWithBatchNormParams:u,extractSeparableConvParams:p}={extractConvParams:a=Mh(s,o),extractConvWithBatchNormParams:function(e,t,n){var r;let i,l;return{conv:a(e,t,3,`${n}/conv`),bn:(r=`${n}/bn`,i=u2(s(t)),l=u2(s(t)),o.push({paramPath:`${r}/sub`},{paramPath:`${r}/truediv`}),{sub:i,truediv:l})}},extractSeparableConvParams:Mf(s,o)},d;if(t.withSeparableConvs){let[e,a,s,i,o,u,h,c,m]=r;d={conv0:t.isFirstLayerConv2d?l(e,a,3,"conv0"):p(e,a,"conv0"),conv1:p(a,s,"conv1"),conv2:p(s,i,"conv2"),conv3:p(i,o,"conv3"),conv4:p(o,u,"conv4"),conv5:p(u,h,"conv5"),conv6:c?p(h,c,"conv6"):void 0,conv7:m?p(c,m,"conv7"):void 0,conv8:l(m||c||h,5*n,1,"conv8")}}else{let[e,t,a,s,i,o,p,h,c]=r;d={conv0:u(e,t,"conv0"),conv1:u(t,a,"conv1"),conv2:u(a,s,"conv2"),conv3:u(s,i,"conv3"),conv4:u(i,o,"conv4"),conv5:u(o,p,"conv5"),conv6:u(p,h,"conv6"),conv7:u(h,c,"conv7"),conv8:l(c,5*n,1,"conv8")}}if(0!==i().length)throw Error(`weights remaing after extract: ${i().length}`);return{params:d,paramMappings:o}}(t,this.config,this.boxEncodingSize,n)}async extractBoxes(e,t,n){let{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,l=e.shape[1],u=this.config.anchors.length,[p,d,h]=sd(()=>{let t=e.reshape([l,l,u,this.boxEncodingSize]);return[t.slice([0,0,0,0],[l,l,u,4]),t.slice([0,0,0,4],[l,l,u,1]),this.withClassScores?uG(t.slice([0,0,0,5],[l,l,u,this.config.classes.length]),3):oJ(0)]}),c=[],m=await d.array(),f=await p.array();for(let e=0;e<l;e++)for(let t=0;t<l;t++)for(let r=0;r<u;r++){let a=Dk(m[e][t][r][0]);if(!n||a>n){let n=(t+Dk(f[e][t][r][0]))/l*i,s=(e+Dk(f[e][t][r][1]))/l*o,u=Math.exp(f[e][t][r][2])*this.config.anchors[r].x/l*i,p=Math.exp(f[e][t][r][3])*this.config.anchors[r].y/l*o,d=n-u/2,m=s-p/2,g={row:e,col:t,anchor:r},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(h,g):{classScore:1,label:0};c.push({box:new Dc(d,m,d+u,m+p),score:a,classScore:a*y,label:b,...g})}}return p.dispose(),d.dispose(),h.dispose(),c}async extractPredictedClass(e,t){let{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map((e,t)=>s[n][r][a][t]).map((e,t)=>({classScore:e,label:t})).reduce((e,t)=>e.classScore>t.classScore?e:t)}};Od.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var Oh=Od,Oc=class extends Oh{constructor(e=!0){super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:Or,meanRgb:Oa}:{anchors:On,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(e=>new Df(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};function Om(e,t=!0){let n=new Oc(t);return n.extractWeights(e),n}var Of=class extends Op{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},Og=class{async then(e){return e(await this.run())}async run(){throw Error("ComposableTask - run is not implemented")}};async function Oy(e,t,n,r,a=({alignedRect:e})=>e){let s=e.map(e=>MF(e)?a(e):e.detection),i=r||(t instanceof aF?await D8(t,s):await D5(t,s)),o=await n(i);return i.forEach(e=>e instanceof aF&&e.dispose()),o}async function Ob(e,t,n,r,a){return Oy([e],t,async e=>n(e[0]),r,a)}var Ox=[new Dd(1.603231,2.094468),new Dd(6.041143,7.080126),new Dd(2.882459,3.518061),new Dd(4.266906,5.178857),new Dd(9.041765,10.66308)],Ov=[117.001,114.697,97.404],Ow=class extends Oh{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:Ox,meanRgb:Ov,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(e=>new Df(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},Ok={ssdMobilenetv1:new M7,tinyFaceDetector:new Ow,tinyYolov2:new Oc,faceLandmark68Net:new MU,faceLandmark68TinyNet:new MH,faceRecognitionNet:new MJ,faceExpressionNet:new MC,ageGenderNet:new MW},OI=(e,t)=>Ok.ssdMobilenetv1.locateFaces(e,t),OS=(e,t)=>Ok.tinyFaceDetector.locateFaces(e,t),ON=(e,t)=>Ok.tinyYolov2.locateFaces(e,t),OT=e=>Ok.faceLandmark68Net.detectLandmarks(e),O_=e=>Ok.faceLandmark68TinyNet.detectLandmarks(e),OC=e=>Ok.faceRecognitionNet.computeFaceDescriptor(e),OE=e=>Ok.faceExpressionNet.predictExpressions(e),O$=e=>Ok.ageGenderNet.predictAgeAndGender(e),OA=e=>Ok.ssdMobilenetv1.load(e),OF=e=>Ok.tinyFaceDetector.load(e),OR=e=>Ok.tinyYolov2.load(e),OD=e=>Ok.faceLandmark68Net.load(e),OM=e=>Ok.faceLandmark68TinyNet.load(e),OO=e=>Ok.faceRecognitionNet.load(e),OL=e=>Ok.faceExpressionNet.load(e),Oz=e=>Ok.ageGenderNet.load(e),OP=OA,OB=OI,OW=OT,OV=class extends Og{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},OU=class extends OV{async run(){let e=await this.parentTask,t=await Oy(e,this.input,async e=>Promise.all(e.map(e=>Ok.faceExpressionNet.predictExpressions(e))),this.extractedFaces);return e.map((e,n)=>M$(e,t[n]))}withAgeAndGender(){return new OK(this,this.input)}},OG=class extends OV{async run(){let e=await this.parentTask;if(!e)return;let t=await Ob(e,this.input,e=>Ok.faceExpressionNet.predictExpressions(e),this.extractedFaces);return M$(e,t)}withAgeAndGender(){return new OX(this,this.input)}},OH=class extends OU{withAgeAndGender(){return new OY(this,this.input)}withFaceDescriptors(){return new OQ(this,this.input)}},Oj=class extends OG{withAgeAndGender(){return new OZ(this,this.input)}withFaceDescriptor(){return new O0(this,this.input)}},Oq=class extends Og{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},OK=class extends Oq{async run(){let e=await this.parentTask,t=await Oy(e,this.input,async e=>Promise.all(e.map(e=>Ok.ageGenderNet.predictAgeAndGender(e))),this.extractedFaces);return e.map((e,n)=>{let{age:r,gender:a,genderProbability:s}=t[n];return M2(M4(e,a,s),r)})}withFaceExpressions(){return new OU(this,this.input)}},OX=class extends Oq{async run(){let e=await this.parentTask;if(!e)return;let{age:t,gender:n,genderProbability:r}=await Ob(e,this.input,e=>Ok.ageGenderNet.predictAgeAndGender(e),this.extractedFaces);return M2(M4(e,n,r),t)}withFaceExpressions(){return new OG(this,this.input)}},OY=class extends OK{withFaceExpressions(){return new OH(this,this.input)}withFaceDescriptors(){return new OQ(this,this.input)}},OZ=class extends OX{withFaceExpressions(){return new Oj(this,this.input)}withFaceDescriptor(){return new O0(this,this.input)}},OJ=class extends Og{constructor(e,t){super(),this.parentTask=e,this.input=t}},OQ=class extends OJ{async run(){let e=await this.parentTask;return(await Oy(e,this.input,e=>Promise.all(e.map(e=>Ok.faceRecognitionNet.computeFaceDescriptor(e))),null,e=>e.landmarks.align(null,{useDlibAlignment:!0}))).map((t,n)=>M0(e[n],t))}withFaceExpressions(){return new OH(this,this.input)}withAgeAndGender(){return new OY(this,this.input)}},O0=class extends OJ{async run(){let e=await this.parentTask;if(!e)return;let t=await Ob(e,this.input,e=>Ok.faceRecognitionNet.computeFaceDescriptor(e),null,e=>e.landmarks.align(null,{useDlibAlignment:!0}));return M0(e,t)}withFaceExpressions(){return new Oj(this,this.input)}withAgeAndGender(){return new OZ(this,this.input)}},O1=class extends Og{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?Ok.faceLandmark68TinyNet:Ok.faceLandmark68Net}},O2=class extends O1{async run(){let e=await this.parentTask,t=e.map(e=>e.detection),n=this.input instanceof aF?await D8(this.input,t):await D5(this.input,t),r=await Promise.all(n.map(e=>this.landmarkNet.detectLandmarks(e)));return n.forEach(e=>e instanceof aF&&e.dispose()),e.filter((e,t)=>r[t]).map((e,t)=>MR(e,r[t]))}withFaceExpressions(){return new OH(this,this.input)}withAgeAndGender(){return new OY(this,this.input)}withFaceDescriptors(){return new OQ(this,this.input)}},O3=class extends O1{async run(){let e=await this.parentTask;if(!e)return;let{detection:t}=e,n=this.input instanceof aF?await D8(this.input,[t]):await D5(this.input,[t]),r=await this.landmarkNet.detectLandmarks(n[0]);return n.forEach(e=>e instanceof aF&&e.dispose()),MR(e,r)}withFaceExpressions(){return new Oj(this,this.input)}withAgeAndGender(){return new OZ(this,this.input)}withFaceDescriptor(){return new O0(this,this.input)}},O4=class extends Og{constructor(e,t=new M8){super(),this.input=e,this.options=t}},O6=class extends O4{async run(){let{input:e,options:t}=this,n;if(t instanceof Of)n=Ok.tinyFaceDetector.locateFaces(e,t);else if(t instanceof M8)n=Ok.ssdMobilenetv1.locateFaces(e,t);else if(t instanceof Op)n=Ok.tinyYolov2.locateFaces(e,t);else throw Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");return n}runAndExtendWithFaceDetections(){return new Promise((e,t)=>{this.run().then(t=>e(t.map(e=>DR({},e)))).catch(e=>t(e))})}withFaceLandmarks(e=!1){return new O2(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new OU(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new OK(this.runAndExtendWithFaceDetections(),this.input)}},O5=class extends O4{async run(){let e=await new O6(this.input,this.options),t=e[0];return e.forEach(e=>{e.score>t.score&&(t=e)}),t}runAndExtendWithFaceDetection(){return new Promise(async e=>{let t=await this.run();e(t?DR({},t):void 0)})}withFaceLandmarks(e=!1){return new O3(this.runAndExtendWithFaceDetection(),this.input,e)}withFaceExpressions(){return new OG(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new OX(this.runAndExtendWithFaceDetection(),this.input)}};function O8(e,t=new M8){return new O5(e,t)}function O7(e,t=new M8){return new O6(e,t)}async function O9(e,t){return O7(e,new M8(t?{minConfidence:t}:{})).withFaceLandmarks().withFaceDescriptors()}async function Le(e,t={}){return O7(e,new Op(t)).withFaceLandmarks().withFaceDescriptors()}var Lt=O9;function Ln(e,t){if(e.length!==t.length)throw Error("euclideanDistance: arr1.length !== arr2.length");let n=Array.from(e),r=Array.from(t);return Math.sqrt(n.map((e,t)=>e-r[t]).reduce((e,t)=>e+t*t,0))}var Lr=class e{constructor(e,t=.6){this._distanceThreshold=t;let n=Array.isArray(e)?e:[e];if(!n.length)throw Error("FaceRecognizer.constructor - expected atleast one input");let r=1,a=()=>`person ${r++}`;this._labeledDescriptors=n.map(e=>{if(e instanceof D$)return e;if(e instanceof Float32Array)return new D$(a(),[e]);if(e.descriptor&&e.descriptor instanceof Float32Array)return new D$(a(),[e.descriptor]);throw Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")})}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(e,t){return t.map(t=>Ln(t,e)).reduce((e,t)=>e+t,0)/(t.length||1)}matchDescriptor(e){return this.labeledDescriptors.map(({descriptors:t,label:n})=>new DC(n,this.computeMeanDistance(e,t))).reduce((e,t)=>e.distance<t.distance?e:t)}findBestMatch(e){let t=this.matchDescriptor(e);return t.distance<this._distanceThreshold?t:new DC("unknown",t.distance)}toJSON(){return{distanceThreshold:this._distanceThreshold,labeledDescriptors:this._labeledDescriptors.map(e=>e.toJSON())}}static fromJSON(t){return new e(t.labeledDescriptors.map(e=>D$.fromJSON(e)),t.distanceThreshold)}};function La(e){let t=new Ow;return t.extractWeights(e),t}var Ls="1.7.15"}};