(()=>{var e={};e.id=2284,e.ids=[2284],e.modules={96330:e=>{"use strict";e.exports=require("@prisma/client")},5486:e=>{"use strict";e.exports=require("bcrypt")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},88160:(e,r,s)=>{"use strict";s.r(r),s.d(r,{patchFetch:()=>h,routeModule:()=>m,serverHooks:()=>f,workAsyncStorage:()=>g,workUnitAsyncStorage:()=>y});var t={};s.r(t),s.d(t,{GET:()=>x,POST:()=>d});var o=s(42706),n=s(28203),a=s(45994),i=s(39187),u=s(96330),l=s(5486),p=s.n(l);let c=globalThis.prisma||new u.PrismaClient;async function d(e){try{console.log("Received request to create user");let r=await e.json();console.log("Request body:",r);let{name:s,email:t,password:o,role:n}=r;if(!s||!t||!o||!n)return console.log("❌ Missing required fields"),i.NextResponse.json({error:"Missing required fields"},{status:400});if(await c.user.findUnique({where:{email:t}}))return console.log("❌ Email already exists:",t),i.NextResponse.json({error:"Email already exists"},{status:409});let a=await p().hash(o,10);console.log("✅ Password hashed successfully");let u=r.role.toUpperCase();if("ADMIN"!==u&&"EMPLOYEE"!==u)return i.NextResponse.json({error:"Invalid role"},{status:400});let l=await c.user.create({data:{employeeId:String(r.employeeId),name:r.name,email:r.email,password:a,role:u,status:"ACTIVE"}});return console.log("✅ User created successfully:",l),i.NextResponse.json({message:"User created successfully",user:l},{status:201})}catch(e){return console.error("❌ Error creating user:",e.message),i.NextResponse.json({error:e.message||"Internal Server Error"},{status:500})}}async function x(){try{let e=await c.user.findMany();return i.NextResponse.json(e,{status:200})}catch(e){return i.NextResponse.json({error:"Error fetching employees"},{status:500})}}let m=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/employerAPI/user/route",pathname:"/employerAPI/user",filename:"route",bundlePath:"app/employerAPI/user/route"},resolvedPagePath:"C:\\Users\\justin\\Desktop\\vercel\\WFH-Monitoring\\src\\app\\employerAPI\\user\\route.tsx",nextConfigOutput:"",userland:t}),{workAsyncStorage:g,workUnitAsyncStorage:y,serverHooks:f}=m;function h(){return(0,a.patchFetch)({workAsyncStorage:g,workUnitAsyncStorage:y})}},18868:()=>{},78335:()=>{}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[638,5452],()=>s(88160));module.exports=t})();