(()=>{var e={};e.id=1737,e.ids=[1737],e.modules={96330:e=>{"use strict";e.exports=require("@prisma/client")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},42351:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>x,routeModule:()=>d,serverHooks:()=>g,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>m});var s={};t.r(s),t.d(s,{GET:()=>c,POST:()=>p});var n=t(42706),a=t(28203),o=t(45994),i=t(39187);let u=new(t(96330)).PrismaClient;async function p(e){try{let{employeeId:r,screenCapture:t}=await e.json();if(!r||!t)return i.NextResponse.json({error:"Employee ID and screen capture are required"},{status:400});let s=t.replace(/^data:image\/png;base64,/,""),n=Buffer.from(s,"base64"),a=await u.screenShotModel.create({data:{employeeId:r,picture:n,date:new Date}});return i.NextResponse.json({message:"Screen capture saved successfully",data:a},{status:201})}catch(e){return console.error("Detailed error:",e),i.NextResponse.json({error:e.message||"Unknown internal server error"},{status:500})}}async function c(e){try{let{searchParams:r}=new URL(e.url),t=r.get("employeeId");if(!t)return i.NextResponse.json({error:"Employee ID is required"},{status:400});let s=await u.screenShotModel.findMany({where:{employeeId:t,date:{gte:r.get("startDate")?new Date(r.get("startDate")):void 0,lte:r.get("endDate")?new Date(r.get("endDate")):void 0}}});if(!s.length)return i.NextResponse.json({screenshots:[]},{status:200});let n=s.map(e=>({id:e.id,image:e.picture?`data:image/png;base64,${Buffer.from(e.picture).toString("base64")}`:null,createdAt:e.date}));return i.NextResponse.json({screenshots:n},{status:200})}catch(e){return console.error("Error fetching screenshots:",e),i.NextResponse.json({error:"Internal server error",details:e.message},{status:500})}}let d=new n.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/employerAPI/screenShot/route",pathname:"/employerAPI/screenShot",filename:"route",bundlePath:"app/employerAPI/screenShot/route"},resolvedPagePath:"C:\\Users\\justin\\Desktop\\vercel\\WFH-Monitoring\\src\\app\\employerAPI\\screenShot\\route.tsx",nextConfigOutput:"",userland:s}),{workAsyncStorage:l,workUnitAsyncStorage:m,serverHooks:g}=d;function x(){return(0,o.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:m})}},18868:()=>{},78335:()=>{}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[638,5452],()=>t(42351));module.exports=s})();