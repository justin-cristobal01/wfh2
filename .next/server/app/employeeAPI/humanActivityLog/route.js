(()=>{var e={};e.id=6468,e.ids=[6468],e.modules={96330:e=>{"use strict";e.exports=require("@prisma/client")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},89289:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>m,routeModule:()=>p,serverHooks:()=>v,workAsyncStorage:()=>y,workUnitAsyncStorage:()=>g});var s={};r.r(s),r.d(s,{GET:()=>l,POST:()=>c,PUT:()=>d});var n=r(42706),a=r(28203),o=r(45994),i=r(39187);let u=new(r(96330)).PrismaClient;async function c(e){try{let{activity:t,employeeId:r,start:s,end:n,remarks:a}=await e.json();if(!r||!t||!s)return i.NextResponse.json({error:"Missing required fields"},{status:400});let o=await u.humanActivityLog.create({data:{activity:t,employeeId:r,start:s,end:n,remarks:a}});return i.NextResponse.json(o,{status:201})}catch(e){return i.NextResponse.json({error:"Internal server error"},{status:500})}}async function l(e){let{readable:t,writable:r}=new TransformStream,s=r.getWriter(),n=new TextEncoder;try{let r=new URL(e.url).searchParams.get("employeeId");if(!r)return i.NextResponse.json({error:"User ID is required"},{status:400});s.write(n.encode("event: open\ndata: Connection established\n\n"));let o=new Date;o.setHours(0,0,0,0);let c=new Date(o);async function a(){let e=await u.humanActivityLog.findMany({where:{employeeId:r,start:{gte:o,lt:c}},orderBy:{start:"desc"}});s.write(n.encode(`data: ${JSON.stringify(e)}

`))}c.setDate(o.getDate()+1);let l=setInterval(a,3e3);return e.signal.addEventListener("abort",()=>{clearInterval(l),s.close()}),new Response(t,{headers:{"Content-Type":"text/event-stream","Cache-Control":"no-cache",Connection:"keep-alive"}})}catch(e){return console.error("❌ Error fetching activity logs:",e),i.NextResponse.json({error:"Internal server error",details:e},{status:500})}}async function d(e){try{let{remarks:t,end:r}=await e.json(),s=new URL(e.url),n=s.searchParams.get("activity"),a=s.searchParams.get("employeeId");if(!a||!n||!t||!r)return i.NextResponse.json({error:"Missing required fields"},{status:400});console.log("Received PUT request:",{activity:n,employeeId:a,remarks:t,end:r});let o=await u.humanActivityLog.findFirst({where:{employeeId:a,activity:n,end:null},orderBy:{start:"desc"}});if(!o)return console.log(`Activity log not found for employee ${a} and activity ${n}`),i.NextResponse.json({error:"Activity log not found"},{status:404});let c=o.start,l=new Date(r).getTime(),d=new Date(c).getTime(),p=await u.humanActivityLog.update({where:{id:o.id},data:{remarks:t,end:r,duration:(l-d)/1e3}});return await u.user.update({where:{employeeId:a},data:{status:"ACTIVE"}}),i.NextResponse.json(p,{status:200})}catch(e){return console.error("❌ Error updating activity log:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}let p=new n.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/employeeAPI/humanActivityLog/route",pathname:"/employeeAPI/humanActivityLog",filename:"route",bundlePath:"app/employeeAPI/humanActivityLog/route"},resolvedPagePath:"C:\\Users\\justin\\Desktop\\vercel\\WFH-Monitoring\\src\\app\\employeeAPI\\humanActivityLog\\route.tsx",nextConfigOutput:"",userland:s}),{workAsyncStorage:y,workUnitAsyncStorage:g,serverHooks:v}=p;function m(){return(0,o.patchFetch)({workAsyncStorage:y,workUnitAsyncStorage:g})}},18868:()=>{},78335:()=>{}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[638,5452],()=>r(89289));module.exports=s})();