(()=>{var e={};e.id=6040,e.ids=[6040],e.modules={96330:e=>{"use strict";e.exports=require("@prisma/client")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},70465:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>y,routeModule:()=>l,serverHooks:()=>x,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>m});var s={};t.r(s),t.d(s,{GET:()=>p,POST:()=>d});var n=t(42706),o=t(28203),a=t(45994),i=t(39187);let u=new(t(96330)).PrismaClient;async function d(e){try{let{employeeId:r,timeIn:t,timeOut:s,remarks:n}=await e.json();if(!r)return i.NextResponse.json({error:"Employee ID is required"},{status:400});if(t)await u.dailyTimeRecord.create({data:{employeeId:r,date:new Date,timeIn:new Date(t),timeOut:null,remarks:n}});else{if(!s)return i.NextResponse.json({error:"Invalid request"},{status:400});let e=await u.dailyTimeRecord.findFirst({where:{employeeId:r,timeOut:null},orderBy:{date:"desc"}});if(!e)return i.NextResponse.json({error:"No active Time In record found"},{status:400});let t=new Date(e.timeIn),o=new Date(s),a=Math.floor((o.getTime()-t.getTime())/1e3);await u.dailyTimeRecord.update({where:{id:e.id},data:{timeOut:o,duration:a,remarks:n||"Clocked out"}})}return i.NextResponse.json({message:"Daily Time Record updated successfully"},{status:200})}catch(e){return console.error("Error in DTR API:",e),i.NextResponse.json({error:"Internal Server Error"},{status:500})}}async function p(e){try{let{searchParams:r}=new URL(e.url),t=r.get("employeeId");if(!t)return i.NextResponse.json({error:"Employee ID is required"},{status:400});new Date().setHours(0,0,0,0),new Date().setHours(23,59,59,999);let s=await u.dailyTimeRecord.findMany({where:{employeeId:t}});return i.NextResponse.json(s,{status:200})}catch(e){return console.error("Error fetching last DTR:",e),i.NextResponse.json({error:"Internal Server Error"},{status:500})}}let l=new n.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/employeeAPI/dtr/route",pathname:"/employeeAPI/dtr",filename:"route",bundlePath:"app/employeeAPI/dtr/route"},resolvedPagePath:"C:\\Users\\justin\\Desktop\\vercel\\WFH-Monitoring\\src\\app\\employeeAPI\\dtr\\route.tsx",nextConfigOutput:"",userland:s}),{workAsyncStorage:c,workUnitAsyncStorage:m,serverHooks:x}=l;function y(){return(0,a.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:m})}},18868:()=>{},78335:()=>{}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[638,5452],()=>t(70465));module.exports=s})();