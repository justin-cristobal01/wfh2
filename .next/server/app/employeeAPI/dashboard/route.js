(()=>{var e={};e.id=4942,e.ids=[4942],e.modules={96330:e=>{"use strict";e.exports=require("@prisma/client")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},54658:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>g,routeModule:()=>u,serverHooks:()=>m,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>p});var n={};r.r(n),r.d(n,{GET:()=>d});var a=r(42706),s=r(28203),i=r(45994),o=r(39187);let l=new(r(96330)).PrismaClient;async function d(e){let t=new URL(e.url).searchParams.get("employeeId");if(!t)return o.NextResponse.json({error:"Employee ID is required"},{status:400});let r=new Date;r.setHours(0,0,0,0);let n=new Date(r);n.setDate(r.getDate()+1);try{let s=await l.user.findUnique({where:{employeeId:t},select:{status:!0}});if(!s)return o.NextResponse.json({error:"Employee not found"},{status:404});let i=null;for(;!i||!i.timeIn;)(i=await l.dailyTimeRecord.findFirst({where:{employeeId:t,timeIn:{gte:r,lt:n}},orderBy:{timeIn:"asc"},select:{timeIn:!0}}))&&i.timeIn||await new Promise(e=>setTimeout(e,5e3));let d=new Date(i.timeIn),u=e=>e.reduce((e,t)=>{let r=new Date(t.start);if(isNaN(r.getTime()))return console.warn(`Invalid start time for log: ${JSON.stringify(t)}`),e;let n=t.end?new Date(t.end):new Date;return isNaN(n.getTime())?(console.warn(`Invalid end time for log: ${JSON.stringify(t)}`),e):e+(n.getTime()-r.getTime())},0),c=async()=>{let e=await l.humanActivityLog.findMany({where:{employeeId:t,activity:"Sleeping",start:{gte:r}}}),n=await l.humanActivityLog.findMany({where:{employeeId:t,activity:"Idle",start:{gte:r}}}),a=await l.humanActivityLog.findFirst({where:{employeeId:t,start:{gte:r},end:null},orderBy:{start:"desc"},select:{activity:!0}}),s="Awake";a&&("Sleeping"===a.activity||"Idle"===a.activity)&&(s=a.activity);let i=u(n),o=u(e),c=new Date().getTime()-d.getTime(),p=i+o,m=100;return p>0&&(m=(c-p)/c*100),{idleTime:i,sleepingTime:o,productivityPercentage:m,totalTime:c,wakefulnessStatus:s}},{readable:p,writable:m}=new TransformStream,g=m.getWriter(),y=new TextEncoder;async function a(){let{idleTime:e,sleepingTime:t,productivityPercentage:r,totalTime:n,wakefulnessStatus:a}=await c(),i={employeeStatus:s.status,wakefulnessStatus:a,productivityPercentage:Math.round(r),idleTime:e,sleepingTime:t,totaltime:n};console.log(`data: ${JSON.stringify(i)}

`),g.write(y.encode(`data: ${JSON.stringify(i)}

`))}g.write(y.encode("event: open\ndata: Connection established\n\n"));let w=setInterval(a,3e3);return e.signal.addEventListener("abort",()=>{clearInterval(w),g.close()}),new Response(p,{headers:{"Content-Type":"text/event-stream","Cache-Control":"no-cache",Connection:"keep-alive"}})}catch(e){return console.error("❌ Error fetching dashboard data:",e),o.NextResponse.json({error:"Internal server error",details:e},{status:500})}}let u=new a.AppRouteRouteModule({definition:{kind:s.RouteKind.APP_ROUTE,page:"/employeeAPI/dashboard/route",pathname:"/employeeAPI/dashboard",filename:"route",bundlePath:"app/employeeAPI/dashboard/route"},resolvedPagePath:"C:\\Users\\justin\\Desktop\\vercel\\WFH-Monitoring\\src\\app\\employeeAPI\\dashboard\\route.tsx",nextConfigOutput:"",userland:n}),{workAsyncStorage:c,workUnitAsyncStorage:p,serverHooks:m}=u;function g(){return(0,i.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:p})}},18868:()=>{},78335:()=>{}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[638,5452],()=>r(54658));module.exports=n})();